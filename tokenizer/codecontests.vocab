in	-0
<unk>	0
<s>	0
</s>	0
;\	-1
▁=	-2
int	-3
▁i	-4
on	-5
▁s	-6
▁(	-7
{\	-8
);\	-9
}\	-10
or	-11
re	-12
▁l	-13
▁{\	-14
ut	-15
▁n	-16
an	-17
▁<	-18
▁1	-19
▁c	-20
st	-21
()	-22
\"	-23
▁f	-24
▁0	-25
▁+	-26
▁m	-27
▁}\	-28
)\	-29
er	-30
ong	-31
▁int	-32
▁a	-33
▁p	-34
▁if	-35
se	-36
▁-	-37
\'	-38
++	-39
▁re	-40
▁for	-41
ge	-42
:\	-43
ur	-44
en	-45
▁t	-46
▁long	-47
▁b	-48
nt	-49
ol	-50
▁j	-51
][	-52
urn	-53
turn	-54
it	-55
▁>	-56
de	-57
▁in	-58
ti	-59
rint	-60
le	-61
▁st	-62
▁d	-63
ing	-64
mp	-65
el	-66
];\	-67
▁return	-68
▁==	-69
▁r	-70
put	-71
▁v	-72
out	-73
▁ma	-74
ans	-75
▁x	-76
ar	-77
uti	-78
▁<<	-79
▁sol	-80
00	-81
++)	-82
▁*	-83
();\	-84
ad	-85
ua	-86
ang	-87
▁,	-88
ub	-89
ac	-90
ex	-91
am	-92
uage	-93
anguage	-94
▁language	-95
ution	-96
▁&	-97
▁"	-98
▁solution	-99
else	-100
St	-101
id	-102
▁0;\	-103
at	-104
um	-105
ort	-106
ew	-107
▁2	-108
▁\	-109
ext	-110
(\"	-111
al	-112
▁0;	-113
▁\"	-114
ring	-115
▁ans	-116
▁>>	-117
us	-118
li	-119
].	-120
sp	-121
▁\'	-122
nint	-123
▁k	-124
hi	-125
):\	-126
▁<=	-127
for	-128
▁w	-129
Int	-130
▁else	-131
cl	-132
print	-133
ma	-134
iz	-135
mport	-136
end	-137
▁print	-138
ue	-139
▁P	-140
can	-141
],	-142
▁new	-143
])	-144
▁+=	-145
ow	-146
▁y	-147
-1	-148
>\	-149
con	-150
long	-151
em	-152
ine	-153
\2	-154
String	-155
ni	-156
ir	-157
lic	-158
▁%	-159
ublic	-160
hile	-161
input	-162
std	-163
next	-164
▁main	-165
=0	-166
as	-167
▁C	-168
clu	-169
ange	-170
ct	-171
clude	-172
include	-173
av	-174
oid	-175
[]	-176
▁cin	-177
--	-178
▁1;	-179
▁cout	-180
ame	-181
▁1;\	-182
ava	-183
[0	-184
▁java	-185
[1	-186
▁S	-187
▁range	-188
\",	-189
▁/	-190
ch	-191
yst	-192
ace	-193
ystem	-194
ati	-195
().	-196
ize	-197
eg	-198
ve	-199
os	-200
▁std	-201
▁M	-202
ou	-203
1,	-204
def	-205
ce	-206
ader	-207
tif	-208
▁1)	-209
▁while	-210
atic	-211
())\	-212
ok	-213
▁ar	-214
▁!	-215
▁&&	-216
ap	-217
▁I	-218
Re	-219
ON	-220
nimport	-221
▁"#	-222
using	-223
TH	-224
tint	-225
lit	-226
▁PY	-227
THON	-228
▁PYTHON	-229
nusing	-230
PP	-231
io	-232
▁CPP	-233
(\"%	-234
ff	-235
tion	-236
split	-237
Reader	-238
▁name	-239
ll	-240
ream	-241
0000	-242
())	-243
ri	-244
tfor	-245
space	-246
()\	-247
ist	-248
od	-249
▁e	-250
▁namespace	-251
\\	-252
=1	-253
▁++	-254
bit	-255
+1	-256
ack	-257
size	-258
▁q	-259
▁static	-260
++;\	-261
▁T	-262
oub	-263
]\	-264
ner	-265
ouble	-266
oken	-267
]);\	-268
ctor	-269
op	-270
▁!=	-271
▁g	-272
))	-273
ount	-274
▁}	-275
bits	-276
ot	-277
++.	-278
stdc	-279
▁res	-280
▁max	-281
ush	-282
canner	-283
ate	-284
public	-285
len	-286
ass	-287
tre	-288
▁1,	-289
ra	-290
is	-291
(0	-292
▁0)	-293
▁u	-294
▁th	-295
//	-296
uff	-297
Ex	-298
System	-299
cep	-300
const	-301
▁void	-302
▁N	-303
th	-304
\3	-305
ception	-306
Exception	-307
▁A	-308
irst	-309
max	-310
▁input	-311
nfor	-312
▁h	-313
▁B	-314
));\	-315
ln	-316
emp	-317
▁{	-318
]=	-319
get	-320
▁dp	-321
ak	-322
nextInt	-323
){\	-324
());\	-325
▁>=	-326
ool	-327
▁|	-328
println	-329
▁ch	-330
▁String	-331
Token	-332
rit	-333
▁-1	-334
push	-335
Stream	-336
read	-337
back	-338
▁next	-339
ed	-340
▁sum	-341
air	-342
▁public	-343
▁min	-344
▁end	-345
cond	-346
nconst	-347
nput	-348
reak	-349
eger	-350
canf	-351
▁:	-352
[0]	-353
rue	-354
new	-355
alse	-356
);	-357
▁0,	-358
▁cl	-359
++)\	-360
ig	-361
ys	-362
util	-363
line	-364
Integer	-365
treturn	-366
first	-367
map	-368
and	-369
void	-370
▁1\	-371
app	-372
char	-373
▁con	-374
▁cnt	-375
\34	-376
om	-377
▁3	-378
ode	-379
),	-380
ere	-381
[2	-382
▁class	-383
row	-384
VA	-385
▁1]	-386
▁_	-387
▁scanf	-388
second	-389
\");\	-390
▁||	-391
OException	-392
par	-393
▁endl	-394
▁J	-395
append	-396
::	-397
izer	-398
▁out	-399
nvoid	-400
▁break	-401
ts	-402
=0;	-403
▁ve	-404
▁sc	-405
▁JA	-406
▁JAVA	-407
10	-408
(\'	-409
nc	-410
ered	-411
uffered	-412
▁F	-413
str	-414
▁num	-415
▁L	-416
riter	-417
ast	-418
gs	-419
min	-420
▁arr	-421
▁mod	-422
\')	-423
▁0\	-424
nprint	-425
tc	-426
▁printf	-427
==	-428
();	-429
▁len	-430
ase	-431
▁and	-432
parse	-433
import	-434
rra	-435
ul	-436
ufferedReader	-437
tin	-438
▁throw	-439
\20	-440
ath	-441
es	-442
))\	-443
tpublic	-444
][0	-445
num	-446
Writer	-447
▁sel	-448
nputStream	-449
▁self	-450
nlong	-451
])\	-452
▁vector	-453
vector	-454
▁System	-455
<<	-456
il	-457
▁double	-458
Line	-459
\";\	-460
▁Scanner	-461
▁args	-462
(),	-463
ab	-464
fs	-465
gth	-466
arr	-467
npublic	-468
▁10	-469
((	-470
nd	-471
▁o	-472
▁throws	-473
pair	-474
yp	-475
if	-476
▁cur	-477
la	-478
▁1);\	-479
while	-480
.*	-481
ns	-482
▁-=	-483
ndef	-484
et	-485
>>	-486
▁[	-487
▁true	-488
dp	-489
tinue	-490
][1	-491
.*;\	-492
Scanner	-493
define	-494
++){\	-495
▁read	-496
me	-497
set	-498
▁map	-499
Tokenizer	-500
▁mid	-501
▁((	-502
▁solve	-503
▁(!	-504
sum	-505
length	-506
(0);\	-507
▁get	-508
ind	-509
2,	-510
**	-511
▁//	-512
AX	-513
egin	-514
##	-515
\")\	-516
string	-517
▁count	-518
Long	-519
nif	-520
=1\	-521
rintWriter	-522
ith	-523
▁str	-524
▁bool	-525
val	-526
fr	-527
<=	-528
cur	-529
▁z	-530
begin	-531
count	-532
]]	-533
▁val	-534
▁ad	-535
cnt	-536
}"	-537
\')\	-538
▁IOException	-539
__	-540
▁continue	-541
res	-542
3\20	-543
▁R	-544
▁4	-545
▁list	-546
▁false	-547
tr	-548
lag	-549
NO	-550
ain	-551
+=	-552
ck	-553
ft	-554
pos	-555
\';\	-556
nb	-557
(1,	-558
▁D	-559
▁BufferedReader	-560
▁Integer	-561
rray	-562
tie	-563
list	-564
ES	-565
to	-566
▁5	-567
▁dfs	-568
▁de	-569
tb	-570
\343\20	-571
stdio	-572
▁pri	-573
000	-574
OD	-575
--;\	-576
ht	-577
▁?	-578
[1]	-579
add	-580
YES	-581
ver	-582
▁sys	-583
▁tmp	-584
▁pos	-585
)"	-586
readLine	-587
dex	-588
List	-589
▁is	-590
vate	-591
ost	-592
(1	-593
▁2;\	-594
telse	-595
▁it	-596
----	-597
▁the	-598
est	-599
oint	-600
ke	-601
▁10000	-602
empl	-603
};\	-604
==0	-605
▁\'0	-606
uffer	-607
tp	-608
ult	-609
sy	-610
LL	-611
--)	-612
parseInt	-613
()))\	-614
ull	-615
[]\	-616
▁(1	-617
▁StringTokenizer	-618
▁char	-619
tSystem	-620
1[	-621
▁1][	-622
nputStreamReader	-623
▁#	-624
▁or	-625
twhile	-626
▁string	-627
lo	-628
with	-629
(0,	-630
][0]	-631
0,	-632
=0\	-633
▁import	-634
elif	-635
▁PrintWriter	-636
2)	-637
▁sort	-638
MAX	-639
from	-640
▁br	-641
ert	-642
2[	-643
sync	-644
).	-645
▁to	-646
ile	-647
▁ret	-648
tst	-649
-1]	-650
▁pre	-651
▁op	-652
nn	-653
uto	-654
emplate	-655
▁temp	-656
Ch	-657
ean	-658
▁ll	-659
▁0:\	-660
lf	-661
tprint	-662
ype	-663
nin	-664
▁MOD	-665
▁-1;\	-666
art	-667
ro	-668
▁id	-669
7;\	-670
buffer	-671
ber	-672
▁Main	-673
uil	-674
]==	-675
1\2	-676
cd	-677
nextToken	-678
atch	-679
sort	-680
▁ios	-681
\',	-682
▁size	-683
▁2)	-684
ose	-685
▁se	-686
class	-687
ta	-688
Char	-689
IOException	-690
2;\	-691
nvector	-692
▁di	-693
=0;\	-694
ntemplate	-695
ree	-696
+=1\	-697
of	-698
nbool	-699
ninline	-700
▁tr	-701
[3	-702
readline	-703
->	-704
ore	-705
nelse	-706
▁flag	-707
dge	-708
omp	-709
▁add	-710
\"\	-711
na	-712
▁col	-713
NF	-714
ator	-715
▁pair	-716
▁G	-717
false	-718
di	-719
tlong	-720
ower	-721
tt	-722
▁null	-723
ord	-724
▁2;	-725
one	-726
▁vis	-727
act	-728
pop	-729
▁1];\	-730
stdin	-731
sc	-732
rrayList	-733
=1;	-734
que	-735
up	-736
▁Fast	-737
xt	-738
*(	-739
tString	-740
uild	-741
▁private	-742
mod	-743
ight	-744
▁nextInt	-745
▁tot	-746
▁mem	-747
stream	-748
ty	-749
▁100000000	-750
▁up	-751
his	-752
eck	-753
▁Input	-754
At	-755
da	-756
node	-757
▁9	-758
maxn	-759
self	-760
Double	-761
▁le	-762
1.	-763
tstatic	-764
te	-765
20	-766
2\2	-767
writ	-768
▁E	-769
now	-770
▁boolean	-771
double	-772
sert	-773
vis	-774
rt	-775
lem	-776
():\	-777
charAt	-778
][1]	-779
close	-780
has	-781
base	-782
▁[]\	-783
▁\'\\	-784
(){\	-785
putStream	-786
erator	-787
rent	-788
▁ab	-789
un	-790
▁H	-791
▁const	-792
▁elif	-793
okenizer	-794
im	-795
able	-796
!=	-797
64	-798
####	-799
▁gcd	-800
▁Math	-801
▁mx	-802
uer	-803
Out	-804
tans	-805
uf	-806
auto	-807
%2	-808
\343\201\2	-809
▁node	-810
ound	-811
ent	-812
▁__	-813
ign	-814
▁^	-815
5\2	-816
??	-817
abs	-818
index	-819
pre	-820
rrays	-821
5];\	-822
ata	-823
\'\	-824
[10000	-825
uct	-826
▁0)\	-827
-1,	-828
ime	-829
▁not	-830
ename	-831
InputStream	-832
ypename	-833
2.	-834
▁def	-835
][2	-836
]++;\	-837
];	-838
▁ex	-839
lld	-840
▁he	-841
▁-1,	-842
1)	-843
uery	-844
sed	-845
▁set	-846
ction	-847
▁INF	-848
(2	-849
\':\	-850
amb	-851
BufferedReader	-852
▁catch	-853
tmp	-854
ash	-855
▁now	-856
50	-857
▁6	-858
\27	-859
ypedef	-860
idx	-861
nfrom	-862
]:\	-863
ambda	-864
▁put	-865
1;\	-866
sk	-867
▁*=	-868
ray	-869
he	-870
▁of	-871
▁first	-872
..	-873
ntypedef	-874
▁Long	-875
left	-876
▁dist	-877
ion	-878
▁0);\	-879
▁--	-880
▁1)\	-881
▁\'0\'	-882
)(	-883
fl	-884
▁abs	-885
▁sizeof	-886
)]\	-887
return	-888
2\	-889
mid	-890
br	-891
nstr	-892
--------	-893
>0	-894
▁\"\\	-895
>=	-896
▁ra	-897
rip	-898
11	-899
tout	-900
▁memset	-901
>();\	-902
insert	-903
-1)	-904
▁getchar	-905
▁True	-906
▁2,	-907
ove	-908
▁;	-909
▁line	-910
nstruct	-911
▁last	-912
raw	-913
)):\	-914
▁ArrayList	-915
▁mp	-916
write	-917
]-	-918
More	-919
per	-920
▁math	-921
▁V	-922
fi	-923
==1	-924
0;\	-925
24	-926
▁;\	-927
[4	-928
▁try	-929
olve	-930
▁K	-931
hasMore	-932
nwhile	-933
tcin	-934
▁-1)	-935
▁result	-936
ctions	-937
top	-938
▁fr	-939
igned	-940
parseLong	-941
oin	-942
()]\	-943
=(	-944
▁sz	-945
▁rep	-946
&&	-947
nl	-948
mx	-949
strip	-950
+1,	-951
▁InputReader	-952
temp	-953
date	-954
▁raw	-955
3,	-956
ep	-957
▁adj	-958
Array	-959
inal	-960
ii	-961
flag	-962
+\"	-963
▁\";\	-964
▁gr	-965
▁%=	-966
cle	-967
▁edge	-968
▁1:\	-969
▁Q	-970
value	-971
nsigned	-972
▁\");\	-973
▁7	-974
(-1	-975
tScanner	-976
lections	-977
math	-978
▁nextLong	-979
▁check	-980
typename	-981
+1)	-982
▁find	-983
▁left	-984
ax	-985
▁MAX	-986
uilder	-987
main	-988
cin	-989
ls	-990
wap	-991
Math	-992
endl	-993
tcout	-994
▁10;\	-995
ght	-996
2);\	-997
Arrays	-998
nans	-999
Builder	-1000
MAXN	-1001
53	-1002
Set	-1003
/\	-1004
▁X	-1005
Stack	-1006
find	-1007
td	-1008
name	-1009
No	-1010
OutputStream	-1011
[10	-1012
make	-1013
wer	-1014
▁1])	-1015
tpri	-1016
▁start	-1017
nx	-1018
col	-1019
▁os	-1020
[0][	-1021
▁lo	-1022
){	-1023
▁right	-1024
iostream	-1025
ents	-1026
PrintWriter	-1027
▁/=	-1028
tot	-1029
▁as	-1030
6\2	-1031
verse	-1032
▁tokenizer	-1033
▁inf	-1034
=1;\	-1035
▁7;\	-1036
▁this	-1037
[5	-1038
[2]	-1039
▁fi	-1040
▁operator	-1041
▁idx	-1042
err	-1043
nclass	-1044
ULL	-1045
▁par	-1046
pow	-1047
IO	-1048
▁cost	-1049
});\	-1050
mat	-1051
Map	-1052
ask	-1053
tprivate	-1054
▁8	-1055
empty	-1056
right	-1057
pp	-1058
tn	-1059
99	-1060
▁query	-1061
////	-1062
ces	-1063
2)\	-1064
tbreak	-1065
Tr	-1066
range	-1067
si	-1068
[(	-1069
ard	-1070
▁cal	-1071
▁lambda	-1072
Tokens	-1073
]==\'	-1074
▁second	-1075
▁tree	-1076
▁number	-1077
▁pr	-1078
join	-1079
...	-1080
****	-1081
▁hi	-1082
]+	-1083
▁1].	-1084
ation	-1085
(!	-1086
yte	-1087
▁puts	-1088
[][	-1089
start	-1090
▁test	-1091
sub	-1092
▁False	-1093
▁scan	-1094
ven	-1095
qrt	-1096
▁dis	-1097
hasMoreTokens	-1098
=[]\	-1099
ter	-1100
▁ro	-1101
ont	-1102
,\	-1103
.0	-1104
▁que	-1105
Yes	-1106
\345\2	-1107
▁\'9	-1108
Of	-1109
▁\",	-1110
ited	-1111
Trace	-1112
StackTrace	-1113
tx	-1114
({	-1115
▁reader	-1116
▁\'-	-1117
printStackTrace	-1118
ld	-1119
▁fa	-1120
;}\	-1121
edge	-1122
all	-1123
▁swap	-1124
flush	-1125
nm	-1126
▁100	-1127
igit	-1128
▁ok	-1129
1];\	-1130
2(	-1131
▁comp	-1132
NULL	-1133
aph	-1134
IN	-1135
▁\'.	-1136
())):\	-1137
▁:\	-1138
ity	-1139
=[	-1140
true	-1141
43	-1142
▁pw	-1143
low	-1144
▁index	-1145
ps	-1146
▁Double	-1147
▁file	-1148
2;	-1149
qua	-1150
//\	-1151
▁stdin	-1152
nchar	-1153
▁mat	-1154
▁vec	-1155
▁final	-1156
==0:\	-1157
5],	-1158
▁1000000007;\	-1159
\');\	-1160
=\"	-1161
tf	-1162
>(	-1163
▁W	-1164
\")	-1165
▁update	-1166
pl	-1167
▁Exception	-1168
▁total	-1169
gr	-1170
▁StringBuilder	-1171
▁make	-1172
ect	-1173
ise	-1174
In	-1175
+1\	-1176
time	-1177
odd	-1178
parseDouble	-1179
▁2\	-1180
pace	-1181
stdout	-1182
▁point	-1183
(0)\	-1184
np	-1185
solve	-1186
100	-1187
▁inv	-1188
ey	-1189
arent	-1190
▁maxn	-1191
root	-1192
9;\	-1193
(*	-1194
unc	-1195
▁*/\	-1196
[][]	-1197
▁2);\	-1198
5;\	-1199
14	-1200
+1):\	-1201
gh	-1202
▁FastScanner	-1203
\343\202\2	-1204
!=0	-1205
+1]	-1206
▁init	-1207
nstring	-1208
34	-1209
rime	-1210
▁)	-1211
nextLong	-1212
▁mn	-1213
dist	-1214
ek	-1215
tl	-1216
tm	-1217
00010	-1218
rem	-1219
▁nextDouble	-1220
▁sb	-1221
▁all	-1222
▁on	-1223
▁go	-1224
3\2	-1225
▁U	-1226
▁(0	-1227
▁pow	-1228
▁fact	-1229
▁from	-1230
erase	-1231
\":\	-1232
cost	-1233
clear	-1234
▁FastReader	-1235
▁collections	-1236
▁1))	-1237
[1][	-1238
▁ind	-1239
queue	-1240
[0])	-1241
▁mul	-1242
ink	-1243
<>();\	-1244
▁dep	-1245
are	-1246
▁curr	-1247
-1):\	-1248
1);\	-1249
▁1],	-1250
########	-1251
▁ss	-1252
Num	-1253
▁array	-1254
try	-1255
60	-1256
ug	-1257
[100	-1258
():	-1259
[++	-1260
▁{}\	-1261
sys	-1262
ptr	-1263
1=	-1264
front	-1265
32	-1266
▁\'0\';\	-1267
18	-1268
7\2	-1269
._	-1270
bj	-1271
▁\'1	-1272
):	-1273
▁Y	-1274
▁"\	-1275
????	-1276
ay	-1277
[0]\	-1278
▁ac	-1279
▁prev	-1280
Point	-1281
▁seg	-1282
▁value	-1283
▁en	-1284
([	-1285
tain	-1286
tres	-1287
00000	-1288
ic	-1289
▁root	-1290
<<\"	-1291
[0].	-1292
\',\'	-1293
bound	-1294
)%	-1295
[0],	-1296
▁at	-1297
igInteger	-1298
▁dx	-1299
lements	-1300
ret	-1301
▁File	-1302
56	-1303
▁nxt	-1304
our	-1305
▁top	-1306
▁data	-1307
-1;	-1308
array	-1309
▁ne	-1310
isect	-1311
▁99	-1312
pr	-1313
fa	-1314
▁used	-1315
▁dy	-1316
==\'	-1317
ArrayList	-1318
ip	-1319
▁an	-1320
tbool	-1321
▁com	-1322
▁xrange	-1323
-2	-1324
▁(;	-1325
+1)\	-1326
(2,	-1327
▁calc	-1328
rob	-1329
Space	-1330
\",&	-1331
lower	-1332
buf	-1333
▁answer	-1334
ne	-1335
-1]\	-1336
▁diff	-1337
=0,	-1338
tdouble	-1339
)/	-1340
+(	-1341
▁1]);\	-1342
last	-1343
]){\	-1344
fd	-1345
EP	-1346
ero	-1347
txt	-1348
-1;\	-1349
▁Point	-1350
());	-1351
ss	-1352
824	-1353
▁3)	-1354
=\'	-1355
[:	-1356
▁time	-1357
cout	-1358
StringTokenizer	-1359
lines	-1360
ers	-1361
13	-1362
]))	-1363
82443	-1364
check	-1365
},	-1366
▁Task	-1367
▁exit	-1368
loat	-1369
-1][	-1370
tree	-1371
▁build	-1372
▁1000	-1373
gor	-1374
▁Hash	-1375
sz	-1376
))"	-1377
1\	-1378
number	-1379
▁bit	-1380
▁low	-1381
-1\	-1382
wo	-1383
comp	-1384
dict	-1385
To	-1386
▁be	-1387
)))\	-1388
▁sp	-1389
key	-1390
tscanf	-1391
[0];\	-1392
ithm	-1393
▁cmp	-1394
\346\2	-1395
gorithm	-1396
nelif	-1397
26	-1398
▁pl	-1399
8244353	-1400
rix	-1401
1(	-1402
toString	-1403
FS	-1404
▁*\	-1405
2*	-1406
tains	-1407
]));\	-1408
▁row	-1409
▁scanner	-1410
ZE	-1411
inf	-1412
]];\	-1413
Max	-1414
▁buf	-1415
rag	-1416
init	-1417
▁push	-1418
algorithm	-1419
▁20	-1420
ble	-1421
▁5;\	-1422
++]	-1423
]].	-1424
code	-1425
4,	-1426
]*	-1427
▁auto	-1428
(\"\\	-1429
▁prime	-1430
lim	-1431
▁26	-1432
)));\	-1433
hild	-1434
----------------	-1435
▁head	-1436
▁[]	-1437
)*	-1438
rr	-1439
▁\"\";\	-1440
digit	-1441
▁@	-1442
15	-1443
oth	-1444
nk	-1445
▁[0]	-1446
▁sub	-1447
SpaceChar	-1448
data	-1449
▁nextLine	-1450
mask	-1451
Count	-1452
▁1000000007	-1453
▁1));\	-1454
tokenizer	-1455
used	-1456
2=	-1457
▁can	-1458
00000000	-1459
▁rem	-1460
▁>>=	-1461
ttry	-1462
]))\	-1463
▁base	-1464
)]	-1465
own	-1466
IZE	-1467
mn	-1468
throw	-1469
ors	-1470
||	-1471
▁bisect	-1472
▁\'-\')	-1473
▁solver	-1474
curr	-1475
nll	-1476
ny	-1477
2:\	-1478
+1][	-1479
▁pi	-1480
\320	-1481
lang	-1482
(10	-1483
▁stream	-1484
▁one	-1485
12	-1486
result	-1487
continue	-1488
▁lc	-1489
▁cerr	-1490
▁power	-1491
▁1):\	-1492
\",\"	-1493
prag	-1494
pragma	-1495
+1);\	-1496
match	-1497
tBufferedReader	-1498
▁sh	-1499
▁ord	-1500
)-	-1501
tdp	-1502
True	-1503
**\	-1504
▁IO	-1505
zy	-1506
]),	-1507
▁(0);	-1508
▁sorted	-1509
-=	-1510
-=1\	-1511
red	-1512
▁3;	-1513
point	-1514
ndouble	-1515
INF	-1516
dis	-1517
\':	-1518
resize	-1519
▁best	-1520
5,	-1521
ach	-1522
\"\"	-1523
▁lst	-1524
tim	-1525
▁visited	-1526
bin	-1527
1][	-1528
tboolean	-1529
ite	-1530
▁fl	-1531
(1);\	-1532
▁Arrays	-1533
▁998244353	-1534
seek	-1535
[20000	-1536
writable	-1537
ec	-1538
bject	-1539
2]	-1540
ault	-1541
Val	-1542
▁mi	-1543
--)\	-1544
ostream	-1545
▁case	-1546
tsum	-1547
nxt	-1548
Node	-1549
tprintf	-1550
▁do	-1551
word	-1552
sible	-1553
▁\"+	-1554
1)\	-1555
1;	-1556
▁la	-1557
27	-1558
no	-1559
▁O	-1560
Output	-1561
▁heap	-1562
(\"0	-1563
▁-1);\	-1564
1]	-1565
\")"	-1566
▁1);	-1567
type	-1568
ance	-1569
lambda	-1570
▁\')\	-1571
\'0	-1572
▁\'9\')	-1573
▁^=	-1574
▁3;\	-1575
▁2]	-1576
(\"-1	-1577
[0])\	-1578
▁graph	-1579
fact	-1580
req	-1581
57	-1582
vec	-1583
▁fac	-1584
age	-1585
▁-1\	-1586
ial	-1587
test	-1588
quals	-1589
com	-1590
/2	-1591
[]=	-1592
ools	-1593
]!=	-1594
▁GC	-1595
ority	-1596
+1;\	-1597
▁2)\	-1598
▁by	-1599
▁**	-1600
;++	-1601
▁tt	-1602
+1];\	-1603
dep	-1604
cc	-1605
adj	-1606
-1)\	-1607
MOD	-1608
roblem	-1609
▁MAXN	-1610
ninput	-1611
gcd	-1612
LU	-1613
[100000	-1614
====	-1615
▁run	-1616
▁cc	-1617
(\"\");\	-1618
/**\	-1619
[0][0]	-1620
hor	-1621
0)	-1622
==0)	-1623
Col	-1624
gn	-1625
tcount	-1626
////////	-1627
nextLine	-1628
AA	-1629
sqrt	-1630
47	-1631
▁{0,	-1632
Tree	-1633
][3	-1634
ated	-1635
▁inp	-1636
▁bo	-1637
diff	-1638
▁sm	-1639
erge	-1640
3;\	-1641
▁sqrt	-1642
▁key	-1643
null	-1644
-(	-1645
rk	-1646
<(	-1647
Hash	-1648
)+	-1649
[-1]	-1650
]][	-1651
▁OutputStream	-1652
▁are	-1653
▁mask	-1654
▁Output	-1655
ly	-1656
64_	-1657
\']	-1658
\'.	-1659
exit	-1660
tes	-1661
▁4;	-1662
▁1),	-1663
1\20	-1664
▁del	-1665
Time	-1666
nr	-1667
▁arg	-1668
andom	-1669
▁li	-1670
▁aa	-1671
▁si	-1672
cstdio	-1673
vi	-1674
ank	-1675
vel	-1676
▁xx	-1677
▁has	-1678
File	-1679
(-1)\	-1680
ary	-1681
remove	-1682
▁(2	-1683
Sum	-1684
10];\	-1685
(3	-1686
.\	-1687
▁odd	-1688
▁Node	-1689
********	-1690
▁reverse	-1691
ment	-1692
[])	-1693
▁Ru	-1694
dx	-1695
contains	-1696
dd	-1697
OR	-1698
\30	-1699
Number	-1700
trep	-1701
equals	-1702
mes	-1703
▁current	-1704
Mis	-1705
[1])	-1706
tk	-1707
Next	-1708
LUE	-1709
▁my	-1710
▁al	-1711
▁ii	-1712
VALUE	-1713
]--;\	-1714
,0,	-1715
tchar	-1716
gist	-1717
▁word	-1718
,&	-1719
2):\	-1720
ave	-1721
Chars	-1722
qu	-1723
inv	-1724
gister	-1725
[3]	-1726
nmap	-1727
▁parent	-1728
▁co	-1729
▁bin	-1730
aultdict	-1731
ell	-1732
Byte	-1733
limit	-1734
uthor	-1735
newlines	-1736
]>	-1737
▁unsigned	-1738
ng	-1739
▁eps	-1740
<<(	-1741
▁byte	-1742
▁REP	-1743
Input	-1744
[0]);\	-1745
[1])\	-1746
▁putchar	-1747
current	-1748
]])	-1749
reverse	-1750
bug	-1751
▁edges	-1752
(0),	-1753
ition	-1754
nf	-1755
▁that	-1756
open	-1757
CharArray	-1758
][0],	-1759
2];\	-1760
▁high	-1761
other	-1762
▁ta	-1763
3\	-1764
prev	-1765
(-1);\	-1766
ER	-1767
▁rt	-1768
For	-1769
Edge	-1770
sh	-1771
▁2:\	-1772
ork	-1773
▁wh	-1774
ntime	-1775
iterator	-1776
▁queue	-1777
[1].	-1778
olution	-1779
stack	-1780
args	-1781
1],	-1782
▁ptr	-1783
tw	-1784
▁);\	-1785
toCharArray	-1786
bo	-1787
▁typename	-1788
bool	-1789
ux	-1790
▁per	-1791
▁|=	-1792
Mismatch	-1793
▁GCC	-1794
BigInteger	-1795
aa	-1796
upper	-1797
cal	-1798
▁lower	-1799
)1	-1800
][2]	-1801
[1],	-1802
▁neg	-1803
▁(1);	-1804
▁=\	-1805
npair	-1806
▁mark	-1807
[-1	-1808
isSpaceChar	-1809
7,	-1810
ear	-1811
)){\	-1812
\347\2	-1813
==1:\	-1814
place	-1815
case	-1816
▁nums	-1817
\"\"\"\	-1818
ueue	-1819
query	-1820
▁IN	-1821
▁lim	-1822
fill	-1823
9,	-1824
(\"1	-1825
>&	-1826
tStringTokenizer	-1827
0;	-1828
ncount	-1829
▁Pair	-1830
opy	-1831
0\	-1832
output	-1833
▁pq	-1834
\342\2	-1835
ill	-1836
▁)\	-1837
lement	-1838
\';	-1839
xx	-1840
lock	-1841
));	-1842
▁0){\	-1843
▁counter	-1844
/*	-1845
▁≤	-1846
nT	-1847
prime	-1848
ceil	-1849
44	-1850
arget	-1851
(1)\	-1852
]]++;\	-1853
tvoid	-1854
++,	-1855
tarr	-1856
eight	-1857
▁InputStream	-1858
go	-1859
▁&&\	-1860
<0	-1861
37	-1862
Index	-1863
lst	-1864
▁pp	-1865
oll	-1866
inp	-1867
sion	-1868
▁no	-1869
-1);\	-1870
>;\	-1871
]==0	-1872
▁output	-1873
▁0.	-1874
[\'	-1875
unction	-1876
>,	-1877
ytes	-1878
tPrintWriter	-1879
ompar	-1880
[20	-1881
▁None	-1882
▁color	-1883
▁Count	-1884
mi	-1885
Pos	-1886
[1]);\	-1887
▁\'0\')	-1888
visited	-1889
▁pro	-1890
PS	-1891
total	-1892
emplace	-1893
nums	-1894
▁io	-1895
▁length	-1896
scanf	-1897
▁ni	-1898
tv	-1899
rstrip	-1900
Base	-1901
▁stack	-1902
▁step	-1903
__(	-1904
▁\';\	-1905
\'){\	-1906
[1]\	-1907
▁even	-1908
this	-1909
tll	-1910
▁change	-1911
rc	-1912
reader	-1913
nA	-1914
cis	-1915
16	-1916
sb	-1917
ays	-1918
*2	-1919
asc	-1920
3)	-1921
//2	-1922
mul	-1923
▁writ	-1924
-8	-1925
[6	-1926
4\27	-1927
▁md	-1928
▁inputStream	-1929
fix	-1930
+1;	-1931
substring	-1932
▁two	-1933
Pair	-1934
ry	-1935
▁imp	-1936
author	-1937
▁\34	-1938
▁+\	-1939
▁yy	-1940
▁path	-1941
▁Runtime	-1942
▁ed	-1943
file	-1944
seg	-1945
isdigit	-1946
][0];\	-1947
▁Buffered	-1948
sorted	-1949
1:\	-1950
cision	-1951
▁Max	-1952
▁bl	-1953
▁defaultdict	-1954
(\"%.	-1955
[4]	-1956
▁deque	-1957
tArrays	-1958
lay	-1959
*-	-1960
%2==0	-1961
inputStream	-1962
[2][	-1963
▁optim	-1964
ations	-1965
▁Mod	-1966
ascii	-1967
▁LL	-1968
]==1	-1969
()){\	-1970
0);\	-1971
ater	-1972
▁outputStream	-1973
▁div	-1974
ark	-1975
tvector	-1976
▁move	-1977
lis	-1978
▁\"0	-1979
throws	-1980
▁merge	-1981
()"	-1982
▁HashMap	-1983
▁\"\"	-1984
tthis	-1985
▁998244353;\	-1986
▁EPS	-1987
▁The	-1988
ertools	-1989
nst	-1990
▁PI	-1991
▁};\	-1992
\')"	-1993
▁\")\	-1994
▁writer	-1995
▁rec	-1996
ies	-1997
tcnt	-1998
precision	-1999
outputStream	-2000
▁nx	-2001
][2];\	-2002
Elements	-2003
ca	-2004
▁integer	-2005
rapp	-2006
▁need	-2007
tbr	-2008
▁stdout	-2009
tcontinue	-2010
unsigned	-2011
)))	-2012
▁Counter	-2013
▁open	-2014
Min	-2015
ha	-2016
()))	-2017
uple	-2018
Queue	-2019
dfs	-2020
46	-2021
>0:\	-2022
valueOf	-2023
hs	-2024
uck	-2025
hasMoreElements	-2026
item	-2027
▁lazy	-2028
imum	-2029
tmax	-2030
▁strlen	-2031
00010];\	-2032
replace	-2033
rapper	-2034
ock	-2035
▁(((	-2036
[1];\	-2037
qr	-2038
parent	-2039
[200	-2040
su	-2041
eld	-2042
erate	-2043
▁acos	-2044
__\':\	-2045
▁{1,	-2046
▁sgn	-2047
▁InputMismatch	-2048
ST	-2049
▁cy	-2050
False	-2051
17	-2052
Object	-2053
################	-2054
[1000	-2055
\343\201\256	-2056
[1:	-2057
Wrapper	-2058
▁-1)\	-2059
igh	-2060
▁\".	-2061
00\2	-2062
▁BigInteger	-2063
▁List	-2064
run	-2065
\350	-2066
//2\	-2067
>::	-2068
▁ls	-2069
ual	-2070
▁IOWrapper	-2071
FSIZE	-2072
▁My	-2073
>=0	-2074
\343\203\2	-2075
telif	-2076
19	-2077
▁sy	-2078
UFSIZE	-2079
ytesIO	-2080
imal	-2081
mpty	-2082
▁\'__	-2083
\344\27	-2084
▁Re	-2085
sm	-2086
▁grid	-2087
▁fast	-2088
-1];\	-2089
riority	-2090
head	-2091
▁compare	-2092
▁48	-2093
▁using	-2094
[100005];\	-2095
▁bb	-2096
oss	-2097
printf	-2098
(2*	-2099
cr	-2100
▁itertools	-2101
ilter	-2102
2][	-2103
▁deg	-2104
fac	-2105
(0)	-2106
18;\	-2107
substr	-2108
register	-2109
stat	-2110
▁ps	-2111
]<	-2112
5)	-2113
Di	-2114
\320\27	-2115
40	-2116
--){\	-2117
ant	-2118
deg	-2119
▁maxi	-2120
▁-*-	-2121
▁sa	-2122
\'\'	-2123
umerate	-2124
nv	-2125
[::	-2126
▁code	-2127
????????	-2128
▁optimize	-2129
narr	-2130
▁py	-2131
33	-2132
not	-2133
▁2];\	-2134
▁rr	-2135
▁su	-2136
▁pref	-2137
9+	-2138
25\2	-2139
▁debug	-2140
py	-2141
loor	-2142
▁FastIO	-2143
▁26;	-2144
Not	-2145
acter	-2146
neg	-2147
++];\	-2148
oup	-2149
Key	-2150
▁ce	-2151
▁fix	-2152
▁\"1	-2153
▁me	-2154
ai	-2155
▁upd	-2156
▁\'#	-2157
ify	-2158
Value	-2159
order	-2160
▁enumerate	-2161
▁qu	-2162
-1])	-2163
float	-2164
▁cr	-2165
▁Tree	-2166
(_	-2167
);}\	-2168
inked	-2169
child	-2170
[8	-2171
break	-2172
▁heapq	-2173
co	-2174
lex	-2175
0.	-2176
\35	-2177
▁3,	-2178
▁mo	-2179
▁type	-2180
30	-2181
pri	-2182
IT	-2183
▁ny	-2184
ake	-2185
▁ct	-2186
▁exp	-2187
▁item	-2188
▁implements	-2189
LE	-2190
isE	-2191
▁depth	-2192
▁2*	-2193
old	-2194
▁memo	-2195
son	-2196
tri	-2197
Len	-2198
▁readByte	-2199
]+=	-2200
▁rev	-2201
▁2),	-2202
]%	-2203
();}\	-2204
____	-2205
▁dir	-2206
25	-2207
▁bfs	-2208
\302\2	-2209
32_	-2210
▁matrix	-2211
▁ge	-2212
6,	-2213
▁write	-2214
▁assert	-2215
97	-2216
▁vi	-2217
elper	-2218
tF	-2219
▁\\	-2220
▁Num	-2221
▁hash	-2222
(-	-2223
▁tim	-2224
(\'0	-2225
[0]*	-2226
tmin	-2227
▁pt	-2228
▁un	-2229
▁uni	-2230
Prime	-2231
etter	-2232
+2	-2233
cmath	-2234
IM	-2235
bl	-2236
▁Edge	-2237
inkedList	-2238
rd	-2239
-1:\	-2240
rev	-2241
▁with	-2242
▁zero	-2243
▁score	-2244
thon	-2245
▁0):\	-2246
tq	-2247
▁Compar	-2248
0};\	-2249
tj	-2250
500	-2251
cess	-2252
\"));\	-2253
De	-2254
▁tp	-2255
6];\	-2256
▁Solution	-2257
▁lcm	-2258
graph	-2259
tg	-2260
mple	-2261
\":	-2262
▁\'?	-2263
Arr	-2264
(0);	-2265
+=(	-2266
color	-2267
log	-2268
forces	-2269
▁fill	-2270
__\":\	-2271
▁primes	-2272
Le	-2273
reater	-2274
▁work	-2275
nset	-2276
▁1.0	-2277
[2];\	-2278
52	-2279
▁dd	-2280
▁float	-2281
▁\'.\')	-2282
Found	-2283
]],	-2284
68	-2285
5\	-2286
cy	-2287
▁vv	-2288
▁target	-2289
arch	-2290
pppp	-2291
▁In	-2292
tnew	-2293
1+	-2294
ded	-2295
[],	-2296
▁other	-2297
▁HashSet	-2298
ud	-2299
▁Ans	-2300
zero	-2301
▁0};\	-2302
nw	-2303
▁[0	-2304
ends	-2305
▁BytesIO	-2306
high	-2307
▁siz	-2308
#\	-2309
▁readInt	-2310
%2==0:\	-2311
]):\	-2312
Ans	-2313
▁gi	-2314
-1])\	-2315
▁(*	-2316
nres	-2317
\320\2	-2318
▁mini	-2319
arg	-2320
best	-2321
▁log	-2322
▁ceil	-2323
mark	-2324
][1];\	-2325
dered	-2326
▁Th	-2327
fstat	-2328
▁\'0\');\	-2329
Collections	-2330
▁inter	-2331
5][	-2332
OF	-2333
▁points	-2334
ence	-2335
▁\'*	-2336
▁\"__	-2337
▁pb	-2338
▁10;	-2339
▁testNumber	-2340
reopen	-2341
(\"-1\");\	-2342
▁CH	-2343
tcur	-2344
)==	-2345
ome	-2346
cstring	-2347
▁5,	-2348
▁cap	-2349
UT	-2350
answer	-2351
uni	-2352
▁dec	-2353
▁||\	-2354
▁ns	-2355
▁tc	-2356
▁upper	-2357
AC	-2358
fn	-2359
▁ext	-2360
▁INT	-2361
orial	-2362
1-	-2363
9999	-2364
▁){\	-2365
tpw	-2366
AR	-2367
ctual	-2368
2-	-2369
▁10)	-2370
(\'\\	-2371
\'):\	-2372
1000	-2373
down	-2374
Format	-2375
▁4)	-2376
mut	-2377
isEmpty	-2378
▁4;\	-2379
23	-2380
▁nd	-2381
scan	-2382
][1],	-2383
▁you	-2384
SE	-2385
even	-2386
First	-2387
▁Ar	-2388
decode	-2389
(4	-2390
mode	-2391
▁aux	-2392
000000	-2393
10],	-2394
▁FileReader	-2395
!=0:\	-2396
▁nl	-2397
▁tm	-2398
▁18	-2399
▁po	-2400
7\	-2401
NotFound	-2402
mem	-2403
28	-2404
▁freq	-2405
Over	-2406
▁fin	-2407
tnum	-2408
▁fixed	-2409
▁buffer	-2410
\"))\	-2411
10;\	-2412
>=0;	-2413
▁->	-2414
otal	-2415
ron	-2416
hite	-2417
1):\	-2418
eve	-2419
58	-2420
▁\'+	-2421
HashMap	-2422
cap	-2423
(){	-2424
pt	-2425
eam	-2426
values	-2427
update	-2428
▁"//	-2429
▁ri	-2430
Case	-2431
▁nn	-2432
▁each	-2433
\32	-2434
▁inline	-2435
57\27	-2436
sa	-2437
▁\3	-2438
dy	-2439
ride	-2440
5\20	-2441
▁Reader	-2442
dir	-2443
▁digit	-2444
path	-2445
3[	-2446
yy	-2447
Se	-2448
1++;\	-2449
▁Number	-2450
nsys	-2451
-->0	-2452
vert	-2453
▁numbers	-2454
▁pa	-2455
3;	-2456
tstring	-2457
48	-2458
▁mm	-2459
▁we	-2460
());}\	-2461
[50	-2462
ute	-2463
nB	-2464
▁big	-2465
▁MyScanner	-2466
▁tl	-2467
▁0));\	-2468
▁child	-2469
),\	-2470
▁ver	-2471
00010],	-2472
uilt	-2473
\350\2	-2474
,1,	-2475
action	-2476
ackage	-2477
▁16	-2478
\'0\'	-2479
▁-1};\	-2480
--,	-2481
ick	-2482
ump	-2483
nullptr	-2484
rep	-2485
flow	-2486
heap	-2487
========	-2488
Override	-2489
AAAA	-2490
oding	-2491
=2;	-2492
tArrayList	-2493
nq	-2494
▁ty	-2495
ren	-2496
▁sx	-2497
▁found	-2498
▁inc	-2499
▁good	-2500
▁maxx	-2501
ix	-2502
*=	-2503
▁10**	-2504
5;	-2505
jk	-2506
▁St	-2507
10\	-2508
compare	-2509
nmax	-2510
tsb	-2511
ag	-2512
▁down	-2513
tsolve	-2514
////////////////	-2515
▁plug	-2516
.0);\	-2517
▁nodes	-2518
\"<<	-2519
tsort	-2520
▁pii	-2521
format	-2522
/2;\	-2523
]==\"	-2524
▁Actual	-2525
(((	-2526
]=(	-2527
▁dif	-2528
▁Built	-2529
ODO	-2530
()),	-2531
▁table	-2532
▁CHelper	-2533
utf	-2534
▁order	-2535
▁kk	-2536
MIN	-2537
00];\	-2538
▁flow	-2539
step	-2540
nN	-2541
▁1])\	-2542
▁qr	-2543
00;\	-2544
tell	-2545
tStringBuilder	-2546
\",\	-2547
IOBase	-2548
ust	-2549
▁\'1\')	-2550
▁setprecision	-2551
(\	-2552
ess	-2553
▁have	-2554
Mod	-2555
▁\"<<	-2556
▁el	-2557
(\"0\");\	-2558
▁3\	-2559
==0):\	-2560
▁BufferedWriter	-2561
be	-2562
lc	-2563
▁fun	-2564
bal	-2565
]]);\	-2566
▁var	-2567
riorityQueue	-2568
▁chk	-2569
][1])	-2570
we	-2571
numChars	-2572
orm	-2573
po	-2574
score	-2575
ards	-2576
-1-	-2577
nostream	-2578
)),	-2579
()):\	-2580
▁fs	-2581
\'\'\'\	-2582
Code	-2583
▁state	-2584
angle	-2585
AB	-2586
tR	-2587
sizeof	-2588
tthrow	-2589
▁DP	-2590
][0])	-2591
edges	-2592
cursion	-2593
nh	-2594
▁nextToken	-2595
tdfs	-2596
day	-2597
▁\"-1	-2598
ive	-2599
[7	-2600
▁(-	-2601
\".	-2602
▁minus	-2603
function	-2604
10000	-2605
▁BUFSIZE	-2606
*/\	-2607
-1]:\	-2608
ector	-2609
▁here	-2610
▁\'(\'	-2611
▁5;	-2612
ossible	-2613
div	-2614
copy	-2615
link	-2616
▁pass	-2617
▁lb	-2618
md	-2619
==0)\	-2620
tsc	-2621
Size	-2622
▁letter	-2623
ob	-2624
pi	-2625
[3];\	-2626
1111	-2627
counter	-2628
▁FOR	-2629
tflag	-2630
▁DFS	-2631
▁multi	-2632
▁bs	-2633
sse	-2634
▁TODO	-2635
▁tok	-2636
pb	-2637
hash	-2638
▁4,	-2639
[2],	-2640
\345\21	-2641
(\'1	-2642
▁seq	-2643
]).	-2644
▁"#!	-2645
var	-2646
usr	-2647
tok	-2648
▁vs	-2649
▁-1:\	-2650
▁dict	-2651
▁win	-2652
-1],	-2653
Buffer	-2654
▁delta	-2655
tret	-2656
del	-2657
trecursion	-2658
trecursionlimit	-2659
sol	-2660
77	-2661
ms	-2662
ordered	-2663
▁stk	-2664
FF	-2665
▁12	-2666
▁{-1,	-2667
nstatic	-2668
▁10,	-2669
▁Code	-2670
▁sk	-2671
thod	-2672
▁EOF	-2673
calc	-2674
LO	-2675
nj	-2676
ncnt	-2677
\357\27	-2678
▁rs	-2679
▁100000	-2680
sx	-2681
▁level	-2682
▁dic	-2683
my	-2684
alf	-2685
ecimal	-2686
FormatException	-2687
hasNext	-2688
▁cho	-2689
▁greater	-2690
▁am	-2691
▁]	-2692
containsKey	-2693
▁-1;	-2694
state	-2695
▁insert	-2696
]=1;\	-2697
4;\	-2698
ure	-2699
_1	-2700
▁acc	-2701
eros	-2702
<=1	-2703
3.	-2704
vl	-2705
af	-2706
▁coding	-2707
(1<<	-2708
****************	-2709
▁ai	-2710
▁ld	-2711
())))\	-2712
Sort	-2713
▁use	-2714
ya	-2715
++;	-2716
SIZE	-2717
problem	-2718
rs	-2719
)//	-2720
\"+	-2721
[200005];\	-2722
55	-2723
▁ti	-2724
▁tx	-2725
depth	-2726
bb	-2727
]);	-2728
▁cand	-2729
],\	-2730
7\27	-2731
==\"	-2732
[0][1]	-2733
▁block	-2734
AN	-2735
ones	-2736
)>	-2737
\343\202\213	-2738
pe	-2739
▁flush	-2740
]=\'	-2741
6;\	-2742
[0]+	-2743
nmod	-2744
)*(	-2745
:]\	-2746
2){\	-2747
])"	-2748
\351\2	-2749
▁close	-2750
oo	-2751
operator	-2752
nC	-2753
ndp	-2754
uiltin	-2755
tuple	-2756
/2)	-2757
rect	-2758
1),	-2759
seq	-2760
/(	-2761
exp	-2762
reated	-2763
cept	-2764
Character	-2765
/*\	-2766
[0][0	-2767
ulate	-2768
rbegin	-2769
ish	-2770
ios	-2771
▁rd	-2772
use	-2773
Print	-2774
builtin	-2775
▁Z	-2776
0\2	-2777
[30	-2778
getchar	-2779
\");	-2780
▁"#!/	-2781
▁OutputWriter	-2782
▁3.	-2783
gener	-2784
▁%\	-2785
▁func	-2786
▁20000	-2787
mpossible	-2788
....	-2789
0[	-2790
tmap	-2791
-1]+	-2792
▁nr	-2793
\"))	-2794
▁-1):\	-2795
man	-2796
[500	-2797
White	-2798
▁1};\	-2799
▁~	-2800
4\2	-2801
==0){\	-2802
[\"	-2803
INE	-2804
▁db	-2805
▁1]\	-2806
▁bad	-2807
[100005],	-2808
▁cs	-2809
▁Min	-2810
poll	-2811
%3	-2812
▁3:\	-2813
ttemp	-2814
▁divis	-2815
▁numChars	-2816
quence	-2817
tFast	-2818
▁comb	-2819
▁tag	-2820
▁ins	-2821
grid	-2822
▁same	-2823
ucky	-2824
▁utf	-2825
(5	-2826
_2	-2827
atrix	-2828
4\	-2829
]=0;\	-2830
Left	-2831
▁red	-2832
()));\	-2833
▁{0};\	-2834
nsum	-2835
[2*	-2836
▁readline	-2837
▁1))\	-2838
▁100;\	-2839
▁ff	-2840
])%	-2841
▁\"\"\	-2842
▁suf	-2843
keys	-2844
▁\');\	-2845
cmp	-2846
▁\'\'\	-2847
ead	-2848
power	-2849
▁possible	-2850
element	-2851
▁values	-2852
2++;\	-2853
[0]=	-2854
()]	-2855
▁mas	-2856
45	-2857
HashSet	-2858
8,	-2859
curChar	-2860
▁contains	-2861
▁ask	-2862
fore	-2863
==1)	-2864
▁[0]*	-2865
--;	-2866
arge	-2867
[100010];\	-2868
▁\'1\'	-2869
://	-2870
(2)\	-2871
ops	-2872
▁(!(	-2873
expr	-2874
▁lis	-2875
65	-2876
ice	-2877
▁sr	-2878
abc	-2879
▁Int	-2880
▁Comparable	-2881
ample	-2882
-9;\	-2883
olver	-2884
bs	-2885
▁so	-2886
▁Seg	-2887
▁template	-2888
win	-2889
▁1){\	-2890
▁method	-2891
nmain	-2892
]<=	-2893
pha	-2894
▁15	-2895
31	-2896
▁8;	-2897
-1))	-2898
▁isSpaceChar	-2899
ative	-2900
▁Col	-2901
▁ms	-2902
={	-2903
][1]);\	-2904
yes	-2905
move	-2906
▁2][	-2907
4;	-2908
level	-2909
▁python	-2910
*10	-2911
▁sl	-2912
matrix	-2913
hift	-2914
0)\	-2915
tA	-2916
▁freopen	-2917
ource	-2918
▁Auto	-2919
2\20	-2920
-1].	-2921
▁(\"	-2922
sin	-2923
▁nc	-2924
00;	-2925
▁sep	-2926
les	-2927
▁son	-2928
▁2):\	-2929
\343\202\22	-2930
▁lines	-2931
▁2],	-2932
cs	-2933
▁nb	-2934
[2])	-2935
tT	-2936
▁dat	-2937
tmem	-2938
xy	-2939
mon	-2940
▁\',	-2941
▁tri	-2942
nz	-2943
9)	-2944
clock	-2945
nS	-2946
▁\")	-2947
two	-2948
)==\'	-2949
generated	-2950
▁LinkedList	-2951
env	-2952
▁done	-2953
numbers	-2954
▁compareTo	-2955
159	-2956
AT	-2957
bitset	-2958
]+=1\	-2959
fter	-2960
floor	-2961
\343\202\222	-2962
\343\2	-2963
(;	-2964
▁day	-2965
▁CF	-2966
▁will	-2967
▁cont	-2968
▁zip	-2969
deque	-2970
lett	-2971
▁rest	-2972
ache	-2973
▁jj	-2974
▁$	-2975
\343\201\20	-2976
▁integers	-2977
AL	-2978
▁sw	-2979
▁off	-2980
▁random	-2981
▁mult	-2982
▁xs	-2983
▁0:	-2984
[-	-2985
nodes	-2986
▁TaskA	-2987
14159	-2988
\345\20	-2989
2],	-2990
▁sign	-2991
DE	-2992
ertex	-2993
udge	-2994
mo	-2995
▁9;	-2996
26\2	-2997
[1][1]	-2998
lazy	-2999
(3,	-3000
▁(1)	-3001
ready	-3002
▁327	-3003
▁bi	-3004
▁dr	-3005
Impossible	-3006
Dist	-3007
BU	-3008
▁10);\	-3009
▁ones	-3010
layer	-3011
1415926	-3012
4)	-3013
▁na	-3014
table	-3015
+1)]\	-3016
▁(~	-3017
maxi	-3018
oly	-3019
▁ev	-3020
▁priority	-3021
3)\	-3022
Cnt	-3023
▁prefix	-3024
tstr	-3025
▁31,	-3026
▁modify	-3027
vals	-3028
▁match	-3029
...);\	-3030
[11	-3031
▁-*-\	-3032
▁split	-3033
▁prod	-3034
tcase	-3035
100];\	-3036
[1][0]	-3037
▁\'.\'	-3038
+\'	-3039
▁7,	-3040
[30000	-3041
!=1	-3042
Cost	-3043
pq	-3044
▁sq	-3045
illis	-3046
nnum	-3047
ory	-3048
-2)	-3049
trim	-3050
iter	-3051
3);\	-3052
uper	-3053
points	-3054
&1)	-3055
▁rank	-3056
2+	-3057
>());\	-3058
mini	-3059
InputReader	-3060
▁0))	-3061
%10	-3062
Lo	-3063
,(	-3064
1:	-3065
qual	-3066
][1]\	-3067
▁ts	-3068
oney	-3069
nex	-3070
▁app	-3071
▁your	-3072
GE	-3073
[10];\	-3074
pw	-3075
(-1,	-3076
IG	-3077
ef	-3078
currentTime	-3079
text	-3080
9\	-3081
ik	-3082
Millis	-3083
pa	-3084
enter	-3085
▁32768	-3086
ail	-3087
dle	-3088
▁Ch	-3089
>0)	-3090
getvalue	-3091
zz	-3092
▁cycle	-3093
quare	-3094
ima	-3095
need	-3096
38	-3097
dec	-3098
-2,	-3099
oot	-3100
▁\'-\'	-3101
Str	-3102
▁2))	-3103
▁Args	-3104
▁10\	-3105
pro	-3106
141592653	-3107
None	-3108
lect	-3109
ttmp	-3110
▁minn	-3111
▁board	-3112
=1,	-3113
ds	-3114
110	-3115
Buffered	-3116
▁ql	-3117
(\"-1\\	-3118
]={	-3119
side	-3120
LINE	-3121
▁1000000007\	-3122
▁turn	-3123
}\"	-3124
2));\	-3125
PUT	-3126
bi	-3127
Idx	-3128
▁only	-3129
(10,	-3130
UM	-3131
21	-3132
ores	-3133
▁Add	-3134
+1))	-3135
+1]-	-3136
\346\225\2	-3137
lt	-3138
mm	-3139
(-1.0);\	-3140
▁5)	-3141
▁team	-3142
ph	-3143
▁ds	-3144
▁TaskB	-3145
▁choose	-3146
)(1	-3147
lib	-3148
▁limit	-3149
[4];\	-3150
board	-3151
dic	-3152
▁cross	-3153
[])\	-3154
▁valid	-3155
][4	-3156
9;	-3157
>=1	-3158
▁});\	-3159
lete	-3160
▁9;\	-3161
search	-3162
unique	-3163
.0;\	-3164
%=	-3165
RE	-3166
▁\'9\'	-3167
2))	-3168
[0]]	-3169
▁moves	-3170
lobal	-3171
▁\')\'	-3172
▁32768);\	-3173
mas	-3174
multi	-3175
▁distance	-3176
▁println	-3177
Decimal	-3178
9];\	-3179
tP	-3180
ints	-3181
loc	-3182
▁oo	-3183
bisect	-3184
items	-3185
-\'	-3186
sent	-3187
▁times	-3188
()).	-3189
inter	-3190
▁\"/	-3191
▁argc	-3192
tern	-3193
==1):\	-3194
good	-3195
][100	-3196
▁visit	-3197
▁[[	-3198
▁Map	-3199
sep	-3200
valid	-3201
ntry	-3202
▁any	-3203
▁sqr	-3204
lity	-3205
▁copy	-3206
▁5];\	-3207
=\'\')\	-3208
▁begin	-3209
rank	-3210
]+\"	-3211
]>=	-3212
[-1]\	-3213
▁small	-3214
[200000	-3215
20\2	-3216
tail	-3217
filen	-3218
▁6;	-3219
ply	-3220
riends	-3221
[1,	-3222
uffle	-3223
1].	-3224
▁-\	-3225
1*	-3226
End	-3227
ights	-3228
nL	-3229
+1],	-3230
idth	-3231
puts	-3232
▁av	-3233
▁Random	-3234
▁itr	-3235
kk	-3236
=[0]*	-3237
▁Get	-3238
3];\	-3239
▁sin	-3240
▁[\'	-3241
▁rhs	-3242
▁back	-3243
]=1\	-3244
▁iter	-3245
Find	-3246
▁stub	-3247
by	-3248
(\'\'.	-3249
Right	-3250
▁pe	-3251
+1])	-3252
nconstexpr	-3253
][0]);\	-3254
wt	-3255
=\"\")\	-3256
▁link	-3257
ars	-3258
▁np	-3259
[26];\	-3260
▁loop	-3261
eric	-3262
]]\	-3263
nod	-3264
▁0),	-3265
▁height	-3266
\346\225\260	-3267
assign	-3268
▁200	-3269
▁position	-3270
assert	-3271
▁50	-3272
vs	-3273
\344\270\2	-3274
▁binary	-3275
▁qq	-3276
▁weight	-3277
>[]	-3278
ci	-3279
dif	-3280
▁ht	-3281
stdlib	-3282
▁TreeSet	-3283
▁curChar	-3284
appop	-3285
uce	-3286
▁3.141592653	-3287
▁11	-3288
\321\20	-3289
actions	-3290
uy	-3291
tS	-3292
src	-3293
▁us	-3294
nion	-3295
][2],	-3296
pii	-3297
%4	-3298
\"),	-3299
ected	-3300
pref	-3301
▁factorial	-3302
nname	-3303
big	-3304
3]	-3305
▁&=	-3306
---	-3307
▁vals	-3308
-1]*	-3309
raph	-3310
▁rot	-3311
tag	-3312
itch	-3313
wargs	-3314
▁((1	-3315
deep	-3316
66	-3317
freq	-3318
)/2;\	-3319
▁\'))\	-3320
▁Print	-3321
It	-3322
[1024	-3323
▁sieve	-3324
>0):\	-3325
▁parse	-3326
-1]);\	-3327
stk	-3328
stra	-3329
7];\	-3330
MX	-3331
)((	-3332
ele	-3333
[2]);\	-3334
▁Solve	-3335
▁Set	-3336
DP	-3337
And	-3338
swap	-3339
▁Problem	-3340
encode	-3341
(1)	-3342
oi	-3343
)).	-3344
+1])\	-3345
mand	-3346
ould	-3347
SS	-3348
▁Read	-3349
▁den	-3350
[2])\	-3351
ka	-3352
▁//=	-3353
-1)*	-3354
itr	-3355
-1){\	-3356
tresult	-3357
▁isPrime	-3358
▁area	-3359
aken	-3360
tfinal	-3361
nstd	-3362
ueries	-3363
[*	-3364
ho	-3365
Bit	-3366
▁cp	-3367
Length	-3368
▁permut	-3369
umn	-3370
/=	-3371
UD	-3372
▁(\'	-3373
▁group	-3374
63	-3375
▁Ex	-3376
▁field	-3377
Name	-3378
\']\	-3379
▁dfn	-3380
\"]	-3381
unordered	-3382
=-1;\	-3383
▁was	-3384
<<\'	-3385
change	-3386
cases	-3387
ao	-3388
▁<<=	-3389
](	-3390
=10	-3391
ates	-3392
+1]:\	-3393
)];\	-3394
▁1000000007)	-3395
tdo	-3396
)+\"	-3397
hich	-3398
▁problem	-3399
[5]	-3400
jj	-3401
off	-3402
▁Collections	-3403
2))\	-3404
▁vl	-3405
Id	-3406
+1]\	-3407
]==\'1	-3408
)<	-3409
weight	-3410
-1,-1):\	-3411
3:\	-3412
)++)	-3413
[2].	-3414
nP	-3415
gram	-3416
▁tab	-3417
tM	-3418
▁1][0]	-3419
IL	-3420
func	-3421
▁tail	-3422
▁filter	-3423
3(	-3424
▁cx	-3425
▁nex	-3426
()-1;\	-3427
3\27	-3428
▁TaskC	-3429
▁suff	-3430
ze	-3431
▁nw	-3432
71	-3433
bjects	-3434
-1]-	-3435
>0){\	-3436
▁7\	-3437
;}	-3438
maxN	-3439
Pow	-3440
sec	-3441
limits	-3442
ONLINE	-3443
▁3);\	-3444
▁!(	-3445
▁register	-3446
▁30	-3447
▁PriorityQueue	-3448
1[0]	-3449
Data	-3450
istream	-3451
36	-3452
memo	-3453
\"\\	-3454
codeforces	-3455
owel	-3456
EN	-3457
tREP	-3458
rec	-3459
▁elem	-3460
tpos	-3461
▁given	-3462
tps	-3463
▁px	-3464
▁Find	-3465
▁loc	-3466
▁adde	-3467
lice	-3468
vide	-3469
▁FileNotFound	-3470
\'))\	-3471
]*(	-3472
[100001];\	-3473
package	-3474
ott	-3475
▁lca	-3476
ttokenizer	-3477
rono	-3478
▁floor	-3479
[::-1]\	-3480
34\2	-3481
Second	-3482
fin	-3483
tz	-3484
\'9	-3485
nextDouble	-3486
▁place	-3487
▁For	-3488
chr	-3489
oups	-3490
maxx	-3491
▁::	-3492
ress	-3493
earch	-3494
▁1:	-3495
tadd	-3496
ACK	-3497
alle	-3498
▁[&	-3499
argv	-3500
oins	-3501
+1));\	-3502
pppppppp	-3503
eed	-3504
▁ax	-3505
10\342\2	-3506
▁seen	-3507
]]=	-3508
▁err	-3509
Up	-3510
▁remain	-3511
FileNotFound	-3512
\":\"	-3513
tu	-3514
[];\	-3515
+1)%	-3516
attern	-3517
final	-3518
tlist	-3519
<10	-3520
CodePoint	-3521
},\	-3522
cstdlib	-3523
________	-3524
)-1):\	-3525
-1)/	-3526
▁token	-3527
;)	-3528
\342\200\2	-3529
//2)	-3530
▁dot	-3531
10\2	-3532
vv	-3533
▁ele	-3534
height	-3535
All	-3536
▁days	-3537
Deque	-3538
ie	-3539
5897	-3540
==1)\	-3541
[100];\	-3542
▁ln	-3543
▁2));\	-3544
RO	-3545
[1]-	-3546
ists	-3547
▁hasNext	-3548
▁IOBase	-3549
)-1	-3550
Read	-3551
+1))\	-3552
▁...	-3553
▁To	-3554
\343\201\253	-3555
(2);\	-3556
here	-3557
▁\'?\')	-3558
(\"2	-3559
▁part	-3560
199	-3561
cpy	-3562
Counter	-3563
)!=	-3564
][0]\	-3565
trunc	-3566
▁super	-3567
\']++;\	-3568
▁\"))\	-3569
field	-3570
ircle	-3571
000];\	-3572
==1){\	-3573
appendCodePoint	-3574
1==	-3575
▁da	-3576
▁100;	-3577
=100000000	-3578
typeof	-3579
nlist	-3580
tmemset	-3581
oc	-3582
info	-3583
ning	-3584
entr	-3585
[300	-3586
nflag	-3587
▁\'0\',	-3588
▁tb	-3589
▁vp	-3590
▁819	-3591
+1]=	-3592
ctools	-3593
versed	-3594
,0	-3595
ingle	-3596
ru	-3597
sta	-3598
5]	-3599
▁prob	-3600
?\"	-3601
\343\203\20	-3602
▁hs	-3603
][(	-3604
[]){\	-3605
9+7;\	-3606
▁17	-3607
7\275	-3608
One	-3609
▁opt	-3610
▁sta	-3611
(10**	-3612
▁4\	-3613
PI	-3614
▁cum	-3615
▁skip	-3616
▁bf	-3617
▁tuple	-3618
▁sec	-3619
▁norm	-3620
-1]=	-3621
▁rb	-3622
]:	-3623
px	-3624
[0]-	-3625
▁ull	-3626
▁fail	-3627
▁1000000	-3628
▁ST	-3629
▁rx	-3630
truncate	-3631
={}\	-3632
[1024];\	-3633
nmin	-3634
▁remove	-3635
compareTo	-3636
▁{};\	-3637
[50000	-3638
>0)\	-3639
Last	-3640
▁1]]	-3641
▁req	-3642
[100010],	-3643
tC	-3644
▁\'9\')\	-3645
[0:	-3646
AAAAAAAA	-3647
10,	-3648
▁[[]	-3649
ollow	-3650
▁factor	-3651
eta	-3652
[2]\	-3653
//2)\	-3654
▁flg	-3655
hed	-3656
▁/*	-3657
58979	-3658
▁minimum	-3659
[200005],	-3660
FileReader	-3661
lb	-3662
)%2	-3663
▁ca	-3664
▁scn	-3665
20\	-3666
UDGE	-3667
ee	-3668
▁cn	-3669
▁\"\	-3670
▁there	-3671
▁obj	-3672
35	-3673
rows	-3674
cale	-3675
▁\":	-3676
00\20	-3677
▁comment	-3678
siz	-3679
▁dq	-3680
▁global	-3681
90	-3682
▁30,	-3683
sl	-3684
aux	-3685
tstd	-3686
();}	-3687
ev	-3688
]==0:\	-3689
LinkedList	-3690
▁dig	-3691
fileno	-3692
▁\')	-3693
62	-3694
riend	-3695
▁2].	-3696
▁8192\	-3697
▁500	-3698
▁2);	-3699
▁names	-3700
1))	-3701
2),	-3702
▁chmax	-3703
indexOf	-3704
nBUFSIZE	-3705
rop	-3706
▁oper	-3707
26\210\342\2	-3708
▁lg	-3709
ets	-3710
och	-3711
{0,	-3712
ighb	-3713
part	-3714
▁newlines	-3715
CK	-3716
linker	-3717
random	-3718
6\	-3719
5);\	-3720
npos	-3721
=\"\"\	-3722
nM	-3723
hedron	-3724
xs	-3725
▁chmin	-3726
Res	-3727
ref	-3728
000;\	-3729
▁hh	-3730
▁steps	-3731
(26	-3732
2].	-3733
▁0},	-3734
JUDGE	-3735
[-1])\	-3736
cx	-3737
▁9)	-3738
5)\	-3739
▁60	-3740
▁LI	-3741
▁which	-3742
1));\	-3743
complex	-3744
▁package	-3745
▁cor	-3746
!!	-3747
[0]:\	-3748
ONG	-3749
[-2	-3750
▁3)\	-3751
][]	-3752
▁qpow	-3753
\'+	-3754
rend	-3755
▁follow	-3756
▁(__	-3757
tios	-3758
▁maximum	-3759
▁.	-3760
▁bal	-3761
tFastScanner	-3762
lip	-3763
**2	-3764
▁modul	-3765
▁dice	-3766
Seg	-3767
real	-3768
ople	-3769
00010;\	-3770
rror	-3771
19937	-3772
][3];\	-3773
Pointer	-3774
67	-3775
▁Matrix	-3776
popcount	-3777
▁rows	-3778
Ofast	-3779
let	-3780
gt	-3781
0},	-3782
dice	-3783
ather	-3784
▁isp	-3785
\345\27	-3786
=2	-3787
][3]	-3788
Compar	-3789
group	-3790
Entry	-3791
[1]:\	-3792
▁fractions	-3793
▁lx	-3794
visit	-3795
ndi	-3796
▁NULL	-3797
()-	-3798
▁Data	-3799
▁pairs	-3800
arry	-3801
▁take	-3802
▁Vector	-3803
Fact	-3804
(\"%.10	-3805
▁fflush	-3806
igDecimal	-3807
>>(	-3808
cont	-3809
▁Segment	-3810
▁rm	-3811
▁ru	-3812
\343\203\27	-3813
▁Comparator	-3814
▁(_	-3815
▁pd	-3816
▁[&](	-3817
2>\	-3818
ote	-3819
tcatch	-3820
▁search	-3821
▁ke	-3822
▁vc	-3823
Search	-3824
\343\201\247	-3825
\321\2	-3826
▁rc	-3827
[1]]	-3828
do	-3829
▁factors	-3830
▁digits	-3831
<1	-3832
(\"-	-3833
\"):\	-3834
▁\'\'.	-3835
▁shift	-3836
Th	-3837
▁unique	-3838
▁except	-3839
ql	-3840
INT	-3841
▁ay	-3842
tset	-3843
1,0,	-3844
vertex	-3845
▁half	-3846
▁\'1\';\	-3847
[_	-3848
▁nextIntArray	-3849
eps	-3850
▁function	-3851
]])\	-3852
chrono	-3853
22	-3854
roll	-3855
found	-3856
}\'	-3857
[0]*(	-3858
▁sums	-3859
=-1\	-3860
▁\"(\"	-3861
▁words	-3862
▁counts	-3863
0),	-3864
gion	-3865
▁rand	-3866
team	-3867
▁It	-3868
9+7\	-3869
▁ara	-3870
%2!=0	-3871
▁before	-3872
CH	-3873
manip	-3874
any	-3875
▁\'4	-3876
ins	-3877
▁StringBuffer	-3878
.__	-3879
oto	-3880
<4;	-3881
iomanip	-3882
factorial	-3883
binations	-3884
▁\'#\')	-3885
+2)	-3886
cp	-3887
block	-3888
▁side	-3889
target	-3890
▁ci	-3891
▁lt	-3892
+=1	-3893
▁tem	-3894
tar	-3895
▁pop	-3896
]==\'0	-3897
▁functools	-3898
)))"	-3899
3=	-3900
rest	-3901
▁1});\	-3902
▁middle	-3903
nnamespace	-3904
42	-3905
▁process	-3906
suf	-3907
cross	-3908
▁trans	-3909
▁1.	-3910
▁Union	-3911
\'0\';\	-3912
Comparator	-3913
▁5\	-3914
▁gg	-3915
(\".	-3916
%2==0):\	-3917
[5];\	-3918
▁perm	-3919
MP	-3920
Element	-3921
param	-3922
nu	-3923
▁25	-3924
same	-3925
▁BIT	-3926
]]--;\	-3927
▁(0,	-3928
words	-3929
(),(	-3930
▁fib	-3931
argest	-3932
▁1][1]	-3933
ood	-3934
▁es	-3935
(100	-3936
▁gc	-3937
▁space	-3938
flg	-3939
▁price	-3940
2[0]	-3941
▁src	-3942
][1])\	-3943
Row	-3944
▁dsu	-3945
▁—	-3946
▁AN	-3947
41	-3948
▁19	-3949
+1)*	-3950
%(	-3951
AS	-3952
▁ways	-3953
▁tar	-3954
tadj	-3955
▁old	-3956
token	-3957
10][	-3958
▁Query	-3959
▁complex	-3960
[3][	-3961
/2);\	-3962
================	-3963
]==1:\	-3964
2>	-3965
twriter	-3966
▁bx	-3967
form	-3968
\";	-3969
jkstra	-3970
FFER	-3971
avx	-3972
itive	-3973
onent	-3974
fx	-3975
▁LO	-3976
hird	-3977
-1))\	-3978
[1]=	-3979
▁Sum	-3980
▁\"]	-3981
position	-3982
Sub	-3983
0:	-3984
1){\	-3985
[3],	-3986
eat	-3987
nunsigned	-3988
cycle	-3989
▁task	-3990
ottom	-3991
▁initial	-3992
▁MX	-3993
33\2	-3994
tG	-3995
20];\	-3996
ments	-3997
8;\	-3998
STACK	-3999
<=0	-4000
lace	-4001
ID	-4002
opt	-4003
▁xy	-4004
▁ys	-4005
][0].	-4006
catch	-4007
ToString	-4008
3456	-4009
ouse	-4010
[0]==	-4011
))%	-4012
(0).	-4013
ten	-4014
1010	-4015
▁coord	-4016
▁20;	-4017
texit	-4018
ba	-4019
▁Array	-4020
Error	-4021
letter	-4022
Or	-4023
▁6,	-4024
▁\"%	-4025
uch	-4026
()];\	-4027
nnable	-4028
acc	-4029
Filter	-4030
▁Thread	-4031
▁heappush	-4032
&&(	-4033
▁than	-4034
nqueue	-4035
▁cut	-4036
▁24	-4037
▁card	-4038
=10**	-4039
tices	-4040
▁\'2	-4041
▁\'7	-4042
TreeSet	-4043
bad	-4044
card	-4045
names	-4046
▁nm	-4047
fault	-4048
▁Runnable	-4049
(6	-4050
tB	-4051
PO	-4052
▁[0,	-4053
?\302\2	-4054
prod	-4055
2])	-4056
sect	-4057
[100000];\	-4058
(1){\	-4059
inc	-4060
▁13	-4061
nresult	-4062
-8;\	-4063
▁6;\	-4064
}};\	-4065
▁element	-4066
▁then	-4067
(\"1\");\	-4068
998244353	-4069
▁addedge	-4070
\357\277\275	-4071
gy	-4072
▁black	-4073
\343\201\204	-4074
5897932	-4075
[8]	-4076
[0]),	-4077
since	-4078
State	-4079
readInt	-4080
tInputStream	-4081
debug	-4082
▁reduce	-4083
alpha	-4084
▁If	-4085
▁kol	-4086
▁{\'	-4087
BUG	-4088
ntotal	-4089
▁struct	-4090
[2000	-4091
▁bel	-4092
erty	-4093
dat	-4094
▁7)	-4095
▁after	-4096
▁1)]	-4097
▁31	-4098
functional	-4099
▁vx	-4100
MN	-4101
lass	-4102
▁+=1\	-4103
▁ready	-4104
Default	-4105
▁clock	-4106
\320\276	-4107
<3;	-4108
▁ck	-4109
▁cards	-4110
umulate	-4111
[1000005];\	-4112
reate	-4113
▁No	-4114
rees	-4115
▁1000;\	-4116
sign	-4117
50];\	-4118
▁*(	-4119
▁cons	-4120
allest	-4121
▁three	-4122
▁%.	-4123
▁1000000000;\	-4124
mb	-4125
distance	-4126
▁GCD	-4127
\346\234\2	-4128
den	-4129
\343\201\250	-4130
▁where	-4131
[{	-4132
xi	-4133
=2\	-4134
\343\200\20	-4135
version	-4136
▁\'*\')	-4137
3*	-4138
small	-4139
????????????????	-4140
arts	-4141
ulti	-4142
9);\	-4143
▁letters	-4144
[105];\	-4145
uc	-4146
jkl	-4147
▁deep	-4148
▁Created	-4149
▁FileInputStream	-4150
_,	-4151
primes	-4152
price	-4153
▁1]:\	-4154
▁cf	-4155
589793238	-4156
7)\	-4157
language	-4158
rom	-4159
▁\')]\	-4160
/2\	-4161
▁yi	-4162
endif	-4163
ons	-4164
\'))	-4165
NA	-4166
▁ob	-4167
sstream	-4168
multiply	-4169
▁\343\20	-4170
qui	-4171
▁yes	-4172
led	-4173
▁lp	-4174
days	-4175
▁++(	-4176
▁short	-4177
-1:	-4178
-1),	-4179
++);\	-4180
cos	-4181
▁xi	-4182
▁ip	-4183
0000000	-4184
nlst	-4185
▁permutations	-4186
▁Up	-4187
BufferedWriter	-4188
▁dc	-4189
!=0)	-4190
fail	-4191
times	-4192
-1));\	-4193
])-	-4194
db	-4195
work	-4196
[200010];\	-4197
utility	-4198
10**	-4199
▁Line	-4200
epoch	-4201
▁single	-4202
▁nt	-4203
][0]=	-4204
▁mint	-4205
▁round	-4206
permut	-4207
▁\'.\';\	-4208
▁uf	-4209
**0.	-4210
ffff	-4211
▁\')))\	-4212
▁sequence	-4213
▁jump	-4214
▁nod	-4215
+=\"	-4216
▁suma	-4217
=\'\'\	-4218
Ind	-4219
peek	-4220
alind	-4221
▁nextChar	-4222
InputMismatch	-4223
ward	-4224
7)	-4225
ia	-4226
▁1},	-4227
defaultdict	-4228
OK	-4229
▁20;\	-4230
▁resp	-4231
Add	-4232
▁zz	-4233
hip	-4234
▁10];\	-4235
!=\'	-4236
LOCK	-4237
▁din	-4238
tstart	-4239
▁ub	-4240
▁stud	-4241
{\"	-4242
most	-4243
tputs	-4244
(8	-4245
▁64	-4246
numeric	-4247
ube	-4248
Fast	-4249
rection	-4250
tab	-4251
▁ng	-4252
Ord	-4253
!=0){\	-4254
▁vertex	-4255
[26	-4256
▁stat	-4257
▁cases	-4258
)<=	-4259
▁mon	-4260
uture	-4261
so	-4262
\").	-4263
▁100005;\	-4264
StreamTokenizer	-4265
nmt	-4266
\343\201\252	-4267
000;	-4268
▁rng	-4269
loops	-4270
▁readLong	-4271
\343\201\214	-4272
<0:\	-4273
▁fabs	-4274
Path	-4275
Main	-4276
ours	-4277
ole	-4278
6)\	-4279
▁pushdown	-4280
(\"0\\	-4281
its	-4282
▁{\"	-4283
==2:\	-4284
\343\201\246	-4285
AP	-4286
awt	-4287
▁vy	-4288
▁cb	-4289
ttotal	-4290
deepToString	-4291
)>=	-4292
Maxn	-4293
▁should	-4294
▁prv	-4295
▁++;\	-4296
tList	-4297
bf	-4298
-1,0,	-4299
▁cou	-4300
▁equal	-4301
\'&&	-4302
▁pts	-4303
dig	-4304
tInputReader	-4305
▁=0;	-4306
50\2	-4307
Vector	-4308
chk	-4309
▁hm	-4310
▁way	-4311
▁colors	-4312
>>>	-4313
popleft	-4314
▁bw	-4315
filter	-4316
{\'	-4317
▁union	-4318
▁\'9\';	-4319
[(1	-4320
\345\220\2	-4321
▁vr	-4322
▁tk	-4323
51	-4324
<0)	-4325
][0][	-4326
ple	-4327
uv	-4328
core	-4329
▁argv	-4330
IB	-4331
\""	-4332
▁nC	-4333
▁ctr	-4334
prefix	-4335
OW	-4336
▁Arg	-4337
treader	-4338
\343\201\237	-4339
▁rad	-4340
[9	-4341
minn	-4342
▁48;\	-4343
▁Stack	-4344
UN	-4345
nMOD	-4346
▁summ	-4347
#.	-4348
xyz	-4349
▁more	-4350
▁bc	-4351
done	-4352
elp	-4353
▁brr	-4354
fabs	-4355
58979323846	-4356
\343\201\213	-4357
▁Example	-4358
round	-4359
------------	-4360
ants	-4361
▁year	-4362
▁cd	-4363
▁++)	-4364
cand	-4365
(\'-	-4366
tdist	-4367
▁DE	-4368
79	-4369
nce	-4370
)//2\	-4371
$$	-4372
80	-4373
100],	-4374
nR	-4375
▁queries	-4376
100;\	-4377
1>	-4378
!=0)\	-4379
(\"\".	-4380
▁od	-4381
▁Pow	-4382
▁offset	-4383
[1]+	-4384
(3):\	-4385
acity	-4386
][0][0]	-4387
▁\'>	-4388
▁Codeforces	-4389
▁()	-4390
▁ALL	-4391
▁48);\	-4392
tCollections	-4393
▁sg	-4394
Comp	-4395
2_	-4396
▁te	-4397
tvis	-4398
▁trie	-4399
▁\")))\	-4400
▁friend	-4401
dot	-4402
ious	-4403
ncur	-4404
▁Graph	-4405
tis	-4406
delta	-4407
+3	-4408
▁getline	-4409
############	-4410
▁some	-4411
()->	-4412
dfn	-4413
eded	-4414
over	-4415
▁fir	-4416
][1]=	-4417
▁conn	-4418
▁Next	-4419
▁\"0\"	-4420
▁-(	-4421
ello	-4422
▁gen	-4423
▁zeros	-4424
npriority	-4425
elem	-4426
cn	-4427
ara	-4428
++){	-4429
[1]*	-4430
alk	-4431
plus	-4432
1=0\	-4433
\'][	-4434
_000	-4435
build	-4436
stead	-4437
arning	-4438
▁Solver	-4439
▁Di	-4440
▁\'<	-4441
entry	-4442
+2,	-4443
▁box	-4444
+1<	-4445
OO	-4446
nD	-4447
▁pll	-4448
(0));\	-4449
▁mt	-4450
/2)\	-4451
\\\\	-4452
▁phi	-4453
Order	-4454
▁goal	-4455
▁orig	-4456
{}	-4457
gic	-4458
▁ba	-4459
▁HER	-4460
(5):\	-4461
▁nextString	-4462
II	-4463
0:\	-4464
year	-4465
-->0)	-4466
▁occ	-4467
111	-4468
ats	-4469
Locale	-4470
▁dt	-4471
▁bits	-4472
?\	-4473
-->0)\	-4474
▁ANS	-4475
▁judge	-4476
▁command	-4477
\'*	-4478
ide	-4479
▁[1,	-4480
▁0.0;\	-4481
▁tw	-4482
tlast	-4483
▁ww	-4484
▁\"?	-4485
_(	-4486
2\202	-4487
▁1]][	-4488
▁Comp	-4489
\343\203\274	-4490
hm	-4491
4];\	-4492
▁\"+(	-4493
[6]	-4494
binary	-4495
*10+	-4496
▁ter	-4497
!=0):\	-4498
▁sn	-4499
▁2.0	-4500
nval	-4501
▁vt	-4502
(\"?	-4503
▁\'1\':\	-4504
88	-4505
sq	-4506
Diff	-4507
ject	-4508
\345\25	-4509
▁switch	-4510
100000000	-4511
▁998244353\	-4512
[40	-4513
▁qs	-4514
▁info	-4515
kwargs	-4516
\345\212\2	-4517
ways	-4518
-1,-1,-1):\	-4519
tpre	-4520
▁lowbit	-4521
);++	-4522
Whitespace	-4523
▁pushup	-4524
3],	-4525
-->0){\	-4526
\357\274\2	-4527
2:	-4528
▁eq	-4529
(\'.	-4530
▁typ	-4531
unroll	-4532
MM	-4533
▁gn	-4534
rand	-4535
▁MIN	-4536
\345\205\2	-4537
4)\	-4538
tindex	-4539
tOutputStream	-4540
(2)	-4541
▁(3	-4542
▁rnd	-4543
▁qry	-4544
[0];	-4545
▁don	-4546
▁10:\	-4547
▁extra	-4548
31,	-4549
▁-2	-4550
▁[(	-4551
tval	-4552
▁pot	-4553
▁\"\"\"	-4554
▁rl	-4555
▁cle	-4556
extend	-4557
ABC	-4558
▁amount	-4559
▁real	-4560
\320\265	-4561
▁\'0\':\	-4562
▁7;	-4563
▁fx	-4564
va	-4565
▁cache	-4566
▁combinations	-4567
df	-4568
▁shuffle	-4569
nLL	-4570
\'].	-4571
digits	-4572
hh	-4573
Type	-4574
▁xor	-4575
lx	-4576
ghi	-4577
▁book	-4578
72	-4579
mt	-4580
cerr	-4581
fo	-4582
▁30;\	-4583
▁segment	-4584
{1,	-4585
▁abc	-4586
][200	-4587
getValue	-4588
tD	-4589
)][	-4590
Possible	-4591
▁2])	-4592
moves	-4593
Friends	-4594
000000000	-4595
▁Test	-4596
abcdef	-4597
upp	-4598
▁[0]\	-4599
7);\	-4600
▁5],	-4601
▁LC	-4602
1))\	-4603
face	-4604
Start	-4605
lca	-4606
ense	-4607
erson	-4608
\320\260	-4609
▁white	-4610
▁med	-4611
▁money	-4612
\343\201\227	-4613
<2	-4614
\343\200\2	-4615
nI	-4616
--\	-4617
reen	-4618
▁call	-4619
▁extends	-4620
scanner	-4621
▁elements	-4622
▁14	-4623
▁Con	-4624
▁heappop	-4625
oy	-4626
▁road	-4627
\350\27	-4628
3):\	-4629
▁less	-4630
(\'0\')\	-4631
▁non	-4632
nli	-4633
▁8,	-4634
MaxN	-4635
nINF	-4636
==\'-	-4637
[1000];\	-4638
imag	-4639
▁ostream	-4640
▁ry	-4641
(20	-4642
ults	-4643
tN	-4644
tid	-4645
area	-4646
70	-4647
gg	-4648
▁\"2	-4649
▁cols	-4650
▁play	-4651
]&&	-4652
▁2:	-4653
Digit	-4654
=\"\";\	-4655
EST	-4656
▁differe	-4657
▁beg	-4658
US	-4659
▁[0]*(	-4660
▁3]	-4661
▁wr	-4662
+1].	-4663
▁full	-4664
▁\")\";\	-4665
[101];\	-4666
seen	-4667
▁wa	-4668
▁1]++;\	-4669
▁TreeMap	-4670
▁lucky	-4671
+\"\\	-4672
][0]]	-4673
-2;	-4674
▁snext	-4675
+=2\	-4676
contest	-4677
▁\'0\')\	-4678
+1:	-4679
EPS	-4680
▁contain	-4681
]%2	-4682
tself	-4683
▁alpha	-4684
nCreated	-4685
3\")\	-4686
tcost	-4687
isupper	-4688
tsolver	-4689
-9	-4690
tic	-4691
▁0.0	-4692
tclass	-4693
▁over	-4694
()+	-4695
6;	-4696
78	-4697
ori	-4698
\343\201\231	-4699
[--	-4700
tive	-4701
wxyz	-4702
entroid	-4703
/2;	-4704
▁\"-	-4705
▁va	-4706
leaf	-4707
>{\	-4708
▁memcpy	-4709
tL	-4710
▁rotate	-4711
▁pn	-4712
qrst	-4713
(9	-4714
▁chr	-4715
[1005];\	-4716
AG	-4717
rx	-4718
][0])\	-4719
▁store	-4720
msk	-4721
itor	-4722
▁]\	-4723
▁text	-4724
▁https	-4725
the	-4726
nnode	-4727
(\'0\'	-4728
1+=	-4729
SEC	-4730
▁##	-4731
(10);\	-4732
-=1	-4733
▁AB	-4734
lack	-4735
[20];\	-4736
▁\'\\0	-4737
00,	-4738
Odd	-4739
wise	-4740
steady	-4741
vot	-4742
▁df	-4743
▁show	-4744
▁999999	-4745
]==0)	-4746
▁LINF	-4747
Zero	-4748
▁4:\	-4749
ted	-4750
tcol	-4751
▁cos	-4752
▁(1,	-4753
▁act	-4754
▁rez	-4755
writer	-4756
▁Template	-4757
▁following	-4758
=[0	-4759
4);\	-4760
rowable	-4761
▁6)	-4762
sr	-4763
Root	-4764
▁\"[	-4765
,0);\	-4766
▁2000	-4767
▁\"0\";\	-4768
▁(1<<	-4769
▁conv	-4770
\345\200\2	-4771
▁xb	-4772
getP	-4773
▁):\	-4774
▁game	-4775
??????	-4776
▁Queue	-4777
▁player	-4778
ox	-4779
ian	-4780
]=0\	-4781
inary	-4782
▁200000	-4783
ki	-4784
\303\2	-4785
)].	-4786
▁such	-4787
mnop	-4788
▁1)]\	-4789
ghijkl	-4790
=-	-4791
-1)//	-4792
ween	-4793
▁7);\	-4794
aves	-4795
▁front	-4796
mnopqrst	-4797
dj	-4798
etween	-4799
▁You	-4800
▁lf	-4801
ghijklmnopqrst	-4802
/10	-4803
ALL	-4804
▁\"#	-4805
][1][	-4806
▁inst	-4807
\345\210\2	-4808
**(	-4809
With	-4810
cache	-4811
]]]	-4812
_[	-4813
alc	-4814
▁ini	-4815
+1]);\	-4816
0(	-4817
▁dst	-4818
(\'1\')\	-4819
▁lr	-4820
+=\'	-4821
ells	-4822
ghijklmnopqrstuv	-4823
9],	-4824
Con	-4825
24\2	-4826
]!=\'	-4827
........	-4828
(),\	-4829
)])\	-4830
▁ncr	-4831
▁tin	-4832
54	-4833
▁\'(\')	-4834
tswap	-4835
▁cell	-4836
▁lz	-4837
\"};\	-4838
▁decimal	-4839
()])\	-4840
==(	-4841
▁SIZE	-4842
▁room	-4843
]==\'.	-4844
<=(	-4845
▁maxm	-4846
<26	-4847
pairs	-4848
▁bytes	-4849
sw	-4850
IBLE	-4851
Class	-4852
▁1,\	-4853
As	-4854
nal	-4855
▁lvl	-4856
▁pf	-4857
Test	-4858
cassert	-4859
7;	-4860
▁He	-4861
abel	-4862
readString	-4863
way	-4864
▁compute	-4865
ope	-4866
▁msk	-4867
SSIBLE	-4868
\347\25	-4869
▁strings	-4870
ots	-4871
bx	-4872
+2*	-4873
als	-4874
=[0]*(	-4875
▁lef	-4876
▁square	-4877
6)	-4878
dr	-4879
Lower	-4880
▁\'+\')	-4881
▁rg	-4882
\'\'\'	-4883
▁\")]\	-4884
inct	-4885
remain	-4886
)/(	-4887
\351\20	-4888
permutation	-4889
heappush	-4890
▁ha	-4891
]-\'	-4892
▁1<<	-4893
▁asc	-4894
▁binpow	-4895
-2*	-4896
▁ft	-4897
>1:\	-4898
Such	-4899
▁4);\	-4900
\350\24	-4901
▁example	-4902
▁children	-4903
01	-4904
OT	-4905
iss	-4906
omin	-4907
-1]==	-4908
-3	-4909
ks	-4910
▁nv	-4911
()-1;	-4912
merge	-4913
▁want	-4914
▁readLine	-4915
▁leaf	-4916
▁addEdge	-4917
▁multiset	-4918
FT	-4919
bfs	-4920
lose	-4921
maxm	-4922
▁fst	-4923
▁free	-4924
Iterator	-4925
▁\'-\')\	-4926
▁256	-4927
▁foo	-4928
\342\200\211	-4929
};	-4930
\'),	-4931
ui	-4932
)<<	-4933
▁readString	-4934
44\2	-4935
▁eval	-4936
▁maxN	-4937
python	-4938
raction	-4939
▁\"-1\\	-4940
tque	-4941
▁taken	-4942
▁uint	-4943
▁width	-4944
qq	-4945
▁\'?\'	-4946
▁ly	-4947
▁Pro	-4948
%2==0)	-4949
tarray	-4950
▁reversed	-4951
SuchElement	-4952
\'||	-4953
▁fen	-4954
98	-4955
][1].	-4956
▁toString	-4957
]<<	-4958
▁1000;	-4959
▁fy	-4960
][30	-4961
▁[\"	-4962
▁program	-4963
1_	-4964
ser	-4965
tTask	-4966
tleft	-4967
POSSIBLE	-4968
▁unordered	-4969
76	-4970
\"[	-4971
▁hp	-4972
suff	-4973
▁eof	-4974
▁pas	-4975
((1	-4976
>0;	-4977
tch	-4978
-10;\	-4979
▁Init	-4980
tvisited	-4981
▁product	-4982
▁33	-4983
▁isprime	-4984
Par	-4985
▁hate	-4986
▁-2,	-4987
()));	-4988
coord	-4989
.*;	-4990
[0]=1;\	-4991
vx	-4992
(__	-4993
▁=0;\	-4994
▁dest	-4995
VE	-4996
hen	-4997
(-1)"	-4998
▁poly	-4999
ending	-5000
▁Space	-5001
▁isdigit	-5002
obj	-5003
▁pv	-5004
letters	-5005
[1000000	-5006
IS	-5007
lcm	-5008
ities	-5009
children	-5010
nout	-5011
));}\	-5012
1--;\	-5013
▁TaskD	-5014
oves	-5015
ger	-5016
▁mk	-5017
▁\'#\'	-5018
tused	-5019
▁third	-5020
ei	-5021
▁cu	-5022
[1:]\	-5023
icense	-5024
\343\202\213\	-5025
▁mc	-5026
11\2	-5027
▁INPUT	-5028
und	-5029
source	-5030
▁(4	-5031
degree	-5032
present	-5033
lr	-5034
]-=	-5035
\343\202\211	-5036
▁divisors	-5037
loop	-5038
▁fastio	-5039
Friendship	-5040
▁9,	-5041
▁mu	-5042
[3])	-5043
Color	-5044
ONE	-5045
ninp	-5046
<>(	-5047
▁unite	-5048
▁nextLongArray	-5049
)?	-5050
aj	-5051
tBigInteger	-5052
/3	-5053
▁yb	-5054
▁four	-5055
ncin	-5056
▁hor	-5057
▁stop	-5058
tPoint	-5059
▁\"}\"	-5060
▁ph	-5061
▁sd	-5062
▁wy	-5063
<10;	-5064
▁gets	-5065
5+	-5066
7\20	-5067
nreturn	-5068
▁1]));\	-5069
▁pnt	-5070
[100100];\	-5071
ET	-5072
GS	-5073
omb	-5074
aper	-5075
▁\345\2	-5076
▁FileWriter	-5077
dst	-5078
▁\"\",	-5079
▁default	-5080
tnow	-5081
▁dijkstra	-5082
half	-5083
rome	-5084
▁\\\	-5085
cards	-5086
▁ref	-5087
▁divs	-5088
vp	-5089
147	-5090
▁fu	-5091
▁State	-5092
▁stringstream	-5093
+1)"	-5094
▁modulo	-5095
▁10^	-5096
▁\"\"\"\	-5097
tFastReader	-5098
\204	-5099
<<\"\\	-5100
▁vb	-5101
▁when	-5102
▁0});\	-5103
▁angle	-5104
heappop	-5105
▁plus	-5106
CharFilter	-5107
▁SpaceCharFilter	-5108
61	-5109
(\"#	-5110
\',\	-5111
▁UnionFind	-5112
▁StreamTokenizer	-5113
ada	-5114
cor	-5115
▁60;\	-5116
greater	-5117
ization	-5118
ov	-5119
▁groups	-5120
,\"	-5121
ating	-5122
xor	-5123
ITH	-5124
very	-5125
\345\217\2	-5126
cv	-5127
bel	-5128
▁97	-5129
\343\202\214	-5130
1&&	-5131
ids	-5132
▁who	-5133
\"]\	-5134
==0&&	-5135
▁quick	-5136
1]\	-5137
▁\"-1\";\	-5138
problemset	-5139
▁SZ	-5140
▁rp	-5141
minus	-5142
▁ifac	-5143
▁parseInt	-5144
Div	-5145
]+1	-5146
==2	-5147
>=1;	-5148
))))\	-5149
▁save	-5150
▁(1),	-5151
▁chars	-5152
RR	-5153
\'];\	-5154
judge	-5155
▁\'#\';\	-5156
hat	-5157
▁oc	-5158
sets	-5159
tnext	-5160
PriorityQueue	-5161
>=0:\	-5162
beg	-5163
▁um	-5164
▁ya	-5165
▁\'.\')\	-5166
1<	-5167
The	-5168
▁pc	-5169
▁\'/	-5170
▁gap	-5171
black	-5172
▁bytesRead	-5173
PER	-5174
▁source	-5175
▁readArray	-5176
,\'	-5177
uzz	-5178
norm	-5179
▁[](	-5180
▁column	-5181
1[1]	-5182
▁numb	-5183
[12	-5184
▁fread	-5185
tanswer	-5186
)-1\	-5187
4:\	-5188
Per	-5189
cut	-5190
▁xr	-5191
lp	-5192
perm	-5193
++]=	-5194
▁30;	-5195
▁1]))	-5196
objects	-5197
xa	-5198
]>>	-5199
[4],	-5200
▁emp	-5201
fixed	-5202
▁Note	-5203
▁cond	-5204
0000000000	-5205
▁but	-5206
364	-5207
▁\'\	-5208
}});\	-5209
Inv	-5210
]=1	-5211
▁Name	-5212
▁carry	-5213
▁accumulate	-5214
fast	-5215
▁maxv	-5216
owels	-5217
▁10)\	-5218
00000];\	-5219
FI	-5220
sequence	-5221
eq	-5222
\206	-5223
Power	-5224
][];\	-5225
GB	-5226
dest	-5227
&1	-5228
▁them	-5229
101	-5230
▁[[0	-5231
▁ksm	-5232
▁pat	-5233
▁srand	-5234
▁inputs	-5235
▁8)	-5236
-8\	-5237
(\"\\\\	-5238
TreeMap	-5239
▁ml	-5240
have	-5241
▁11,	-5242
steps	-5243
▁LLONG	-5244
nanswer	-5245
Sh	-5246
[22	-5247
▁xa	-5248
tidx	-5249
)],	-5250
land	-5251
future	-5252
▁\'1\')\	-5253
[200010],	-5254
ses	-5255
tinput	-5256
roperty	-5257
6],	-5258
▁\"\";	-5259
▁region	-5260
fy	-5261
+1),	-5262
▁flip	-5263
▁2]);\	-5264
ctr	-5265
][1]]	-5266
▁goto	-5267
[-1]:\	-5268
▁\",\"	-5269
▁getInt	-5270
nX	-5271
)+(	-5272
indx	-5273
sums	-5274
▁items	-5275
\320\270	-5276
alindrome	-5277
\343\201\257	-5278
fun	-5279
nline	-5280
ntemp	-5281
▁Update	-5282
three	-5283
▁100000;\	-5284
AM	-5285
ages	-5286
▁-1},	-5287
▁lista	-5288
Inverse	-5289
+1-	-5290
▁anc	-5291
og	-5292
box	-5293
ful	-5294
▁nCr	-5295
2--;\	-5296
▁calculate	-5297
▁0]\	-5298
=10;\	-5299
▁vertices	-5300
▁must	-5301
▁format	-5302
4]	-5303
CC	-5304
>()	-5305
rain	-5306
Range	-5307
▁blue	-5308
\"*	-5309
ally	-5310
1+=1\	-5311
BytesIO	-5312
▁positive	-5313
▁BU	-5314
\').	-5315
▁lol	-5316
▁100)	-5317
counts	-5318
bc	-5319
-1)%	-5320
appy	-5321
▁"/*\	-5322
2)+	-5323
was	-5324
▁rect	-5325
tprev	-5326
(1);	-5327
(10):\	-5328
[300005];\	-5329
▁0.5	-5330
▁rk	-5331
▁cmd	-5332
▁lft	-5333
▁love	-5334
+2]	-5335
67\2	-5336
*2\	-5337
9)\	-5338
▁8;\	-5339
▁(1.0	-5340
▁mr	-5341
▁reach	-5342
▁neighb	-5343
)2	-5344
+1)*(	-5345
8;	-5346
Pri	-5347
Word	-5348
task	-5349
▁las	-5350
%2==0)\	-5351
4.	-5352
▁atan	-5353
)])	-5354
477	-5355
▁suffix	-5356
getProperty	-5357
[1]))\	-5358
2]\	-5359
utes	-5360
static	-5361
tHashMap	-5362
▁\"]\";\	-5363
XX	-5364
]/	-5365
gi	-5366
cum	-5367
+1:\	-5368
come	-5369
rease	-5370
▁kwargs	-5371
phab	-5372
▁poss	-5373
stringstream	-5374
rie	-5375
▁23	-5376
Colle	-5377
tbyte	-5378
nstack	-5379
climits	-5380
strings	-5381
\344\275\2	-5382
fe	-5383
za	-5384
NUM	-5385
possible	-5386
(3);\	-5387
LOCKS	-5388
~~	-5389
▁LOG	-5390
tqueue	-5391
▁1000000000	-5392
▁let	-5393
▁man	-5394
▁center	-5395
▁getint	-5396
▁ArrayDeque	-5397
Flow	-5398
▁0,\	-5399
!\")\	-5400
-1};\	-5401
▁degree	-5402
+1+	-5403
▁1024	-5404
[110];\	-5405
▁bp	-5406
[6];\	-5407
▁300	-5408
14748	-5409
section	-5410
▁objects	-5411
vy	-5412
[((	-5413
tdef	-5414
▁NIL	-5415
20\27	-5416
▁Tail	-5417
readlines	-5418
\343\202\271	-5419
▁powmod	-5420
=2*	-5421
less	-5422
▁5:\	-5423
Query	-5424
4*	-5425
▁dl	-5426
\':\'	-5427
▁26;\	-5428
:0	-5429
▁date	-5430
!\	-5431
11,	-5432
▁Scan	-5433
[40000	-5434
boolean	-5435
49	-5436
OM	-5437
[60	-5438
cho	-5439
delete	-5440
})	-5441
rot	-5442
<26;	-5443
lucky	-5444
▁both	-5445
stderr	-5446
▁er	-5447
▁WITH	-5448
▁tests	-5449
anc	-5450
0,0,	-5451
▁"/*	-5452
med	-5453
Dict	-5454
[2]-	-5455
[1]==	-5456
tract	-5457
▁clear	-5458
Cur	-5459
▁lv	-5460
▁gir	-5461
1)):\	-5462
5][10	-5463
▁minx	-5464
▁30000	-5465
▁people	-5466
TI	-5467
:])\	-5468
idge	-5469
stion	-5470
tstack	-5471
tInteger	-5472
WhiteSpace	-5473
=((	-5474
▁dbg	-5475
divis	-5476
▁Each	-5477
Segment	-5478
▁PrintStream	-5479
47,	-5480
▁cm	-5481
▁mv	-5482
ther	-5483
▁(10	-5484
▁\'*\'	-5485
▁normal	-5486
▁gra	-5487
▁division	-5488
IMPOSSIBLE	-5489
1};\	-5490
▁his	-5491
\343\200\200	-5492
AD	-5493
LI	-5494
%2)	-5495
264	-5496
)++)\	-5497
50;\	-5498
book	-5499
tcurr	-5500
▁0))\	-5501
▁Fraction	-5502
AAAAAAAAAAAAAAAA	-5503
ncout	-5504
[30];\	-5505
cf	-5506
(!(	-5507
18\	-5508
rib	-5509
55];\	-5510
maind	-5511
\345\244\2	-5512
rb	-5513
comb	-5514
▁hand	-5515
//#	-5516
||(	-5517
]});\	-5518
▁\320\27	-5519
Printable	-5520
iS	-5521
▁12,	-5522
Child	-5523
▁between	-5524
▁(0),	-5525
▁bas	-5526
ifdef	-5527
▁finish	-5528
▁2.	-5529
chef	-5530
Matrix	-5531
▁SegmentTree	-5532
CD	-5533
▁ot	-5534
▁know	-5535
▁{0},	-5536
[0]][	-5537
▁Decimal	-5538
7],	-5539
▁\342\2	-5540
cu	-5541
▁10**9	-5542
_)	-5543
(\"1\\	-5544
,1	-5545
xb	-5546
Even	-5547
▁[1]	-5548
▁requi	-5549
-2]	-5550
20;\	-5551
chars	-5552
▁2){\	-5553
keySet	-5554
%2==1:\	-5555
Gr	-5556
▁qw	-5557
▁deb	-5558
14748364	-5559
▁character	-5560
far	-5561
▁Val	-5562
▁adjList	-5563
▁fn	-5564
asya	-5565
tLL	-5566
des	-5567
gex	-5568
IGNO	-5569
+=1;\	-5570
IGNORE	-5571
▁modpow	-5572
oj	-5573
width	-5574
He	-5575
(4,	-5576
]-1]	-5577
[200001];\	-5578
Is	-5579
:\\	-5580
ini	-5581
▁HIM	-5582
CHAT	-5583
▁1)))	-5584
▁[],	-5585
tQ	-5586
wa	-5587
▁nj	-5588
▁[][]	-5589
/2,	-5590
]->	-5591
▁rv	-5592
room	-5593
getOr	-5594
PrintableChar	-5595
▁vvi	-5596
strlen	-5597
5:\	-5598
▁ten	-5599
tV	-5600
<<1	-5601
upd	-5602
]++,	-5603
ings	-5604
<=\'9	-5605
Black	-5606
▁father	-5607
▁2))\	-5608
[1000005],	-5609
tem	-5610
tNode	-5611
Result	-5612
factor	-5613
▁\346\2	-5614
[::-1]:\	-5615
Mem	-5616
▁Time	-5617
▁empty	-5618
nbitset	-5619
Score	-5620
//2):\	-5621
getOrDefault	-5622
▁4)\	-5623
+1){\	-5624
▁scores	-5625
▁\"}\";\	-5626
ANS	-5627
tpq	-5628
▁40	-5629
▁6\	-5630
▁dj	-5631
▁bus	-5632
]+1;\	-5633
▁(2);	-5634
Ar	-5635
On	-5636
▁1"	-5637
8];\	-5638
Float	-5639
_;	-5640
fff	-5641
▁mb	-5642
=0,0\	-5643
▁\'\'	-5644
ED	-5645
▁keys	-5646
▁ONLINE	-5647
==\'-\')	-5648
ASE	-5649
ular	-5650
▁city	-5651
exists	-5652
▁largest	-5653
▁/**\	-5654
▁entry	-5655
4[	-5656
\347\20	-5657
fir	-5658
anik	-5659
[0]==\'	-5660
▁\320\2	-5661
3+	-5662
75	-5663
}]	-5664
(\'+	-5665
money	-5666
tread	-5667
\")){\	-5668
▁dn	-5669
▁sv	-5670
\'*(	-5671
ement	-5672
▁join	-5673
▁post	-5674
][4];\	-5675
26\	-5676
(3)\	-5677
ills	-5678
▁\"1\"	-5679
[1000000];\	-5680
<>	-5681
umns	-5682
▁scc	-5683
▁candid	-5684
+1)+\"	-5685
isPrime	-5686
▁inverse	-5687
▁`	-5688
avy	-5689
une	-5690
▁ap	-5691
1011	-5692
▁1];	-5693
tline	-5694
pointer	-5695
ton	-5696
▁pol	-5697
[200000];\	-5698
-=(	-5699
▁1)].	-5700
uu	-5701
tmx	-5702
▁Examples	-5703
aut	-5704
ninf	-5705
UL	-5706
vr	-5707
▁xl	-5708
npri	-5709
-1)*(	-5710
,%	-5711
SU	-5712
▁Py	-5713
[400	-5714
▁ModInt	-5715
▁delete	-5716
###	-5717
rad	-5718
▁36	-5719
▁50;\	-5720
▁Le	-5721
+2)\	-5722
▁ops	-5723
tpoint	-5724
iles	-5725
Alice	-5726
[1]),	-5727
▁mode	-5728
=1000000007;\	-5729
58979323846264	-5730
________________	-5731
sg	-5732
▁fp	-5733
tFOR	-5734
▁ang	-5735
▁pattern	-5736
BUFFER	-5737
▁magic	-5738
▁\'0\'\	-5739
(\"0\")\	-5740
▁MD	-5741
,1);\	-5742
islower	-5743
[0][0][0]	-5744
2=0\	-5745
31\2	-5746
zeros	-5747
(\'0\');\	-5748
men	-5749
▁fb	-5750
)+\'	-5751
[0]]\	-5752
▁Head	-5753
▁\"-1\"	-5754
Distance	-5755
\321\202	-5756
▁smallest	-5757
amount	-5758
pppppppppppppppp	-5759
[2,	-5760
[3].	-5761
aaaa	-5762
▁1000000;\	-5763
8\	-5764
[]{	-5765
▁\";	-5766
▁(2*	-5767
▁answ	-5768
tright	-5769
▁timer	-5770
%2==0){\	-5771
ib	-5772
()==	-5773
\302\202	-5774
▁>\	-5775
▁\'8	-5776
▁gener	-5777
lg	-5778
gon	-5779
▁??	-5780
tle	-5781
▁coins	-5782
-6;\	-5783
resp	-5784
▁ser	-5785
union	-5786
▁####	-5787
▁isWhitespace	-5788
[0]):\	-5789
\342\225\2	-5790
])+	-5791
_;\	-5792
<3	-5793
[1005	-5794
[100],	-5795
By	-5796
(1+	-5797
▁spec	-5798
groups	-5799
▁10**9+7\	-5800
==0:	-5801
[1]):\	-5802
99999999	-5803
]))"	-5804
[0]++;\	-5805
▁bottom	-5806
\343\200\201	-5807
<2*	-5808
▁bob	-5809
Tp	-5810
▁&(	-5811
free	-5812
[5000	-5813
tPair	-5814
▁equals	-5815
▁thread	-5816
BG	-5817
sn	-5818
!=(	-5819
▁tre	-5820
[10][	-5821
▁200000000	-5822
[15	-5823
ndata	-5824
▁100010;\	-5825
▁remaining	-5826
[1000010];\	-5827
tpr	-5828
▁bt	-5829
\201	-5830
(10000	-5831
factors	-5832
(\'-\');\	-5833
LowerCase	-5834
___	-5835
▁----	-5836
▁[-1]	-5837
▁im	-5838
▁Inf	-5839
-2);\	-5840
INPUT	-5841
tsize	-5842
[1010];\	-5843
▁BigDecimal	-5844
nton	-5845
yScanner	-5846
()(	-5847
nmx	-5848
▁lev	-5849
short	-5850
▁does	-5851
inline	-5852
ultiset	-5853
▁(\'0\'	-5854
▁lenbuf	-5855
▁instance	-5856
[1000001];\	-5857
Two	-5858
From	-5859
▁mins	-5860
▁tout	-5861
tnode	-5862
▁1)));\	-5863
74	-5864
])]	-5865
(0.	-5866
ARGS	-5867
▁>::	-5868
ntest	-5869
HT	-5870
▁costs	-5871
[3]);\	-5872
tcheck	-5873
cm	-5874
2.0	-5875
▁5);\	-5876
Vertex	-5877
▁\"\".	-5878
vc	-5879
Pre	-5880
▁13,	-5881
white	-5882
▁anss	-5883
acters	-5884
rhs	-5885
ahedron	-5886
▁winner	-5887
▁segments	-5888
\346\234\200	-5889
_0	-5890
338	-5891
arp	-5892
four	-5893
Total	-5894
tauto	-5895
Numbers	-5896
segment	-5897
▁1000000009;\	-5898
2=0;\	-5899
dices	-5900
=998244353	-5901
[:-1]\	-5902
nSystem	-5903
▁create	-5904
:%	-5905
(++	-5906
//(	-5907
rea	-5908
▁RR	-5909
▁Char	-5910
▁goes	-5911
]==\'#	-5912
mainder	-5913
*\	-5914
29	-5915
][2])	-5916
lista	-5917
\346\23	-5918
33\	-5919
blue	-5920
(\'-\'	-5921
\'));\	-5922
inates	-5923
[100001],	-5924
▁direction	-5925
▁gu	-5926
▁how	-5927
▁pal	-5928
]==0)\	-5929
ml	-5930
ww	-5931
▁ascii	-5932
▁spf	-5933
-2):\	-5934
nextString	-5935
▁cv	-5936
Win	-5937
ane	-5938
heapq	-5939
▁ix	-5940
nvar	-5941
struct	-5942
▁operation	-5943
▁ost	-5944
zip	-5945
▁(++	-5946
[0]))\	-5947
▁divide	-5948
▁convert	-5949
3-	-5950
rm	-5951
ves	-5952
+1]+	-5953
tinv	-5954
▁may	-5955
▁prim	-5956
getKey	-5957
tfirst	-5958
orig	-5959
(4):\	-5960
OUT	-5961
])):\	-5962
▁least	-5963
▁intersect	-5964
+=[	-5965
tlen	-5966
)(0);	-5967
▁represent	-5968
]^	-5969
%2:\	-5970
1024	-5971
▁prep	-5972
▁DEBUG	-5973
]==1)	-5974
[7]	-5975
20],	-5976
5):\	-5977
ncol	-5978
(\"\"	-5979
ctors	-5980
▁50000	-5981
▁Build	-5982
▁"\'\'\'\	-5983
mult	-5984
tgraph	-5985
▁prop	-5986
offset	-5987
cb	-5988
▁hd	-5989
ied	-5990
▁vect	-5991
=[\'	-5992
nistream	-5993
▁FS	-5994
▁PT	-5995
tice	-5996
▁psum	-5997
)==0:\	-5998
▁kek	-5999
>=\'0\'	-6000
hp	-6001
lev	-6002
▁II	-6003
!=1:\	-6004
++;}\	-6005
▁-1){\	-6006
trie	-6007
][0]+	-6008
cast	-6009
ough	-6010
▁\')\')	-6011
▁chkmax	-6012
▁needed	-6013
▁1000000;	-6014
TT	-6015
())"	-6016
▁\"{\"	-6017
▁avail	-6018
64\2	-6019
tedge	-6020
▁negative	-6021
fst	-6022
▁edg	-6023
Inter	-6024
regex	-6025
[100000],	-6026
▁200005;\	-6027
\345\255\2	-6028
%5	-6029
;//	-6030
▁{2,	-6031
tconst	-6032
fffffff	-6033
ycle	-6034
▁tol	-6035
player	-6036
▁exist	-6037
]==0){\	-6038
brr	-6039
▁0;}\	-6040
ncounter	-6041
lvl	-6042
]-=1\	-6043
▁desc	-6044
".	-6045
(&	-6046
_1,	-6047
gen	-6048
▁tie	-6049
Cases	-6050
tfill	-6051
tmain	-6052
ris	-6053
▁28	-6054
▁-1));\	-6055
▁\'1\'\	-6056
▁du	-6057
▁sig	-6058
\344\273\2	-6059
▁DataInputStream	-6060
vt	-6061
1])	-6062
▁tn	-6063
akes	-6064
pd	-6065
▁Dfs	-6066
▁editor	-6067
▁32	-6068
1++)	-6069
\"*(	-6070
pts	-6071
ieve	-6072
pass	-6073
\':0,	-6074
lef	-6075
(2**	-6076
▁32;	-6077
(\"%.12	-6078
▁\343\201\2	-6079
▁De	-6080
)(1);	-6081
ctype	-6082
Be	-6083
2+=	-6084
)//2	-6085
-1)]\	-6086
-1]):\	-6087
npoint	-6088
▁stdIn	-6089
CAL	-6090
\320\275	-6091
lication	-6092
▁answers	-6093
▁27	-6094
▁Templates	-6095
************	-6096
Mask	-6097
▁pie	-6098
\');	-6099
▁poz	-6100
-1])"	-6101
seven	-6102
▁lint	-6103
middle	-6104
xp	-6105
-1+	-6106
\207	-6107
▁minv	-6108
▁\"\");\	-6109
ky	-6110
mxn	-6111
Supp	-6112
vers	-6113
▁4];\	-6114
OP	-6115
...)	-6116
ined	-6117
tpair	-6118
2])\	-6119
▁ccw	-6120
▁chkmin	-6121
>1	-6122
ucket	-6123
▁2.0;\	-6124
freopen	-6125
nmultiset	-6126
BigDecimal	-6127
60\2	-6128
>\'9	-6129
]=\"	-6130
otes	-6131
tend	-6132
▁results	-6133
▁\'9\');\	-6134
ari	-6135
column	-6136
)-(	-6137
occ	-6138
▁dv	-6139
▁fc	-6140
%2==1	-6141
Divis	-6142
divide	-6143
(\",	-6144
▁!((	-6145
▁avg	-6146
33832	-6147
++]);\	-6148
▁atexit	-6149
▁1.0;\	-6150
[1001];\	-6151
\347\202\2	-6152
fib	-6153
%2!=0:\	-6154
▁20,	-6155
Forces	-6156
)&	-6157
las	-6158
6\27	-6159
▁tokens	-6160
▁interface	-6161
_{	-6162
?0:	-6163
▁100000;	-6164
ond	-6165
=10**9+7\	-6166
NN	-6167
2==	-6168
ttot	-6169
▁15,	-6170
▁every	-6171
▁recur	-6172
(\"1\")\	-6173
teen	-6174
▁mov	-6175
2]);\	-6176
Sp	-6177
Uti	-6178
tan	-6179
tneg	-6180
andard	-6181
][0]:\	-6182
\345\205\245	-6183
SZ	-6184
<\'0\'	-6185
▁sample	-6186
▁\'-\';\	-6187
▁fd	-6188
▁|\	-6189
%10\	-6190
▁1).	-6191
Graph	-6192
▁codeforces	-6193
▁{{	-6194
▁maxs	-6195
(\'-\'),	-6196
cols	-6197
riple	-6198
[111111	-6199
NE	-6200
▁bound	-6201
Down	-6202
[10],	-6203
[105],	-6204
▁\"*	-6205
500];\	-6206
popcnt	-6207
tupdate	-6208
dq	-6209
/20	-6210
:\'	-6211
ado	-6212
ency	-6213
leq	-6214
[110	-6215
trans	-6216
+\");\	-6217
ja	-6218
rl	-6219
Get	-6220
jan	-6221
lah	-6222
mmx	-6223
ider	-6224
Valid	-6225
tdata	-6226
before	-6227
▁erase	-6228
▁10000000	-6229
goal	-6230
\346\26	-6231
solution	-6232
;){\	-6233
11];\	-6234
])){\	-6235
▁Throwable	-6236
▁its	-6237
ontest	-6238
▁segtree	-6239
tial	-6240
[105][10	-6241
ARD	-6242
typ	-6243
▁NO	-6244
MAXM	-6245
ster	-6246
dn	-6247
▁An	-6248
each	-6249
▁//\	-6250
ante	-6251
▁NoSuchElement	-6252
)\'	-6253
1.0	-6254
cou	-6255
-=1"	-6256
wick	-6257
▁\"!	-6258
Points	-6259
[101][	-6260
==3	-6261
])*	-6262
nder	-6263
colors	-6264
▁indices	-6265
phabet	-6266
stud	-6267
▁most	-6268
arnings	-6269
▁Author	-6270
uk	-6271
▁AA	-6272
▁oj	-6273
(\":	-6274
▁bar	-6275
copyOf	-6276
,2*	-6277
<2;	-6278
4):\	-6279
nnums	-6280
tests	-6281
\343\201\225	-6282
ODE	-6283
dbg	-6284
15;\	-6285
\")));\	-6286
reversed	-6287
eln	-6288
byte	-6289
▁...,	-6290
**0.5)	-6291
▁ey	-6292
▁50;	-6293
Bound	-6294
Upper	-6295
▁\'<<	-6296
\343\203\204	-6297
]};\	-6298
ances	-6299
process	-6300
▁circle	-6301
▁-100000000	-6302
▁ban	-6303
▁mex	-6304
▁into	-6305
[5],	-6306
6\227	-6307
ttime	-6308
▁help	-6309
(26):\	-6310
▁interval	-6311
thi	-6312
tick	-6313
▁\'3	-6314
tinit	-6315
▁finv	-6316
toArray	-6317
(\"-1\")\	-6318
\343\201\215	-6319
yb	-6320
))*	-6321
?1:	-6322
▁60;	-6323
taken	-6324
(\"%.9	-6325
▁maxim	-6326
▁events	-6327
Vis	-6328
▁9\	-6329
(0)"	-6330
▁sumb	-6331
▁FI	-6332
\'],	-6333
▁dish	-6334
▁they	-6335
prv	-6336
▁multiple	-6337
isp	-6338
oper	-6339
ssse	-6340
stor	-6341
tical	-6342
▁++)\	-6343
+1]==\'	-6344
59	-6345
FOR	-6346
==2)	-6347
==-1)	-6348
▁mass	-6349
cctype	-6350
▁BUFFER	-6351
▁bitset	-6352
ji	-6353
tX	-6354
>=(	-6355
<<1)	-6356
▁gao	-6357
coins	-6358
[1:]:\	-6359
▁ir	-6360
▁tax	-6361
Table	-6362
▁3];\	-6363
center	-6364
\321\200	-6365
Pro	-6366
0]	-6367
\'){	-6368
Check	-6369
▁bufferPointer	-6370
nma	-6371
[3]\	-6372
)/2	-6373
[1<<	-6374
▁Res	-6375
+1)/2	-6376
[200];\	-6377
[1005][100	-6378
▁wt	-6379
(\"3	-6380
▁2**	-6381
▁dem	-6382
image	-6383
▁buflen	-6384
-\	-6385
(--	-6386
lap	-6387
tsw	-6388
/=2;\	-6389
1\202	-6390
▁miny	-6391
3383279	-6392
▁\'-\');\	-6393
Op	-6394
cat	-6395
0));\	-6396
[!	-6397
qs	-6398
xl	-6399
\'"	-6400
▁fpow	-6401
▁ints	-6402
▁wait	-6403
▁CLOCKS	-6404
▁starts	-6405
tfreopen	-6406
▁modInverse	-6407
asy	-6408
▁lhs	-6409
Memory	-6410
[2][1]	-6411
region	-6412
▁MN	-6413
nown	-6414
▁eat	-6415
+1:]\	-6416
▁maxy	-6417
▁\'.\':\	-6418
▁"\"\"\"\	-6419
6]	-6420
RT	-6421
GCD	-6422
▁xp	-6423
-\'0	-6424
tsys	-6425
▁\35	-6426
reflect	-6427
▁LIM	-6428
getline	-6429
UB	-6430
tfac	-6431
ressW	-6432
▁\'+\'	-6433
▁repeat	-6434
SuppressW	-6435
SuppressWarnings	-6436
fu	-6437
vo	-6438
Good	-6439
▁teams	-6440
▁distinct	-6441
nunordered	-6442
▁different	-6443
0][	-6444
-1)+	-6445
▁cnts	-6446
▁maze	-6447
ameter	-6448
▁common	-6449
tcounter	-6450
▁stringTokenizer	-6451
▁fg	-6452
)-1,	-6453
tbuf	-6454
▁rmq	-6455
▁speed	-6456
abm	-6457
fit	-6458
({0,	-6459
//10\	-6460
▁Check	-6461
take	-6462
▁local	-6463
uint	-6464
▁\'\')\	-6465
\343\202\20	-6466
LEN	-6467
pnt	-6468
tind	-6469
▁(--	-6470
▁define	-6471
lv	-6472
cmd	-6473
[1];	-6474
[5][	-6475
)+1)\	-6476
00000;	-6477
▁divisor	-6478
isWhiteSpace	-6479
nch	-6480
pas	-6481
▁SQ	-6482
)+1\	-6483
[10]	-6484
▁lcp	-6485
1=[]\	-6486
=2;\	-6487
\345\210	-6488
RL	-6489
DEF	-6490
\343\203\203	-6491
du	-6492
128	-6493
1>\	-6494
▁126	-6495
+=2;\	-6496
96	-6497
▁gt	-6498
▁sf	-6499
53\2	-6500
ible	-6501
vent	-6502
▁buff	-6503
▁coin	-6504
)==1:\	-6505
▁event	-6506
Solution	-6507
Dis	-6508
lft	-6509
tto	-6510
▁lm	-6511
[][]=	-6512
\345\212\233\	-6513
Exp	-6514
eff	-6515
▁heapify	-6516
12,	-6517
▁VV	-6518
▁blocks	-6519
nls	-6520
nnew	-6521
▁360	-6522
[][][]	-6523
\320\273	-6524
nextChar	-6525
▁longest	-6526
){}\	-6527
2++)	-6528
>>1;\	-6529
Letter	-6530
nsolve	-6531
▁comma	-6532
▁trace	-6533
▁correct	-6534
setprecision	-6535
,*	-6536
▁kq	-6537
>>;\	-6538
gest	-6539
native	-6540
({{	-6541
oord	-6542
reas	-6543
▁cook	-6544
\346\21	-6545
▁\'\\\"	-6546
toLowerCase	-6547
RI	-6548
kol	-6549
▁car	-6550
tfact	-6551
AK	-6552
▁wi	-6553
inputs	-6554
▁previous	-6555
scn	-6556
(\"!	-6557
▁got	-6558
▁modint	-6559
▁findSet	-6560
[2:	-6561
▁#\	-6562
▁MP	-6563
▁large	-6564
▁65	-6565
][1][0]	-6566
()][	-6567
-2)\	-6568
neighb	-6569
Bob	-6570
IME	-6571
[25	-6572
ida	-6573
)-1;	-6574
erve	-6575
oolean	-6576
▁\'0\';	-6577
Match	-6578
▁matr	-6579
+1]):\	-6580
toutput	-6581
▁readDouble	-6582
[]>	-6583
nar	-6584
olo	-6585
▁ee	-6586
▁td	-6587
}\".	-6588
▁men	-6589
product	-6590
ties	-6591
]<<\"	-6592
nread	-6593
ArrayDeque	-6594
pat	-6595
ZERO	-6596
ctime	-6597
nexcept	-6598
▁pointer	-6599
▁writeln	-6600
pv	-6601
tal	-6602
▁maxa	-6603
][1]:\	-6604
][100];\	-6605
qw	-6606
1);	-6607
[:]\	-6608
10000];\	-6609
entrySet	-6610
▁keyboard	-6611
wh	-6612
200	-6613
▁ID	-6614
tmid	-6615
▁det	-6616
())]\	-6617
Anton	-6618
7]	-6619
▁[1	-6620
▁Mul	-6621
isPrintableChar	-6622
ING	-6623
gap	-6624
prob	-6625
▁blah	-6626
[1:])\	-6627
(\'1\')	-6628
▁students	-6629
tma	-6630
tokens	-6631
Printer	-6632
tE	-6633
dsu	-6634
▁fw	-6635
▁kmp	-6636
32\204	-6637
\343\201\243	-6638
:/	-6639
18,	-6640
conn	-6641
[1005],	-6642
▁readIntArray	-6643
▁nu	-6644
nget	-6645
uzzle	-6646
▁odds	-6647
]==1)\	-6648
ely	-6649
IGHT	-6650
▁This	-6651
▁cells	-6652
▁minim	-6653
][1][1]	-6654
&&!	-6655
1<=	-6656
(\'2	-6657
<0||	-6658
▁sets	-6659
orrect	-6660
▁capacity	-6661
▁operations	-6662
AND	-6663
▁kb	-6664
▁},	-6665
inic	-6666
▁ima	-6667
▁required	-6668
,-	-6669
▁BS	-6670
2[1]	-6671
▁Dis	-6672
▁tam	-6673
nstart	-6674
1010];\	-6675
1/	-6676
0],	-6677
▁buy	-6678
();++	-6679
tbest	-6680
ttree	-6681
Factors	-6682
▁dm	-6683
1=0,	-6684
oute	-6685
▁fil	-6686
DEBUG	-6687
▁Tools	-6688
<<#	-6689
poz	-6690
(10)	-6691
+2];\	-6692
<0>(	-6693
ored	-6694
▁+=\	-6695
[55][	-6696
tdiff	-6697
▁Maxn	-6698
\"\"\"	-6699
-1]==\'	-6700
\347\264\2	-6701
\345\200\244	-6702
2);	-6703
who	-6704
ubes	-6705
▁vll	-6706
▁unit	-6707
▁\"1\";\	-6708
368	-6709
getB	-6710
tune	-6711
▁7:\	-6712
▁separ	-6713
()-1);\	-6714
subtract	-6715
▁friends	-6716
([])\	-6717
tHashSet	-6718
▁hasNextByte	-6719
▁ws	-6720
**2\	-6721
(\"\")\	-6722
dt	-6723
2*(	-6724
tex	-6725
▁dump	-6726
▁sizes	-6727
▁1][0],	-6728
]==\'1\':\	-6729
Pr	-6730
),(	-6731
-2\	-6732
NMAX	-6733
▁Pos	-6734
▁YES	-6735
\'};\	-6736
▁iend	-6737
▁(0);\	-6738
\321\201	-6739
▁include	-6740
▁Character	-6741
PrintStream	-6742
▁characters	-6743
▁47	-6744
▁cyc	-6745
)]);\	-6746
[3000	-6747
▁system	-6748
ART	-6749
ius	-6750
▁rig	-6751
[-1],	-6752
▁[1]\	-6753
][0][1]	-6754
02	-6755
ttr	-6756
▁ul	-6757
Team	-6758
▁1)"	-6759
▁7)\	-6760
(\'-1	-6761
)]++;\	-6762
Dep	-6763
▁fo	-6764
<1>(	-6765
mail	-6766
ncost	-6767
▁\"+\"	-6768
ND	-6769
xc	-6770
()>	-6771
,0)	-6772
▁eg	-6773
=\'\\	-6774
narray	-6775
▁nullptr	-6776
▁rn	-6777
[0][2]	-6778
[1]++;\	-6779
If	-6780
*2)	-6781
//2,	-6782
\343\201\244	-6783
reverseOrder	-6784
30,	-6785
([\'	-6786
mall	-6787
▁Ins	-6788
▁\32	-6789
Danik	-6790
nlast	-6791
50],	-6792
Draw	-6793
\346\226	-6794
▁214748364	-6795
^(	-6796
pal	-6797
suma	-6798
<<\'\\	-6799
▁positions	-6800
\347\232\204	-6801
DD	-6802
lz	-6803
▁vd	-6804
(1000	-6805
]=-1;\	-6806
putchar	-6807
tprintln	-6808
▁\'(\')\	-6809
5*	-6810
▁4]	-6811
▁gy	-6812
(1),	-6813
FILE	-6814
jump	-6815
▁/*\	-6816
square	-6817
Collectors	-6818
<5;	-6819
▁400	-6820
-1)/2	-6821
iable	-6822
▁inside	-6823
53,	-6824
bas	-6825
▁tv	-6826
+1)]	-6827
▁gue	-6828
clone	-6829
345678	-6830
▁ScanReader	-6831
▁&_	-6832
▁lps	-6833
2+=1\	-6834
▁many	-6835
▁smax	-6836
▁1]))\	-6837
ook	-6838
▁8\	-6839
▁RE	-6840
▁20)	-6841
[3])\	-6842
lenbuf	-6843
hd	-6844
);}	-6845
=\"\\	-6846
▁house	-6847
[2005];\	-6848
▁CodeForces	-6849
auty	-6850
user	-6851
▁2*(	-6852
setDefault	-6853
▁ki	-6854
▁ids	-6855
▁suc	-6856
▁100\	-6857
\346\25	-6858
▁nextByte	-6859
LR	-6860
▁}"	-6861
Edges	-6862
▁100,	-6863
▁term	-6864
common	-6865
▁reset	-6866
binarySearch	-6867
IC	-6868
])));\	-6869
▁1]--;\	-6870
\343\202\212	-6871
##\	-6872
60\	-6873
▁smin	-6874
Random	-6875
[2][0]	-6876
-----------	-6877
\346\225\260\	-6878
scc	-6879
city	-6880
hish	-6881
▁cmax	-6882
▁doit	-6883
▁roll	-6884
▁what	-6885
▁2020\	-6886
▁\'4\'	-6887
4=	-6888
:]	-6889
mk	-6890
rat	-6891
))]\	-6892
2(1,	-6893
=-1;	-6894
TION	-6895
▁far	-6896
[2][2	-6897
▁ends	-6898
▁\'{\'	-6899
ah	-6900
3][	-6901
▁Mat	-6902
-1][0]	-6903
Position	-6904
▁multiply	-6905
unk	-6906
(\'#	-6907
▁0);	-6908
▁Bit	-6909
▁Vec	-6910
▁\"3	-6911
▁http	-6912
1),(1,	-6913
fstream	-6914
[1000010],	-6915
▁\'\\0\';\	-6916
:(	-6917
sole	-6918
>=2:\	-6919
after	-6920
)-\'	-6921
▁\'5	-6922
])))\	-6923
offer	-6924
▁-1),	-6925
▁vert	-6926
)+1):\	-6927
▁Pi	-6928
▁bd	-6929
,-1,	-6930
mbol	-6931
▁Len	-6932
▁11;\	-6933
100100	-6934
▁subtree	-6935
[300005],	-6936
*3	-6937
▁SA	-6938
road	-6939
+10;\	-6940
[2]:\	-6941
▁Calc	-6942
ression	-6943
▁qy	-6944
[2]=	-6945
summ	-6946
ting	-6947
▁6)\	-6948
()-1)	-6949
shift	-6950
hasNextByte	-6951
sqr	-6952
▁gl	-6953
tMap	-6954
getter	-6955
▁There	-6956
MA	-6957
<0)\	-6958
acos	-6959
1000];\	-6960
\347\202\271	-6961
(7	-6962
tss	-6963
tvar	-6964
Block	-6965
▁memory	-6966
▁\345\20	-6967
[10000];\	-6968
ior	-6969
nik	-6970
▁22	-6971
▁15;\	-6972
[1][2]	-6973
▁\"[\";\	-6974
00\	-6975
4],	-6976
!!!!	-6977
▁1\\	-6978
▁\'!	-6979
(1):\	-6980
uments	-6981
-7;\	-6982
▁All	-6983
starts	-6984
▁leaves	-6985
Py	-6986
1,\	-6987
▁$$	-6988
\'])	-6989
▁5)\	-6990
▁hull	-6991
essage	-6992
onents	-6993
▁parts	-6994
\347\224\2	-6995
RA	-6996
pc	-6997
))+	-6998
ams	-6999
loy	-7000
▁ak	-7001
()-1,	-7002
▁sink	-7003
(100000	-7004
reasing	-7005
0=	-7006
lso	-7007
▁AC	-7008
▁bg	-7009
▁bn	-7010
==-1	-7011
Task	-7012
uler	-7013
Solve	-7014
inite	-7015
joint	-7016
erence	-7017
▁person	-7018
\347\233\2	-7019
rp	-7020
nan	-7021
ustom	-7022
▁trav	-7023
▁alice	-7024
▁chain	-7025
▁error	-7026
▁condition	-7027
_3	-7028
nH	-7029
ENT	-7030
lli	-7031
ntmp	-7032
▁19;	-7033
[0]=0;\	-7034
▁qx	-7035
1,1,	-7036
▁user	-7037
XY	-7038
gc	-7039
Vec	-7040
(\"4	-7041
▁lens	-7042
(20);\	-7043
cw	-7044
▁nq	-7045
nine	-7046
▁she	-7047
▁face	-7048
CharAt	-7049
tminus	-7050
[1000],	-7051
[500005];\	-7052
1][1	-7053
orld	-7054
\"){\	-7055
▁star	-7056
101];\	-7057
>>=1;\	-7058
▁exact	-7059
)[	-7060
|=	-7061
223	-7062
▁LS	-7063
▁uu	-7064
)-1)	-7065
3333	-7066
▁+1,	-7067
initial	-7068
tswitch	-7069
uration	-7070
BIT	-7071
unt	-7072
full	-7073
FileInputStream	-7074
UP	-7075
▁gx	-7076
▁nk	-7077
▁OUT	-7078
[1]][	-7079
▁tans	-7080
]==1){\	-7081
noutput	-7082
+1);	-7083
▁hsh	-7084
hello	-7085
▁yield	-7086
checked	-7087
dl	-7088
yi	-7089
Inc	-7090
tup	-7091
=[[]	-7092
<0){\	-7093
[2005	-7094
unite	-7095
\345\220\210	-7096
[4][	-7097
▁sim	-7098
tions	-7099
▁indx	-7100
Ashish	-7101
▁'	-7102
reg	-7103
owed	-7104
▁oth	-7105
▁10],	-7106
▁occur	-7107
integer	-7108
<8;	-7109
etra	-7110
ndic	-7111
oard	-7112
[20][	-7113
https	-7114
sieve	-7115
tprime	-7116
Problem	-7117
03	-7118
Rem	-7119
(1.0	-7120
(\'4	-7121
buff	-7122
▁cat	-7123
▁{},	-7124
7\272	-7125
▁look	-7126
▁rint	-7127
=10000	-7128
▁Merge	-7129
▁License	-7130
2<	-7131
EG	-7132
*2+	-7133
▁ho	-7134
▁nf	-7135
▁vol	-7136
▁ansx	-7137
▁label	-7138
eb	-7139
40\2	-7140
▁paint	-7141
▁status	-7142
treverse	-7143
11\	-7144
tpar	-7145
&(1<<	-7146
bt	-7147
1=0;\	-7148
▁mapp	-7149
]+1);\	-7150
xr	-7151
sor	-7152
Same	-7153
▁=0\	-7154
reach	-7155
1\'	-7156
▁pen	-7157
rg	-7158
uo	-7159
▁16;	-7160
▁Round	-7161
▁10000;\	-7162
▁Contest	-7163
▁1000000007);\	-7164
nmat	-7165
▁\'^	-7166
nNode	-7167
▁Python	-7168
-\'0\';\	-7169
>=\'0\'&&	-7170
▁lin	-7171
▁quit	-7172
quares	-7173
))){\	-7174
▁16;\	-7175
+10	-7176
bus	-7177
▁ga	-7178
ices	-7179
nlis	-7180
tdis	-7181
▁cst	-7182
[-1])	-7183
▁generate	-7184
[0-9	-7185
hort	-7186
▁reg	-7187
\350\241\2	-7188
replaceAll	-7189
00)	-7190
App	-7191
▁rnk	-7192
▁48),	-7193
\320\262	-7194
(...)	-7195
[8];\	-7196
ticip	-7197
▁Trie	-7198
▁bigmod	-7199
000000007	-7200
--]	-7201
leg	-7202
30\2	-7203
ital	-7204
▁ary	-7205
▁fft	-7206
]]+=1\	-7207
▁vowels	-7208
▁lli	-7209
-1][1]	-7210
[55];\	-7211
▁Function	-7212
:\"	-7213
ccw	-7214
4){\	-7215
father	-7216
▁marked	-7217
1},	-7218
▁=0	-7219
▁tg	-7220
▁\'[	-7221
LC	-7222
ota	-7223
=1<<	-7224
tit	-7225
▁TH	-7226
Binary	-7227
[5005];\	-7228
\343\201\276	-7229
tsgn	-7230
\')\'	-7231
580	-7232
/100	-7233
▁cir	-7234
amage	-7235
▁\'\"	-7236
▁added	-7237
▁trees	-7238
▁998244353)	-7239
TC	-7240
▁hr	-7241
<2>(	-7242
▁cas	-7243
▁cha	-7244
[1001	-7245
▁maxd	-7246
[0]));\	-7247
▁assign	-7248
▁already	-7249
&(	-7250
▁jc	-7251
3\225	-7252
▁\"0\\	-7253
▁tarjan	-7254
TE	-7255
__,	-7256
nab	-7257
asha	-7258
3));\	-7259
<(1<<	-7260
mapTo	-7261
[0][0],	-7262
▁players	-7263
VAL	-7264
▁TT	-7265
-1);	-7266
6);\	-7267
10):\	-7268
nleft	-7269
▁water	-7270
][26];\	-7271
▁faster	-7272
▁\"{\";\	-7273
ule	-7274
(\',	-7275
--;)	-7276
tSet	-7277
ttok	-7278
▁outer	-7279
00000],	-7280
▁balance	-7281
▁smaller	-7282
\342\200\224	-7283
%2\	-7284
Day	-7285
ths	-7286
)-1:\	-7287
▁invr	-7288
▁As	-7289
▁gs	-7290
▁yp	-7291
both	-7292
2\")\	-7293
▁hist	-7294
[2][2]	-7295
[0,	-7296
oor	-7297
▁OO	-7298
▁{}	-7299
▁0<=	-7300
getBytes	-7301
▁\')\';\	-7302
gx	-7303
nG	-7304
yc	-7305
**2)	-7306
]+1\	-7307
home	-7308
-1]!=	-7309
aders	-7310
store	-7311
Al	-7312
Un	-7313
▁CO	-7314
▁PP	-7315
tFor	-7316
▁home	-7317
_2,	-7318
▁pm	-7319
eval	-7320
▁pwr	-7321
Cycle	-7322
▁\"\")\	-7323
nV	-7324
*2;\	-7325
▁inq	-7326
>=0&&	-7327
▁[[0]	-7328
AST	-7329
taa	-7330
▁VI	-7331
?-1:	-7332
stop	-7333
tlow	-7334
▁Left	-7335
]={};\	-7336
▁1)];\	-7337
▁Project	-7338
▁250	-7339
Sorted	-7340
▁present	-7341
▁replace	-7342
▁numberOf	-7343
]==\'0\':\	-7344
26\210\342\225\2	-7345
▁xc	-7346
▁LCA	-7347
indow	-7348
tmemo	-7349
▁weights	-7350
*((	-7351
▁30)	-7352
\347\27	-7353
▁bufferedReader	-7354
Mul	-7355
oder	-7356
▁isP	-7357
[2][1	-7358
ndist	-7359
Answer	-7360
▁ifact	-7361
+1)/2;\	-7362
▁"\'\'\'	-7363
bufferPointer	-7364
(\'7	-7365
1(1,	-7366
Head	-7367
INIT	-7368
imit	-7369
▁bot	-7370
▁diag	-7371
shuffle	-7372
▁object	-7373
pn	-7374
10(	-7375
▁nh	-7376
=-1,	-7377
▁Pr	-7378
lint	-7379
▁[2,	-7380
Height	-7381
4(	-7382
nse	-7383
1\'\	-7384
][3],	-7385
▁Your	-7386
▁seed	-7387
bottom	-7388
▁exactly	-7389
+2\	-7390
])*(	-7391
that	-7392
maximum	-7393
bination	-7394
▁binarySearch	-7395
ORT	-7396
▁=>	-7397
Union	-7398
▁form	-7399
(\"%.8	-7400
FastIO	-7401
][2]);\	-7402
centroid	-7403
▁prepare	-7404
▁IT	-7405
/2))\	-7406
▁12;\	-7407
[110][1	-7408
▁initialize	-7409
Deg	-7410
non	-7411
maxv	-7412
▁-2;\	-7413
▁MAXM	-7414
▁guar	-7415
OfLine	-7416
[1010][	-7417
▁select	-7418
(1000000	-7419
▁connect	-7420
Ro	-7421
nax	-7422
▁17,	-7423
▁Pre	-7424
[100005	-7425
<\'0\'||	-7426
vb	-7427
▁MA	-7428
▁PB	-7429
Parent	-7430
▁\"\")	-7431
<>());\	-7432
command	-7433
_000_000	-7434
1!=	-7435
7:\	-7436
sig	-7437
▁bk	-7438
ross	-7439
▁Alex	-7440
000000\")\	-7441
[100][100];\	-7442
till	-7443
▁END	-7444
leted	-7445
▁Sort	-7446
▁original	-7447
▁permutation	-7448
32)	-7449
kes	-7450
3720	-7451
extra	-7452
system	-7453
//10	-7454
[2]]	-7455
%10;\	-7456
▁105;\	-7457
▁become	-7458
▁cities	-7459
loseable	-7460
▁warning	-7461
\343\201\217	-7462
UR	-7463
jc	-7464
(-(	-7465
(1-	-7466
EOF	-7467
Each	-7468
▁Poly	-7469
Weight	-7470
signed	-7471
▁inbuf	-7472
▁types	-7473
addEdge	-7474
nprev	-7475
nPoint	-7476
strcmp	-7477
pattern	-7478
WUB	-7479
abi	-7480
▁rq	-7481
(2*(	-7482
1)]\	-7483
3685	-7484
][4]	-7485
==3:\	-7486
error	-7487
▁nmax	-7488
\345\210\227	-7489
NT	-7490
REP	-7491
ens	-7492
tam	-7493
ador	-7494
▁hex	-7495
▁pred	-7496
]==1):\	-7497
lowercase	-7498
ws	-7499
10[	-7500
▁Ma	-7501
tdec	-7502
speed	-7503
thing	-7504
37203685	-7505
\350\250\2	-7506
▁instanceof	-7507
^=	-7508
(5,	-7509
1=(	-7510
2()	-7511
▁/\	-7512
▁SS	-7513
▁ag	-7514
Heap	-7515
];}\	-7516
ving	-7517
(4);\	-7518
overed	-7519
:2	-7520
wr	-7521
*100	-7522
>=0)	-7523
nind	-7524
Zeros	-7525
▁\".\"	-7526
▁exgcd	-7527
tcurrent	-7528
▁\'*\';\	-7529
=3	-7530
nQ	-7531
_00	-7532
atis	-7533
▁clr	-7534
▁fre	-7535
izont	-7536
▁\")"	-7537
scores	-7538
▁connected	-7539
\342\225\220	-7540
Ru	-7541
lm	-7542
0]\	-7543
▁29	-7544
▁bu	-7545
light	-7546
reset	-7547
100000	-7548
[0][0];\	-7549
BA	-7550
sd	-7551
alls	-7552
conv	-7553
▁des	-7554
▁ori	-7555
))):\	-7556
[20],	-7557
isEnd	-7558
▁coef	-7559
people	-7560
ptrbuf	-7561
deredDict	-7562
wi	-7563
]+(	-7564
▁cycles	-7565
▁numeric	-7566
▁problems	-7567
accumulate	-7568
/4	-7569
89	-7570
▁deq	-7571
▁\":\"	-7572
[100100],	-7573
Tok	-7574
iod	-7575
+2][	-7576
**2)\	-7577
2)):\	-7578
▁walk	-7579
rength	-7580
negative	-7581
\346\210\2	-7582
▁1000000007,	-7583
ASY	-7584
]];	-7585
gir	-7586
tra	-7587
▁77	-7588
-1]>	-7589
prot	-7590
arser	-7591
▁twos	-7592
▁endregion	-7593
22337203685	-7594
ana	-7595
nam	-7596
npr	-7597
▁1+	-7598
term	-7599
▁BFS	-7600
▁PII	-7601
0++;\	-7602
candid	-7603
intersect	-7604
tMyScanner	-7605
▁Pt	-7606
2,3,	-7607
todd	-7608
▁Cnt	-7609
▁ent	-7610
343\20	-7611
foo	-7612
play	-7613
Round	-7614
▁roots	-7615
▁Another	-7616
EASY	-7617
[4]={	-7618
ences	-7619
▁pick	-7620
▁sout	-7621
0),(0,	-7622
[50];\	-7623
▁\"0\"\	-7624
filename	-7625
$$$$	-7626
HARD	-7627
conj	-7628
▁14,	-7629
+1]==	-7630
))));\	-7631
999999	-7632
1,0,-1,	-7633
\345\255\227	-7634
▁rf	-7635
tptr	-7636
▁segs	-7637
Change	-7638
erties	-7639
▁{}\".	-7640
nnumber	-7641
tparent	-7642
▁question	-7643
[2005][200	-7644
\345\260\2	-7645
\344\270\200	-7646
)->	-7647
▁Lo	-7648
▁sj	-7649
)),\	-7650
1100	-7651
Ones	-7652
▁mapa	-7653
▁Value	-7654
===	-7655
els	-7656
pol	-7657
-1)"	-7658
0):\	-7659
]]:\	-7660
arri	-7661
flip	-7662
geom	-7663
leep	-7664
poss	-7665
(2):\	-7666
[0]].	-7667
equal	-7668
??????????	-7669
ami	-7670
▁By	-7671
▁_,	-7672
▁MAP	-7673
▁200;	-7674
disable	-7675
@@	-7676
▁3:	-7677
]][0]	-7678
nfirst	-7679
inverse	-7680
=[]	-7681
▁00	-7682
###\	-7683
>0&&	-7684
none	-7685
▁5000	-7686
-1]))\	-7687
==-1:\	-7688
object	-7689
▁Right	-7690
▁candidate	-7691
▁FastPrinter	-7692
22337203685477	-7693
bu	-7694
lol	-7695
sts	-7696
▁EX	-7697
five	-7698
java	-7699
▁25;	-7700
▁their	-7701
\357\274\214	-7702
2=(	-7703
▁*)	-7704
▁yc	-7705
eiou	-7706
▁ali	-7707
▁hit	-7708
▁&...	-7709
▁inlt	-7710
▁changes	-7711
}}\	-7712
)/2\	-7713
Game	-7714
▁binom	-7715
▁\'\'\'\	-7716
UpperCase	-7717
&-	-7718
8)	-7719
bot	-7720
]),\	-7721
load	-7722
xnum	-7723
▁bef	-7724
,2):\	-7725
▁Size	-7726
[110],	-7727
needed	-7728
▁getans	-7729
Pl	-7730
▁qi	-7731
fect	-7732
star	-7733
▁paths	-7734
▁guarante	-7735
1).	-7736
game	-7737
ypot	-7738
==0||	-7739
[11];\	-7740
timport	-7741
(\"\"))\	-7742
itertools	-7743
()<	-7744
▁tu	-7745
(\"+	-7746
<=2*	-7747
Init	-7748
Used	-7749
tdice	-7750
minimum	-7751
▁1005;\	-7752
6\20	-7753
\')]	-7754
▁\']	-7755
▁net	-7756
Moves	-7757
nword	-7758
winner	-7759
▁First	-7760
▁apply	-7761
tbuffer	-7762
LOG	-7763
6):\	-7764
cell	-7765
ghts	-7766
stru	-7767
aeiou	-7768
house	-7769
▁Prop	-7770
▁rrep	-7771
modify	-7772
\345\233\2	-7773
▁intervals	-7774
collections	-7775
oh	-7776
5000	-7777
])))	-7778
inate	-7779
where	-7780
▁pivot	-7781
\343\203\211	-7782
\343\203\263	-7783
▁stt	-7784
Depth	-7785
active	-7786
queries	-7787
\345\256\2	-7788
\343\203\210	-7789
27\2	-7790
▁1]),	-7791
]&	-7792
10;	-7793
9)+	-7794
Oct	-7795
▁___	-7796
][0]-	-7797
teams	-7798
▁Dice	-7799
▁zeroes	-7800
▁readint	-7801
▁arguments	-7802
\345\210\206	-7803
MQ	-7804
(_)	-7805
Now	-7806
__.	-7807
aba	-7808
▁gp	-7809
0,1,	-7810
rays	-7811
▁26)	-7812
)-1]\	-7813
Lucky	-7814
▁expo	-7815
isalpha	-7816
largest	-7817
hu	-7818
Move	-7819
>>();\	-7820
000000;	-7821
[1]=1;\	-7822
▁getSum	-7823
▁another	-7824
▁	-7825
n	-7826
\	-7827
t	-7828
i	-7829
e	-7830
r	-7831
a	-7832
s	-7833
(	-7834
)	-7835
o	-7836
;	-7837
=	-7838
l	-7839
u	-7840
c	-7841
p	-7842
d	-7843
[	-7844
]	-7845
f	-7846
m	-7847
g	-7848
,	-7849
+	-7850
0	-7851
1	-7852
.	-7853
<	-7854
b	-7855
{	-7856
}	-7857
x	-7858
"	-7859
:	-7860
-	-7861
h	-7862
>	-7863
v	-7864
2	-7865
y	-7866
j	-7867
w	-7868
k	-7869
S	-7870
_	-7871
'	-7872
*	-7873
/	-7874
3	-7875
P	-7876
I	-7877
&	-7878
N	-7879
T	-7880
A	-7881
%	-7882
#	-7883
O	-7884
z	-7885
L	-7886
M	-7887
C	-7888
4	-7889
q	-7890
5	-7891
E	-7892
!	-7893
R	-7894
B	-7895
Y	-7896
H	-7897
|	-7898
7	-7899
D	-7900
F	-7901
6	-7902
9	-7903
V	-7904
?	-7905
W	-7906
X	-7907
8	-7908
J	-7909
U	-7910
G	-7911
K	-7912
Q	-7913
^	-7914
Z	-7915
@	-7916
~	-7917
$	-7918
≤	-7919
`	-7920
—	-7921
⋅	-7922
→	-7923
×	-7924
·	-7925
□	-7926
≠	-7927
’	-7928
≥	-7929
≦	-7930
–	-7931
«	-7932
»	-7933
“	-7934
”	-7935
⊕	-7936
‘	-7937
−	-7938
■	-7939
́	-7940
∈	-7941
∑	-7942
С	-7943
⌈	-7944
⌉	-7945
π	-7946
θ	-7947
φ	-7948
・	-7949
ε	-7950
√	-7951
⊙	-7952
⌊	-7953
⌋	-7954
⩽	-7955
α	-7956
≡	-7957
○	-7958
∞	-7959
●	-7960
é	-7961
β	-7962
λ	-7963
±	-7964
ü	-7965
č	-7966
ρ	-7967
и	-7968
с	-7969
⇒	-7970
∀	-7971
∃	-7972
本	-7973
ó	-7974
Φ	-7975
―	-7976
★	-7977
解	-7978
説	-7979
ß	-7980
à	-7981
á	-7982
÷	-7983
š	-7984
Δ	-7985
Ψ	-7986
σ	-7987
τ	-7988
ω	-7989
А	-7990
Ж	-7991
е	-7992
і	-7993
←	-7994
⇔	-7995
∅	-7996
