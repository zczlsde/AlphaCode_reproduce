in	-0
<unk>	0
<s>	0
</s>	0
;\	-1
▁=	-2
int	-3
▁i	-4
on	-5
▁s	-6
▁(	-7
{\	-8
);\	-9
}\	-10
or	-11
re	-12
▁l	-13
▁{\	-14
ut	-15
▁n	-16
an	-17
▁<	-18
▁1	-19
▁c	-20
st	-21
()	-22
\"	-23
▁f	-24
▁+	-25
▁0	-26
▁m	-27
▁}\	-28
)\	-29
er	-30
ong	-31
▁int	-32
▁a	-33
▁p	-34
▁if	-35
se	-36
\'	-37
▁-	-38
++	-39
▁re	-40
▁for	-41
ge	-42
:\	-43
ur	-44
en	-45
▁long	-46
▁t	-47
▁b	-48
nt	-49
ol	-50
▁j	-51
][	-52
urn	-53
turn	-54
it	-55
▁>	-56
de	-57
▁in	-58
ti	-59
rint	-60
le	-61
▁st	-62
▁d	-63
mp	-64
];\	-65
▁==	-66
ing	-67
el	-68
▁return	-69
▁r	-70
▁v	-71
put	-72
▁ma	-73
out	-74
ans	-75
▁x	-76
uti	-77
ar	-78
▁<<	-79
▁sol	-80
00	-81
++)	-82
();\	-83
▁*	-84
ad	-85
ua	-86
ang	-87
▁,	-88
ub	-89
ac	-90
uage	-91
anguage	-92
ex	-93
▁language	-94
am	-95
ution	-96
▁&	-97
▁"	-98
▁solution	-99
else	-100
St	-101
id	-102
▁0;\	-103
ort	-104
▁\	-105
at	-106
ew	-107
um	-108
(\"	-109
ext	-110
▁2	-111
al	-112
▁\"	-113
▁0;	-114
ring	-115
▁ans	-116
▁>>	-117
li	-118
sp	-119
us	-120
].	-121
nint	-122
▁\'	-123
▁k	-124
hi	-125
):\	-126
▁<=	-127
for	-128
Int	-129
▁else	-130
cl	-131
print	-132
▁w	-133
ma	-134
iz	-135
mport	-136
end	-137
▁print	-138
ue	-139
▁P	-140
],	-141
can	-142
▁new	-143
])	-144
▁+=	-145
-1	-146
>\	-147
ow	-148
\2	-149
con	-150
▁y	-151
long	-152
em	-153
String	-154
ni	-155
lic	-156
▁%	-157
ine	-158
ublic	-159
hile	-160
ir	-161
input	-162
=0	-163
next	-164
▁main	-165
std	-166
as	-167
ude	-168
▁C	-169
clude	-170
ange	-171
include	-172
oid	-173
av	-174
ct	-175
[]	-176
▁cin	-177
▁1;	-178
▁cout	-179
--	-180
ava	-181
▁1;\	-182
ame	-183
▁java	-184
[0	-185
[1	-186
▁range	-187
\",	-188
▁S	-189
ch	-190
▁/	-191
yst	-192
ace	-193
ystem	-194
().	-195
ati	-196
ize	-197
▁std	-198
ve	-199
os	-200
eg	-201
▁M	-202
1,	-203
def	-204
tif	-205
ou	-206
ader	-207
▁while	-208
())\	-209
▁1)	-210
ce	-211
atic	-212
ok	-213
▁ar	-214
▁!	-215
▁&&	-216
Re	-217
nimport	-218
ap	-219
ON	-220
using	-221
▁"#	-222
tint	-223
TH	-224
lit	-225
▁PY	-226
nusing	-227
THON	-228
▁PYTHON	-229
io	-230
▁I	-231
PP	-232
▁CPP	-233
(\"%	-234
split	-235
Reader	-236
ream	-237
ff	-238
tion	-239
▁name	-240
())	-241
tfor	-242
0000	-243
ll	-244
ri	-245
space	-246
()\	-247
od	-248
=1	-249
▁++	-250
▁namespace	-251
ist	-252
\\	-253
+1	-254
bit	-255
ack	-256
▁e	-257
size	-258
▁q	-259
▁static	-260
]\	-261
ner	-262
++;\	-263
oub	-264
ouble	-265
]);\	-266
oken	-267
))	-268
ctor	-269
▁!=	-270
op	-271
▁}	-272
ount	-273
bits	-274
canner	-275
▁max	-276
++.	-277
stdc	-278
public	-279
len	-280
▁T	-281
▁res	-282
ush	-283
tre	-284
ass	-285
▁g	-286
is	-287
ra	-288
ate	-289
ot	-290
▁0)	-291
(0	-292
▁1,	-293
▁u	-294
uff	-295
System	-296
cep	-297
//	-298
\3	-299
Ex	-300
▁void	-301
const	-302
ception	-303
Exception	-304
max	-305
▁N	-306
nfor	-307
th	-308
▁A	-309
▁input	-310
));\	-311
emp	-312
irst	-313
ln	-314
▁B	-315
]=	-316
){\	-317
▁{	-318
get	-319
nextInt	-320
▁h	-321
▁dp	-322
ak	-323
▁>=	-324
());\	-325
ool	-326
println	-327
▁|	-328
▁String	-329
▁ch	-330
Token	-331
Stream	-332
push	-333
▁-1	-334
rit	-335
back	-336
read	-337
▁public	-338
▁sum	-339
▁next	-340
air	-341
▁min	-342
▁end	-343
nconst	-344
reak	-345
canf	-346
cond	-347
▁:	-348
rue	-349
[0]	-350
);	-351
nput	-352
alse	-353
ed	-354
++)\	-355
new	-356
eger	-357
▁cl	-358
util	-359
▁0,	-360
treturn	-361
map	-362
Integer	-363
ys	-364
▁th	-365
ig	-366
char	-367
void	-368
line	-369
\34	-370
first	-371
▁1\	-372
app	-373
▁cnt	-374
ode	-375
),	-376
[2	-377
▁class	-378
VA	-379
row	-380
▁con	-381
om	-382
▁1]	-383
▁_	-384
ere	-385
▁3	-386
and	-387
▁scanf	-388
second	-389
\");\	-390
▁endl	-391
▁||	-392
OException	-393
::	-394
▁J	-395
append	-396
par	-397
izer	-398
▁break	-399
nvoid	-400
=0;	-401
▁ve	-402
▁out	-403
▁JA	-404
▁sc	-405
▁JAVA	-406
01	-407
(\'	-408
nc	-409
ts	-410
ered	-411
uffered	-412
==	-413
str	-414
▁F	-415
riter	-416
▁L	-417
gs	-418
tc	-419
ast	-420
min	-421
nprint	-422
▁mod	-423
\')	-424
▁printf	-425
▁0\	-426
▁len	-427
▁arr	-428
();	-429
▁num	-430
import	-431
rra	-432
parse	-433
tin	-434
ufferedReader	-435
ase	-436
▁throw	-437
tpublic	-438
))\	-439
][0	-440
ath	-441
ul	-442
Writer	-443
nputStream	-444
num	-445
3\2	-446
me	-447
<<	-448
▁vector	-449
])\	-450
▁System	-451
vector	-452
nlong	-453
▁and	-454
▁sel	-455
Line	-456
\";\	-457
▁args	-458
▁double	-459
▁self	-460
▁Scanner	-461
il	-462
arr	-463
fs	-464
(),	-465
npublic	-466
((	-467
gth	-468
][1	-469
ab	-470
dp	-471
pair	-472
yp	-473
while	-474
▁1);\	-475
▁throws	-476
if	-477
▁cur	-478
la	-479
.*	-480
▁-=	-481
sum	-482
tinue	-483
>>	-484
▁[	-485
▁true	-486
Scanner	-487
define	-488
++){\	-489
▁10	-490
nd	-491
.*;\	-492
ndef	-493
▁read	-494
set	-495
▁map	-496
▁(!	-497
ns	-498
Tokenizer	-499
▁solve	-500
▁((	-501
et	-502
es	-503
▁mid	-504
##	-505
(0);\	-506
▁get	-507
length	-508
AX	-509
▁//	-510
egin	-511
string	-512
\")\	-513
2,	-514
▁count	-515
=1\	-516
rintWriter	-517
**	-518
ind	-519
nif	-520
▁str	-521
<=	-522
Long	-523
▁bool	-524
fr	-525
val	-526
]]	-527
(1	-528
begin	-529
cur	-530
count	-531
▁z	-532
}"	-533
▁continue	-534
ith	-535
__	-536
\')\	-537
cnt	-538
▁val	-539
▁R	-540
▁IOException	-541
▁ad	-542
+=	-543
\343\2	-544
▁false	-545
res	-546
▁list	-547
lag	-548
NO	-549
ck	-550
tr	-551
list	-552
bool	-553
(1,	-554
▁BufferedReader	-555
▁o	-556
ES	-557
rray	-558
▁4	-559
to	-560
\';\	-561
▁Integer	-562
tie	-563
▁dfs	-564
pos	-565
ft	-566
▁pri	-567
▁D	-568
stdio	-569
--;\	-570
ain	-571
ht	-572
OD	-573
▁?	-574
[1]	-575
▁tmp	-576
YES	-577
▁de	-578
)"	-579
▁5	-580
add	-581
readLine	-582
▁sys	-583
0,	-584
telse	-585
vate	-586
dex	-587
List	-588
ver	-589
▁pos	-590
▁2;\	-591
ost	-592
▁10000	-593
};\	-594
==0	-595
tp	-596
▁\'0	-597
ke	-598
▁it	-599
empl	-600
ult	-601
--)	-602
----	-603
est	-604
sy	-605
parseInt	-606
()))\	-607
[]\	-608
LL	-609
ull	-610
▁(1	-611
tSystem	-612
uffer	-613
oint	-614
twhile	-615
▁1][	-616
nputStreamReader	-617
▁StringTokenizer	-618
▁char	-619
1[	-620
][0]	-621
=0\	-622
lo	-623
▁import	-624
from	-625
▁PrintWriter	-626
(0,	-627
with	-628
elif	-629
2)	-630
▁ret	-631
▁#	-632
10	-633
ert	-634
MAX	-635
▁or	-636
▁sort	-637
2[	-638
▁br	-639
sync	-640
▁string	-641
▁temp	-642
-1]	-643
nn	-644
tst	-645
tb	-646
Ch	-647
ile	-648
).	-649
▁pre	-650
▁op	-651
uto	-652
tprint	-653
▁ll	-654
ype	-655
ean	-656
▁is	-657
▁0:\	-658
▁id	-659
emplate	-660
▁-1;\	-661
nin	-662
lf	-663
7;\	-664
cd	-665
▁Main	-666
atch	-667
Char	-668
]==	-669
▁MOD	-670
uil	-671
▁size	-672
▁ios	-673
nextToken	-674
ro	-675
sort	-676
ta	-677
\',	-678
IOException	-679
02	-680
art	-681
▁2)	-682
buffer	-683
class	-684
nvector	-685
2;\	-686
of	-687
=0;\	-688
ose	-689
+=1\	-690
nbool	-691
ninline	-692
->	-693
▁di	-694
ntemplate	-695
[3	-696
ree	-697
▁flag	-698
nelse	-699
▁tr	-700
readline	-701
dge	-702
NF	-703
\"\	-704
na	-705
ator	-706
ore	-707
di	-708
▁se	-709
▁G	-710
tt	-711
▁to	-712
omp	-713
false	-714
▁col	-715
▁pair	-716
ber	-717
▁null	-718
tlong	-719
▁2;	-720
=1;	-721
pop	-722
ower	-723
▁1];\	-724
▁vis	-725
▁Fast	-726
rrayList	-727
que	-728
▁add	-729
tString	-730
▁private	-731
000	-732
xt	-733
stdin	-734
01\2	-735
sc	-736
ord	-737
1.	-738
stream	-739
*(	-740
uild	-741
up	-742
▁nextInt	-743
▁tot	-744
mod	-745
▁mem	-746
▁100000000	-747
At	-748
act	-749
ight	-750
eck	-751
ty	-752
node	-753
5\2	-754
te	-755
Double	-756
▁up	-757
tstatic	-758
da	-759
maxn	-760
\343\201\2	-761
now	-762
sert	-763
one	-764
double	-765
▁9	-766
self	-767
charAt	-768
▁boolean	-769
][1]	-770
vis	-771
erator	-772
rent	-773
():\	-774
(){\	-775
putStream	-776
close	-777
his	-778
rt	-779
base	-780
▁le	-781
▁[]\	-782
has	-783
writ	-784
####	-785
▁E	-786
▁\'\\	-787
▁const	-788
▁elif	-789
un	-790
uf	-791
okenizer	-792
▁gcd	-793
lem	-794
!=	-795
▁mx	-796
64	-797
%2	-798
▁H	-799
tans	-800
▁Math	-801
auto	-802
▁^	-803
▁ab	-804
▁Input	-805
][2	-806
ime	-807
\'\	-808
2.	-809
able	-810
ign	-811
▁__	-812
abs	-813
▁node	-814
5];\	-815
rrays	-816
index	-817
ound	-818
uer	-819
[10000	-820
pre	-821
(2	-822
▁0)\	-823
InputStream	-824
0;\	-825
uct	-826
ata	-827
-1,	-828
▁INF	-829
\27	-830
];	-831
??	-832
]++;\	-833
lld	-834
▁set	-835
▁-1,	-836
sed	-837
ename	-838
ypename	-839
ash	-840
▁\'0\'	-841
▁def	-842
ent	-843
idx	-844
tmp	-845
BufferedReader	-846
▁now	-847
▁catch	-848
ypedef	-849
ction	-850
im	-851
]:\	-852
▁not	-853
nfrom	-854
amb	-855
▁*=	-856
uery	-857
▁put	-858
ntypedef	-859
1)	-860
ambda	-861
sk	-862
Out	-863
▁Long	-864
ray	-865
)(	-866
\':\	-867
▁he	-868
left	-869
▁0);\	-870
▁dist	-871
▁--	-872
▁6	-873
▁1)\	-874
return	-875
br	-876
)]\	-877
mid	-878
▁sizeof	-879
nstr	-880
1;\	-881
>0	-882
fl	-883
2\	-884
insert	-885
>=	-886
▁abs	-887
aw	-888
▁\"\\	-889
0];\	-890
>();\	-891
▁ex	-892
-1)	-893
rip	-894
▁getchar	-895
▁memset	-896
tout	-897
▁last	-898
ion	-899
..	-900
▁True	-901
raw	-902
▁;	-903
--------	-904
]-	-905
nstruct	-906
)):\	-907
==1	-908
▁;\	-909
▁mp	-910
▁math	-911
▁ArrayList	-912
More	-913
olve	-914
temp	-915
▁first	-916
[5	-917
3,	-918
▁sz	-919
per	-920
▁try	-921
11	-922
ove	-923
nwhile	-924
[4	-925
=(	-926
tcin	-927
write	-928
▁2,	-929
hasMore	-930
fi	-931
▁K	-932
()]\	-933
nl	-934
▁V	-935
44	-936
strip	-937
top	-938
▁-1)	-939
&&	-940
ctions	-941
▁InputReader	-942
▁raw	-943
oin	-944
Array	-945
+1,	-946
flag	-947
ep	-948
parseLong	-949
▁result	-950
+\"	-951
▁\";\	-952
inal	-953
igned	-954
02\2	-955
▁Q	-956
▁%=	-957
date	-958
▁rep	-959
mx	-960
tScanner	-961
▁\");\	-962
lections	-963
value	-964
▁adj	-965
+1)	-966
math	-967
ii	-968
▁MAX	-969
▁edge	-970
▁1:\	-971
(-1	-972
nsigned	-973
cle	-974
cin	-975
ax	-976
▁gr	-977
uilder	-978
▁nextLong	-979
wap	-980
20	-981
Math	-982
endl	-983
Stack	-984
main	-985
tcout	-986
\345\2	-987
typename	-988
▁check	-989
/\	-990
6\2	-991
nans	-992
▁the	-993
▁10;\	-994
ght	-995
▁7	-996
MAXN	-997
Arrays	-998
nx	-999
he	-1000
Builder	-1001
td	-1002
▁find	-1003
35	-1004
2);\	-1005
▁fr	-1006
OutputStream	-1007
▁left	-1008
Set	-1009
find	-1010
ls	-1011
▁1])	-1012
[100	-1013
No	-1014
col	-1015
tpri	-1016
name	-1017
make	-1018
iostream	-1019
tot	-1020
=1;\	-1021
){	-1022
verse	-1023
[0][	-1024
PrintWriter	-1025
▁/=	-1026
▁os	-1027
▁X	-1028
▁operator	-1029
nb	-1030
▁idx	-1031
pow	-1032
▁tokenizer	-1033
pp	-1034
err	-1035
▁inf	-1036
▁7;\	-1037
wer	-1038
Map	-1039
▁start	-1040
]+	-1041
▁right	-1042
▁lo	-1043
▁line	-1044
50	-1045
ULL	-1046
▁fi	-1047
nclass	-1048
▁100	-1049
});\	-1050
2)\	-1051
]==\'	-1052
tn	-1053
▁cost	-1054
mat	-1055
right	-1056
yte	-1057
tprivate	-1058
tbreak	-1059
[2]	-1060
range	-1061
empty	-1062
Tr	-1063
99	-1064
join	-1065
▁par	-1066
IO	-1067
ss	-1068
ask	-1069
Tokens	-1070
▁this	-1071
▁1].	-1072
sub	-1073
=[]\	-1074
▁False	-1075
[(	-1076
ents	-1077
▁pr	-1078
(!	-1079
▁tree	-1080
[][	-1081
,\	-1082
▁fa	-1083
▁puts	-1084
▁lambda	-1085
▁dis	-1086
▁query	-1087
hasMoreTokens	-1088
qrt	-1089
▁\'-	-1090
▁scan	-1091
▁que	-1092
▁\'9	-1093
▁cal	-1094
Trace	-1095
StackTrace	-1096
////	-1097
start	-1098
Of	-1099
printStackTrace	-1100
▁\",	-1101
▁8	-1102
tx	-1103
ard	-1104
rime	-1105
▁reader	-1106
▁swap	-1107
.0	-1108
Yes	-1109
({	-1110
****	-1111
▁hi	-1112
;}\	-1113
▁ok	-1114
ont	-1115
2(	-1116
nm	-1117
time	-1118
▁as	-1119
edge	-1120
▁:\	-1121
ited	-1122
())):\	-1123
NULL	-1124
true	-1125
▁ro	-1126
si	-1127
▁\'.	-1128
▁test	-1129
flush	-1130
IN	-1131
▁mat	-1132
...	-1133
nchar	-1134
▁second	-1135
=[	-1136
igit	-1137
ven	-1138
np	-1139
▁final	-1140
▁Double	-1141
==0:\	-1142
2;	-1143
▁1000000007;\	-1144
aph	-1145
\")	-1146
▁vec	-1147
+1\	-1148
▁comp	-1149
▁stdin	-1150
>(	-1151
ter	-1152
▁Exception	-1153
\');\	-1154
tf	-1155
▁prime	-1156
arent	-1157
3;\	-1158
ps	-1159
In	-1160
▁total	-1161
7\2	-1162
▁update	-1163
▁index	-1164
=\"	-1165
▁StringBuilder	-1166
all	-1167
odd	-1168
5],	-1169
▁pw	-1170
▁2\	-1171
▁file	-1172
(*	-1173
▁*/\	-1174
solve	-1175
▁inv	-1176
ity	-1177
root	-1178
ey	-1179
//\	-1180
ld	-1181
parseDouble	-1182
▁make	-1183
pace	-1184
stdout	-1185
▁FastScanner	-1186
9;\	-1187
(0)\	-1188
ation	-1189
gr	-1190
▁maxn	-1191
ise	-1192
!=0	-1193
ect	-1194
[][]	-1195
tl	-1196
▁2);\	-1197
32	-1198
▁W	-1199
+1):\	-1200
dist	-1201
tm	-1202
14	-1203
5;\	-1204
+1]	-1205
qua	-1206
pl	-1207
gh	-1208
[1][	-1209
100	-1210
########	-1211
34	-1212
nextLong	-1213
▁nextDouble	-1214
nstring	-1215
unc	-1216
▁pow	-1217
▁init	-1218
<>();\	-1219
ek	-1220
▁(0	-1221
queue	-1222
clear	-1223
Num	-1224
▁mn	-1225
▁sb	-1226
\":\	-1227
▁FastReader	-1228
cost	-1229
\343\202\2	-1230
▁collections	-1231
-1):\	-1232
▁1],	-1233
▁fact	-1234
▁1))	-1235
▁ss	-1236
are	-1237
erase	-1238
low	-1239
▁curr	-1240
▁ind	-1241
▁dep	-1242
ink	-1243
rem	-1244
ug	-1245
1\2	-1246
▁)	-1247
[0])	-1248
▁{}\	-1249
try	-1250
1);\	-1251
▁"\	-1252
82	-1253
1=	-1254
▁array	-1255
[++	-1256
tres	-1257
<<\"	-1258
▁\'0\';\	-1259
▁go	-1260
([	-1261
▁U	-1262
):	-1263
[0]\	-1264
▁mul	-1265
\',\'	-1266
ptr	-1267
▁point	-1268
▁\'1	-1269
bj	-1270
03\2	-1271
)%	-1272
front	-1273
[0].	-1274
sys	-1275
Point	-1276
▁prev	-1277
▁root	-1278
[0],	-1279
▁en	-1280
buf	-1281
ret	-1282
():	-1283
▁all	-1284
▁seg	-1285
▁File	-1286
▁99	-1287
==\'	-1288
▁time	-1289
Space	-1290
-2	-1291
tbool	-1292
56	-1293
ic	-1294
bound	-1295
-1]\	-1296
igInteger	-1297
ces	-1298
▁dx	-1299
fa	-1300
._	-1301
▁ac	-1302
60	-1303
ArrayList	-1304
array	-1305
(2,	-1306
▁used	-1307
▁dy	-1308
▁nxt	-1309
isect	-1310
-1;	-1311
▁top	-1312
\",&	-1313
▁number	-1314
▁xrange	-1315
+1)\	-1316
▁(;	-1317
????	-1318
+(	-1319
ip	-1320
lements	-1321
last	-1322
pr	-1323
ne	-1324
lower	-1325
▁data	-1326
check	-1327
cont	-1328
▁com	-1329
/2	-1330
sz	-1331
tdouble	-1332
18	-1333
());	-1334
-1;\	-1335
cout	-1336
[:	-1337
]){\	-1338
=0,	-1339
0],	-1340
▁1]);\	-1341
▁value	-1342
=\'	-1343
▁calc	-1344
1];\	-1345
8244	-1346
▁3)	-1347
EP	-1348
\346\2	-1349
▁from	-1350
ay	-1351
[20000	-1352
824435	-1353
-1\	-1354
]))	-1355
▁Point	-1356
00000000	-1357
rix	-1358
loat	-1359
txt	-1360
▁low	-1361
StringTokenizer	-1362
▁Hash	-1363
gor	-1364
▁diff	-1365
rob	-1366
▁ne	-1367
-1][	-1368
comp	-1369
▁Task	-1370
tree	-1371
▁Y	-1372
▁answer	-1373
toString	-1374
fd	-1375
▁build	-1376
dict	-1377
ero	-1378
tscanf	-1379
▁cmp	-1380
key	-1381
our	-1382
))"	-1383
)))\	-1384
ithm	-1385
nelif	-1386
gorithm	-1387
▁*\	-1388
lines	-1389
Max	-1390
▁exit	-1391
To	-1392
inf	-1393
▁scanner	-1394
1(	-1395
12	-1396
▁buf	-1397
SpaceChar	-1398
▁bit	-1399
]));\	-1400
]];\	-1401
7,	-1402
},	-1403
algorithm	-1404
[0];\	-1405
nk	-1406
0)	-1407
]].	-1408
▁at	-1409
lim	-1410
▁@	-1411
3\	-1412
1\	-1413
rag	-1414
++]	-1415
▁head	-1416
▁push	-1417
number	-1418
▁[0]	-1419
====	-1420
)));\	-1421
rr	-1422
▁5;\	-1423
2*	-1424
FS	-1425
▁sp	-1426
(\"\\	-1427
)*	-1428
▁\"\";\	-1429
▁row	-1430
mask	-1431
▁on	-1432
▁[]	-1433
▁nextLine	-1434
init	-1435
)/	-1436
4,	-1437
▁26	-1438
used	-1439
▁1));\	-1440
)]	-1441
digit	-1442
▁auto	-1443
tokenizer	-1444
▁1000	-1445
]*	-1446
ttry	-1447
throw	-1448
▁\'-\')	-1449
nll	-1450
ny	-1451
15	-1452
ZE	-1453
]))\	-1454
▁>>=	-1455
code	-1456
▁pl	-1457
2=	-1458
tw	-1459
▁1000000007	-1460
0;	-1461
hild	-1462
continue	-1463
▁99824435	-1464
ors	-1465
match	-1466
data	-1467
▁solver	-1468
own	-1469
▁rem	-1470
Count	-1471
----------------	-1472
▁of	-1473
**\	-1474
INF	-1475
26	-1476
▁1):\	-1477
▁bisect	-1478
||	-1479
▁stream	-1480
+1][	-1481
ers	-1482
▁base	-1483
\"\"	-1484
▁cerr	-1485
lang	-1486
\343\203\2	-1487
zy	-1488
▁power	-1489
ndouble	-1490
▁3;	-1491
0001	-1492
mn	-1493
result	-1494
▁sub	-1495
▁lc	-1496
ragma	-1497
pragma	-1498
True	-1499
tdp	-1500
curr	-1501
)-	-1502
tBufferedReader	-1503
▁(0);	-1504
-=	-1505
-=1\	-1506
tboolean	-1507
dis	-1508
]),	-1509
Node	-1510
IZE	-1511
2:\	-1512
+1);\	-1513
type	-1514
ble	-1515
(1);\	-1516
ault	-1517
tprintf	-1518
▁pi	-1519
▁best	-1520
▁lst	-1521
\':	-1522
▁\'9\')	-1523
0\	-1524
▁sorted	-1525
\",\"	-1526
point	-1527
resize	-1528
▁fl	-1529
req	-1530
--)\	-1531
ostream	-1532
▁\')\	-1533
bin	-1534
nxt	-1535
Val	-1536
▁Arrays	-1537
tsum	-1538
▁IO	-1539
▁\"+	-1540
bject	-1541
\")"	-1542
▁^=	-1543
1)\	-1544
▁mi	-1545
▁visited	-1546
no	-1547
lambda	-1548
ite	-1549
▁la	-1550
MOD	-1551
▁ord	-1552
2]	-1553
▁-1);\	-1554
2\2	-1555
▁an	-1556
[0])\	-1557
▁3;\	-1558
\'0	-1559
Col	-1560
seek	-1561
13	-1562
[]=	-1563
\35	-1564
ains	-1565
▁MAXN	-1566
▁1);	-1567
writable	-1568
(\"0	-1569
oth	-1570
;++	-1571
(\"-1	-1572
5,	-1573
cc	-1574
▁GC	-1575
▁-1\	-1576
/**\	-1577
ools	-1578
fact	-1579
Hash	-1580
LU	-1581
word	-1582
hor	-1583
tcount	-1584
nextLine	-1585
gn	-1586
▁run	-1587
==0)	-1588
▁fac	-1589
▁**	-1590
nr	-1591
quals	-1592
▁2)\	-1593
+1;\	-1594
<(	-1595
ority	-1596
vec	-1597
gcd	-1598
][3	-1599
\320	-1600
ec	-1601
1]	-1602
red	-1603
Time	-1604
+1];\	-1605
diff	-1606
(\"\");\	-1607
dep	-1608
▁key	-1609
0);\	-1610
▁{0,	-1611
▁tt	-1612
]!=	-1613
ninput	-1614
▁Node	-1615
null	-1616
▁heap	-1617
-1)\	-1618
Tree	-1619
-(	-1620
▁2]	-1621
▁graph	-1622
ance	-1623
▁do	-1624
adj	-1625
)+	-1626
[0][0]	-1627
▁xx	-1628
exit	-1629
27	-1630
age	-1631
]][	-1632
sqrt	-1633
▁1),	-1634
vel	-1635
\']	-1636
sible	-1637
▁sqrt	-1638
Sum	-1639
▁cc	-1640
[-1]	-1641
▁OutputStream	-1642
▁arg	-1643
47	-1644
▁del	-1645
rk	-1646
prime	-1647
erge	-1648
Mis	-1649
(-1)\	-1650
▁4;	-1651
.\	-1652
▁case	-1653
yt	-1654
▁aa	-1655
\347\2	-1656
▁odd	-1657
▁O	-1658
▁inp	-1659
dd	-1660
(3	-1661
File	-1662
▁reverse	-1663
cstdio	-1664
Chars	-1665
\'.	-1666
ial	-1667
LUE	-1668
00\2	-1669
trep	-1670
andom	-1671
roblem	-1672
▁mask	-1673
Byte	-1674
tchar	-1675
VALUE	-1676
▁sh	-1677
▁(2	-1678
////////	-1679
Next	-1680
contains	-1681
9,	-1682
▁Ru	-1683
OR	-1684
remove	-1685
▁sm	-1686
]--;\	-1687
64_	-1688
tim	-1689
[1])	-1690
equals	-1691
vi	-1692
[])	-1693
AA	-1694
▁bo	-1695
nf	-1696
aultdict	-1697
com	-1698
limit	-1699
▁byte	-1700
1;	-1701
▁current	-1702
Number	-1703
uthor	-1704
]])	-1705
ary	-1706
//2	-1707
ytes	-1708
,0,	-1709
,&	-1710
24	-1711
▁parent	-1712
[1].	-1713
nmap	-1714
04	-1715
test	-1716
tk	-1717
ated	-1718
bug	-1719
dx	-1720
[1])\	-1721
reverse	-1722
current	-1723
]>	-1724
inv	-1725
▁eps	-1726
********	-1727
prev	-1728
ister	-1729
1][	-1730
open	-1731
[0]);\	-1732
▁my	-1733
Mismatch	-1734
▁putchar	-1735
▁queue	-1736
gister	-1737
▁unsigned	-1738
Input	-1739
<<(	-1740
CharArray	-1741
▁ii	-1742
isSpaceChar	-1743
▁high	-1744
▁li	-1745
ment	-1746
Edge	-1747
bo	-1748
iterator	-1749
ag	-1750
For	-1751
▁lim	-1752
ank	-1753
)){\	-1754
ork	-1755
olution	-1756
][0],	-1757
▁bin	-1758
▁2:\	-1759
▁can	-1760
▁si	-1761
[3]	-1762
(0),	-1763
ntime	-1764
▁al	-1765
▁rt	-1766
▁REP	-1767
stack	-1768
toCharArray	-1769
newlines	-1770
▁(1);	-1771
npair	-1772
▁GCC	-1773
==1:\	-1774
7\27	-1775
ER	-1776
▁word	-1777
go	-1778
▁nums	-1779
▁edges	-1780
ncount	-1781
[\'	-1782
(-1);\	-1783
▁mark	-1784
)1	-1785
▁ptr	-1786
BigInteger	-1787
▁|=	-1788
3)	-1789
[1],	-1790
\302\2	-1791
▁pq	-1792
ueue	-1793
[-1	-1794
args	-1795
▁one	-1796
ux	-1797
opy	-1798
(\"1	-1799
][2]	-1800
>;\	-1801
inp	-1802
ng	-1803
arget	-1804
]==0	-1805
▁neg	-1806
▁0){\	-1807
upper	-1808
/*	-1809
cal	-1810
sh	-1811
xx	-1812
▁typename	-1813
ceil	-1814
mi	-1815
]]++;\	-1816
place	-1817
));	-1818
tStringTokenizer	-1819
37	-1820
tarr	-1821
▁=\	-1822
nT	-1823
++,	-1824
▁counter	-1825
arch	-1826
<0	-1827
aa	-1828
(1)\	-1829
▁InputStream	-1830
fill	-1831
▁be	-1832
Index	-1833
▁co	-1834
total	-1835
oll	-1836
-1);\	-1837
\';	-1838
[6	-1839
\"\"\"\	-1840
ell	-1841
>&	-1842
[10	-1843
lst	-1844
output	-1845
▁IN	-1846
tvoid	-1847
▁has	-1848
tll	-1849
▁Count	-1850
\'){\	-1851
scanf	-1852
lock	-1853
[1]);\	-1854
2];\	-1855
▁Pair	-1856
▁lower	-1857
▁&&\	-1858
▁pp	-1859
tPrintWriter	-1860
▁ni	-1861
eight	-1862
query	-1863
▁);\	-1864
▁None	-1865
▁io	-1866
PS	-1867
wo	-1868
rstrip	-1869
▁stack	-1870
▁0.	-1871
▁\'0\')	-1872
this	-1873
▁even	-1874
lement	-1875
▁step	-1876
nums	-1877
reader	-1878
lis	-1879
▁per	-1880
▁Mod	-1881
▁)\	-1882
emplace	-1883
>,	-1884
2):\	-1885
▁yy	-1886
[1]\	-1887
unction	-1888
ave	-1889
fix	-1890
visited	-1891
case	-1892
+1;	-1893
▁inputStream	-1894
[10001	-1895
ition	-1896
substring	-1897
Pos	-1898
author	-1899
▁change	-1900
ompar	-1901
sion	-1902
▁ed	-1903
▁defaultdict	-1904
other	-1905
ry	-1906
0\2	-1907
isdigit	-1908
tv	-1909
()){\	-1910
-8	-1911
▁\';\	-1912
*2	-1913
▁+\	-1914
▁Buffered	-1915
cis	-1916
1:\	-1917
[4]	-1918
▁nx	-1919
][0];\	-1920
▁writer	-1921
nst	-1922
parent	-1923
inputStream	-1924
▁998244353;\	-1925
%2==0	-1926
__(	-1927
(\"%.	-1928
sb	-1929
nA	-1930
[101	-1931
tmax	-1932
▁Runtime	-1933
▁outputStream	-1934
seg	-1935
tcontinue	-1936
Base	-1937
]==1	-1938
▁deque	-1939
sorted	-1940
▁EPS	-1941
tvector	-1942
[200	-1943
cision	-1944
▁HashMap	-1945
▁md	-1946
\')"	-1947
)))	-1948
▁color	-1949
su	-1950
hs	-1951
qu	-1952
▁\")\	-1953
asc	-1954
▁imp	-1955
tArrays	-1956
▁ls	-1957
outputStream	-1958
rc	-1959
mul	-1960
[2][	-1961
▁no	-1962
▁optim	-1963
▁\"\"	-1964
tcnt	-1965
▁writ	-1966
throws	-1967
▁Counter	-1968
▁sgn	-1969
file	-1970
ark	-1971
tthis	-1972
################	-1973
▁LL	-1974
▁InputMismatch	-1975
Elements	-1976
▁PI	-1977
▁};\	-1978
ertools	-1979
uck	-1980
()"	-1981
▁stdout	-1982
▁strlen	-1983
precision	-1984
ha	-1985
erate	-1986
][2];\	-1987
ST	-1988
1],	-1989
ater	-1990
Pair	-1991
item	-1992
>::	-1993
▁rec	-1994
▁output	-1995
>0:\	-1996
▁div	-1997
▁open	-1998
Se	-1999
4\27	-2000
replace	-2001
dfs	-2002
▁\34	-2003
[1:	-2004
▁merge	-2005
ach	-2006
[1];\	-2007
ays	-2008
▁\"1	-2009
tbr	-2010
()))	-2011
*-	-2012
\342\2	-2013
▁lazy	-2014
ascii	-2015
\350	-2016
▁by	-2017
Min	-2018
Queue	-2019
▁length	-2020
▁48	-2021
▁My	-2022
▁Re	-2023
▁Max	-2024
hasMoreElements	-2025
//2\	-2026
16	-2027
ock	-2028
▁deg	-2029
ual	-2030
run	-2031
lay	-2032
False	-2033
unsigned	-2034
▁List	-2035
valueOf	-2036
▁\".	-2037
▁{1,	-2038
▁pro	-2039
__\':\	-2040
▁(((	-2041
▁acos	-2042
Object	-2043
▁-1)\	-2044
substr	-2045
\344\27	-2046
deg	-2047
-1];\	-2048
rapp	-2049
\343\201\256	-2050
33	-2051
\'\'	-2052
narr	-2053
printf	-2054
umerate	-2055
Di	-2056
____	-2057
▁wh	-2058
▁rr	-2059
mpty	-2060
▁path	-2061
uple	-2062
ly	-2063
18;\	-2064
>=0	-2065
telif	-2066
--){\	-2067
[100005];\	-2068
▁py	-2069
igh	-2070
ies	-2071
]<	-2072
▁bl	-2073
py	-2074
ilter	-2075
qr	-2076
[::	-2077
sm	-2078
▁compare	-2079
▁maxi	-2080
ca	-2081
riority	-2082
▁BigInteger	-2083
▁bb	-2084
▁\"0	-2085
▁\'__	-2086
▁fast	-2087
▁ps	-2088
nv	-2089
ytesIO	-2090
(10	-2091
▁26;	-2092
▁itertools	-2093
rapper	-2094
▁pref	-2095
▁sy	-2096
pppp	-2097
▁\'#	-2098
(0)	-2099
(2*	-2100
▁using	-2101
(_	-2102
stat	-2103
▁enumerate	-2104
▁readByte	-2105
▁ce	-2106
▁optimize	-2107
46	-2108
++];\	-2109
head	-2110
▁ny	-2111
Prime	-2112
▁move	-2113
Wrapper	-2114
register	-2115
ai	-2116
break	-2117
▁cy	-2118
ify	-2119
son	-2120
▁code	-2121
+2	-2122
-1])	-2123
▁Tree	-2124
▁debug	-2125
FSIZE	-2126
32_	-2127
▁IOWrapper	-2128
UFSIZE	-2129
▁upd	-2130
00];\	-2131
Key	-2132
25	-2133
▁2];\	-2134
ations	-2135
);}\	-2136
▁-*-	-2137
oss	-2138
imal	-2139
float	-2140
not	-2141
loor	-2142
▁need	-2143
cr	-2144
▁mo	-2145
Not	-2146
▁fix	-2147
lex	-2148
tmin	-2149
▁grid	-2150
De	-2151
isE	-2152
▁matrix	-2153
9+	-2154
\343\201\25	-2155
oup	-2156
fac	-2157
[0]*	-2158
97	-2159
order	-2160
+=(	-2161
\":	-2162
▁tp	-2163
IT	-2164
▁memo	-2165
old	-2166
▁me	-2167
▁FastIO	-2168
▁\\	-2169
Len	-2170
▁implements	-2171
========	-2172
55	-2173
child	-2174
LE	-2175
▁type	-2176
[8	-2177
tF	-2178
tq	-2179
????????	-2180
▁0):\	-2181
co	-2182
Value	-2183
elper	-2184
inked	-2185
rev	-2186
(-	-2187
▁write	-2188
05	-2189
cmath	-2190
17	-2191
▁rev	-2192
eld	-2193
▁Solution	-2194
0.	-2195
▁heapq	-2196
]%	-2197
▁siz	-2198
▁un	-2199
0};\	-2200
\351\2	-2201
▁item	-2202
00;\	-2203
6,	-2204
▁2),	-2205
(0);	-2206
5)	-2207
Le	-2208
▁2*	-2209
▁Edge	-2210
▁assert	-2211
▁Num	-2212
▁depth	-2213
();}\	-2214
]+=	-2215
neg	-2216
68	-2217
▁dir	-2218
▁vi	-2219
▁ge	-2220
▁work	-2221
-1:\	-2222
▁ct	-2223
IM	-2224
▁lcm	-2225
▁bfs	-2226
▁fill	-2227
ail	-2228
log	-2229
▁float	-2230
tg	-2231
▁1.0	-2232
(4	-2233
\320\27	-2234
6];\	-2235
acter	-2236
__\":\	-2237
tri	-2238
bl	-2239
(\'0	-2240
▁target	-2241
▁hash	-2242
tcur	-2243
][1];\	-2244
]],	-2245
▁primes	-2246
▁\'?	-2247
▁mini	-2248
[2];\	-2249
\"));\	-2250
▁cr	-2251
▁3,	-2252
1+	-2253
▁dd	-2254
▁\'0\');\	-2255
10000	-2256
mark	-2257
nset	-2258
-1])\	-2259
forces	-2260
Arr	-2261
AC	-2262
graph	-2263
▁pt	-2264
Output	-2265
tj	-2266
high	-2267
Found	-2268
Collections	-2269
cy	-2270
▁0};\	-2271
]):\	-2272
▁vv	-2273
▁pb	-2274
reopen	-2275
thon	-2276
▁two	-2277
OF	-2278
mem	-2279
tnew	-2280
riend	-2281
reater	-2282
[],	-2283
▁uni	-2284
ant	-2285
▁\'.\')	-2286
▁HashSet	-2287
▁qu	-2288
inkedList	-2289
▁ceil	-2290
nw	-2291
ill	-2292
▁[0	-2293
%2==0:\	-2294
▁10;	-2295
▁Compar	-2296
[100000	-2297
dy	-2298
▁log	-2299
▁(*	-2300
even	-2301
\350\2	-2302
nres	-2303
▁testNumber	-2304
▁4;\	-2305
ake	-2306
▁\"__	-2307
▁readInt	-2308
2][	-2309
▁ns	-2310
ctual	-2311
color	-2312
cess	-2313
▁4)	-2314
7\	-2315
101	-2316
arg	-2317
▁CH	-2318
cstring	-2319
imum	-2320
▁zero	-2321
▁BytesIO	-2322
5\	-2323
)==	-2324
cap	-2325
tpw	-2326
fn	-2327
down	-2328
▁exp	-2329
rd	-2330
(\'\\	-2331
(\"-1\");\	-2332
isEmpty	-2333
Format	-2334
▁\'*	-2335
▁nd	-2336
▁buffer	-2337
1-	-2338
▁||\	-2339
!=0:\	-2340
best	-2341
fstat	-2342
▁cap	-2343
tnum	-2344
\'):\	-2345
▁tc	-2346
Case	-2347
][1],	-2348
ear	-2349
tstring	-2350
9999	-2351
▁){\	-2352
▁10)	-2353
▁Ans	-2354
▁su	-2355
Ans	-2356
▁freq	-2357
▁FileReader	-2358
af	-2359
▁aux	-2360
▁Ar	-2361
23	-2362
answer	-2363
4];\	-2364
▁INT	-2365
▁fin	-2366
#\	-2367
hite	-2368
First	-2369
HashMap	-2370
otal	-2371
▁20000	-2372
▁5,	-2373
25\2	-2374
▁"//	-2375
▁mm	-2376
dered	-2377
AR	-2378
zero	-2379
Over	-2380
orial	-2381
▁MyScanner	-2382
06	-2383
-->0	-2384
scan	-2385
▁score	-2386
▁fixed	-2387
2-	-2388
ride	-2389
vert	-2390
NotFound	-2391
values	-2392
SE	-2393
ome	-2394
mode	-2395
>=0;	-2396
(){	-2397
▁nl	-2398
19	-2399
10];\	-2400
▁po	-2401
▁upper	-2402
▁nn	-2403
\",\	-2404
UT	-2405
ute	-2406
▁->	-2407
▁ext	-2408
ie	-2409
74	-2410
uni	-2411
[1000	-2412
decode	-2413
▁inline	-2414
3;	-2415
▁maxx	-2416
uilt	-2417
(\"\"	-2418
▁Number	-2419
▁0));\	-2420
path	-2421
nullptr	-2422
3[	-2423
▁-1};\	-2424
chr	-2425
*=	-2426
03	-2427
step	-2428
ackage	-2429
dir	-2430
▁18	-2431
nsys	-2432
▁cont	-2433
eam	-2434
--,	-2435
(((	-2436
=2;	-2437
tArrayList	-2438
▁\'+	-2439
),\	-2440
nq	-2441
ODO	-2442
compare	-2443
%10	-2444
()),	-2445
ded	-2446
rep	-2447
1++;\	-2448
action	-2449
flow	-2450
Override	-2451
ud	-2452
▁plug	-2453
▁tm	-2454
ump	-2455
\320\2	-2456
nmax	-2457
tsolve	-2458
▁12	-2459
▁big	-2460
\"<<	-2461
▁other	-2462
▁are	-2463
▁Actual	-2464
▁Built	-2465
\'0\'	-2466
tsb	-2467
▁Reader	-2468
yy	-2469
▁CHelper	-2470
());}\	-2471
nB	-2472
update	-2473
,1,	-2474
▁fun	-2475
oding	-2476
tStringBuilder	-2477
MIN	-2478
0)\	-2479
▁ri	-2480
▁child	-2481
tthrow	-2482
numChars	-2483
▁sa	-2484
]=(	-2485
▁tl	-2486
▁16	-2487
▁nodes	-2488
▁10**	-2489
▁inter	-2490
tdfs	-2491
▁dec	-2492
▁pii	-2493
▁setprecision	-2494
nh	-2495
▁found	-2496
.0);\	-2497
\'\'\'\	-2498
nstatic	-2499
▁nextToken	-2500
▁Output	-2501
etter	-2502
3.	-2503
nN	-2504
▁pa	-2505
21\2	-2506
▁ty	-2507
][1])	-2508
▁rs	-2509
▁BufferedWriter	-2510
▁sx	-2511
▁1])\	-2512
ick	-2513
mut	-2514
ix	-2515
ren	-2516
heap	-2517
div	-2518
▁chk	-2519
(\"0\");\	-2520
==0):\	-2521
▁\"<<	-2522
bal	-2523
▁down	-2524
▁inc	-2525
▁\'1\')	-2526
pb	-2527
▁3\	-2528
ms	-2529
format	-2530
▁minus	-2531
▁5;	-2532
Code	-2533
tR	-2534
]]);\	-2535
Mod	-2536
▁TODO	-2537
cursion	-2538
▁level	-2539
(\	-2540
)),	-2541
▁kk	-2542
▁flow	-2543
lc	-2544
-1-	-2545
jk	-2546
▁points	-2547
utf	-2548
▁dic	-2549
▁fs	-2550
]).	-2551
00;	-2552
▁good	-2553
riorityQueue	-2554
(1<<	-2555
copy	-2556
AAAA	-2557
tsort	-2558
sizeof	-2559
edges	-2560
[0][0	-2561
-1]:\	-2562
▁FOR	-2563
()):\	-2564
ards	-2565
tflag	-2566
vl	-2567
1):\	-2568
nostream	-2569
▁qr	-2570
[30000	-2571
▁\"-1	-2572
*/\	-2573
sol	-2574
thod	-2575
]=1;\	-2576
▁\'(\'	-2577
////////////////	-2578
\321\2	-2579
▁lb	-2580
▁sk	-2581
tell	-2582
Size	-2583
▁St	-2584
/2;\	-2585
hash	-2586
IOBase	-2587
link	-2588
ossible	-2589
counter	-2590
==0)\	-2591
]==\"	-2592
45	-2593
8,	-2594
[7	-2595
-1],	-2596
][5	-2597
day	-2598
oi	-2599
▁var	-2600
▁el	-2601
Sort	-2602
▁bs	-2603
▁EOF	-2604
▁DFS	-2605
trecursion	-2606
trecursionlimit	-2607
pt	-2608
\"))\	-2609
ive	-2610
pe	-2611
LO	-2612
▁DP	-2613
rs	-2614
▁15	-2615
]);	-2616
nj	-2617
())))\	-2618
==\"	-2619
hasNext	-2620
tmap	-2621
function	-2622
sa	-2623
▁here	-2624
▁dif	-2625
-1]+	-2626
▁digit	-2627
*10	-2628
▁dict	-2629
ordered	-2630
pi	-2631
[3];\	-2632
▁insert	-2633
Buffer	-2634
▁tok	-2635
be	-2636
▁BUFSIZE	-2637
[2],	-2638
▁"#!	-2639
cmp	-2640
[\"	-2641
sse	-2642
usr	-2643
bb	-2644
md	-2645
++;	-2646
▁vs	-2647
▁ld	-2648
AB	-2649
▁(-	-2650
FormatException	-2651
/2)	-2652
ncnt	-2653
▁Code	-2654
(\'1	-2655
pri	-2656
▁table	-2657
<=1	-2658
▁pass	-2659
▁ver	-2660
:]\	-2661
calc	-2662
▁state	-2663
tsc	-2664
gener	-2665
77	-2666
(5	-2667
containsKey	-2668
]=0;\	-2669
tret	-2670
problem	-2671
del	-2672
▁greater	-2673
)>	-2674
var	-2675
SIZE	-2676
angle	-2677
▁-1:\	-2678
[0][1]	-2679
▁-1;	-2680
ndp	-2681
ess	-2682
▁10,	-2683
▁Th	-2684
▁delta	-2685
oo	-2686
%3	-2687
FF	-2688
bs	-2689
65	-2690
/(	-2691
▁-1):\	-2692
[0]+	-2693
]=\'	-2694
▁coding	-2695
02\27	-2696
ector	-2697
my	-2698
tok	-2699
ttemp	-2700
mpossible	-2701
/*\	-2702
operator	-2703
4;\	-2704
exp	-2705
\357\27	-2706
▁OutputWriter	-2707
],\	-2708
1111	-2709
▁block	-2710
)//	-2711
\"))	-2712
ecimal	-2713
ish	-2714
score	-2715
sx	-2716
[200005];\	-2717
rbegin	-2718
▁multi	-2719
▁numChars	-2720
2){\	-2721
ones	-2722
▁stk	-2723
)*(	-2724
poll	-2725
▁seq	-2726
depth	-2727
][0])	-2728
▁~	-2729
▁{-1,	-2730
atrix	-2731
\343\200\2	-2732
orm	-2733
Print	-2734
31	-2735
matrix	-2736
▁use	-2737
Character	-2738
eros	-2739
▁numbers	-2740
1),	-2741
[500	-2742
▁win	-2743
nmod	-2744
AN	-2745
cept	-2746
▁]	-2747
ust	-2748
])"	-2749
▁%\	-2750
▁db	-2751
▁we	-2752
nC	-2753
****************	-2754
▁(!(	-2755
grid	-2756
▁100;\	-2757
▁order	-2758
▁\"\"\	-2759
reated	-2760
▁4,	-2761
==1)	-2762
▁cs	-2763
▁nr	-2764
▁sr	-2765
curChar	-2766
▁"#!/	-2767
ios	-2768
getchar	-2769
▁tag	-2770
6;\	-2771
▁lis	-2772
White	-2773
▁flush	-2774
[102	-2775
==0){\	-2776
▁rd	-2777
seq	-2778
alf	-2779
eve	-2780
▁1};\	-2781
▁Min	-2782
we	-2783
....	-2784
▁3:\	-2785
[100005],	-2786
▁close	-2787
INE	-2788
[0]=	-2789
▁isSpaceChar	-2790
ulate	-2791
▁acc	-2792
nsum	-2793
pha	-2794
▁{0};\	-2795
olver	-2796
tFast	-2797
level	-2798
[20001	-2799
tA	-2800
▁Auto	-2801
52	-2802
▁comb	-2803
tuple	-2804
▁[0]*	-2805
▁freopen	-2806
▁am	-2807
ucky	-2808
▁cand	-2809
▁mas	-2810
HashSet	-2811
tT	-2812
ead	-2813
0[	-2814
▁Int	-2815
ource	-2816
uiltin	-2817
()));\	-2818
▁1]\	-2819
▁\');\	-2820
▁sign	-2821
[2*	-2822
={	-2823
://	-2824
egment	-2825
5;	-2826
()]	-2827
▁(\"	-2828
move	-2829
_1	-2830
builtin	-2831
generated	-2832
]<=	-2833
▁red	-2834
▁method	-2835
▁1))\	-2836
9\	-2837
▁sl	-2838
])%	-2839
(3,	-2840
▁func	-2841
Dist	-2842
▁1){\	-2843
3);\	-2844
keys	-2845
Left	-2846
▁nc	-2847
▁ms	-2848
-9;\	-2849
▁\'\'\	-2850
sin	-2851
▁utf	-2852
▁ff	-2853
nS	-2854
ence	-2855
state	-2856
▁divis	-2857
yes	-2858
man	-2859
tmem	-2860
-1))	-2861
▁Col	-2862
win	-2863
▁template	-2864
▁2],	-2865
\"+	-2866
clock	-2867
▁suf	-2868
element	-2869
[100010];\	-2870
expr	-2871
▁readline	-2872
_2	-2873
▁\'1\'	-2874
--;	-2875
07	-2876
][1]);\	-2877
floor	-2878
ure	-2879
Lo	-2880
▁2][	-2881
numbers	-2882
▁ai	-2883
arge	-2884
10\2	-2885
]+=1\	-2886
po	-2887
(2)\	-2888
▁ins	-2889
▁nb	-2890
[2])	-2891
▁2):\	-2892
\");	-2893
DE	-2894
▁bad	-2895
deque	-2896
[1][1]	-2897
▁Comparable	-2898
▁3.	-2899
pq	-2900
power	-2901
▁Z	-2902
AL	-2903
▁ev	-2904
▁TaskA	-2905
\343\202\22	-2906
▁tx	-2907
159	-2908
hift	-2909
▁son	-2910
▁8;	-2911
[11	-2912
▁ask	-2913
bitset	-2914
▁python	-2915
ob	-2916
ory	-2917
\343\202\222	-2918
Impossible	-2919
▁In	-2920
▁31,	-2921
ops	-2922
20\2	-2923
2++;\	-2924
▁off	-2925
lazy	-2926
-1].	-2927
nmain	-2928
Cnt	-2929
▁tri	-2930
[1][0]	-2931
nz	-2932
▁sq	-2933
)==\'	-2934
30	-2935
(;	-2936
▁prefix	-2937
use	-2938
points	-2939
▁\")	-2940
ache	-2941
AT	-2942
nodes	-2943
000000	-2944
oney	-2945
▁rest	-2946
14159	-2947
▁compareTo	-2948
▁327	-2949
ya	-2950
&1)	-2951
4;	-2952
abc	-2953
▁random	-2954
▁\',	-2955
3)\	-2956
▁0:	-2957
▁zip	-2958
38	-2959
env	-2960
\345\20	-2961
▁sw	-2962
bi	-2963
,(	-2964
▁priority	-2965
tstr	-2966
two	-2967
▁10\	-2968
rect	-2969
mo	-2970
1415926	-2971
▁(1)	-2972
[-	-2973
>());\	-2974
▁letter	-2975
▁jj	-2976
▁\'.\'	-2977
ttmp	-2978
InputReader	-2979
4\2	-2980
2+	-2981
-2)	-2982
BU	-2983
▁Add	-2984
dle	-2985
GE	-2986
▁0))	-2987
▁na	-2988
01];\	-2989
36	-2990
cs	-2991
...);\	-2992
nnum	-2993
▁LinkedList	-2994
)(1	-2995
tcase	-2996
9)	-2997
4)	-2998
mm	-2999
▁sep	-3000
tag	-3001
▁9;	-3002
xy	-3003
▁10);\	-3004
▁(~	-3005
▁done	-3006
illis	-3007
▁32768	-3008
▁7,	-3009
▁modify	-3010
+1)]\	-3011
▁that	-3012
ores	-3013
ready	-3014
mon	-3015
vals	-3016
40	-3017
umn	-3018
▁bi	-3019
udge	-3020
=1,	-3021
▁-*-\	-3022
(-1,	-3023
lt	-3024
10\	-3025
▁xs	-3026
▁values	-3027
ative	-3028
oot	-3029
maxi	-3030
▁minn	-3031
currentTime	-3032
▁1000000007\	-3033
board	-3034
▁2))	-3035
▁match	-3036
idth	-3037
table	-3038
Millis	-3039
▁CF	-3040
▁println	-3041
tP	-3042
!=1	-3043
]={	-3044
UM	-3045
pw	-3046
oose	-3047
▁dr	-3048
pa	-3049
LINE	-3050
▁ts	-3051
▁ones	-3052
▁Ch	-3053
[-1]\	-3054
+1))	-3055
lib	-3056
(\"-1\\	-3057
Buffered	-3058
}\"	-3059
▁6;	-3060
(10,	-3061
▁split	-3062
4\	-3063
▁\')\'	-3064
14159265	-3065
10;\	-3066
les	-3067
▁board	-3068
▁32768);\	-3069
88	-3070
vs	-3071
▁have	-3072
pro	-3073
▁\'-\'	-3074
ertex	-3075
43	-3076
lett	-3077
mini	-3078
ef	-3079
][1]\	-3080
▁Args	-3081
2));\	-3082
items	-3083
▁mult	-3084
[50000	-3085
000];\	-3086
▁\3	-3087
▁9;\	-3088
None	-3089
search	-3090
[10];\	-3091
oly	-3092
▁[[	-3093
9];\	-3094
▁same	-3095
57	-3096
▁Map	-3097
▁5)	-3098
fore	-3099
RE	-3100
2))	-3101
%=	-3102
21	-3103
by	-3104
uffle	-3105
getvalue	-3106
iter	-3107
▁-\	-3108
},\	-3109
[0]]	-3110
▁dat	-3111
▁stub	-3112
Str	-3113
raph	-3114
(10**	-3115
]+\"	-3116
=[0]*	-3117
Right	-3118
▁limit	-3119
]>=	-3120
+\'	-3121
>0)	-3122
It	-3123
trim	-3124
(-1.0);\	-3125
2],	-3126
▁201	-3127
9;	-3128
▁\"/	-3129
-\'	-3130
▁link	-3131
assert	-3132
.0;\	-3133
tresult	-3134
▁tim	-3135
lobal	-3136
+1],	-3137
\346\225\2	-3138
inter	-3139
▁Read	-3140
▁TreeSet	-3141
side	-3142
▁you	-3143
nod	-3144
loc	-3145
EN	-3146
▁prod	-3147
+1]-	-3148
uy	-3149
tS	-3150
mas	-3151
▁curChar	-3152
▁5];\	-3153
]=1\	-3154
zz	-3155
▁cp	-3156
Cost	-3157
▁rank	-3158
riends	-3159
-2,	-3160
[])\	-3161
tail	-3162
▁Get	-3163
▁tab	-3164
/=	-3165
layer	-3166
()).	-3167
1415926535	-3168
ele	-3169
uper	-3170
▁height	-3171
[2].	-3172
▁Solve	-3173
500	-3174
eric	-3175
ph	-3176
1*	-3177
▁copy	-3178
▁moves	-3179
bisect	-3180
freq	-3181
==1):\	-3182
1:	-3183
▁isPrime	-3184
PUT	-3185
(\'\'.	-3186
>=1	-3187
pppppppp	-3188
nL	-3189
]]\	-3190
▁begin	-3191
][0]);\	-3192
IG	-3193
stdlib	-3194
Decimal	-3195
valid	-3196
MX	-3197
▁argc	-3198
ik	-3199
▁Set	-3200
nex	-3201
▁av	-3202
▁\'9\'	-3203
▁ql	-3204
change	-3205
dec	-3206
rank	-3207
ntry	-3208
▁itr	-3209
▁});\	-3210
assign	-3211
▁oo	-3212
▁TaskB	-3213
▁sqr	-3214
[4];\	-3215
enter	-3216
▁day	-3217
unique	-3218
+1])	-3219
pii	-3220
▁qq	-3221
=\'\')\	-3222
ono	-3223
▁ti	-3224
▁with	-3225
>0):\	-3226
▁team	-3227
▁px	-3228
▁(\'	-3229
dic	-3230
▁gi	-3231
good	-3232
src	-3233
▁Random	-3234
tfinal	-3235
-1]);\	-3236
▁rhs	-3237
[2])\	-3238
need	-3239
filen	-3240
)+\"	-3241
26\2	-3242
3];\	-3243
▁cx	-3244
▁valid	-3245
][100	-3246
▁adde	-3247
▁<<=	-3248
-1]*	-3249
lity	-3250
▁vals	-3251
▁distance	-3252
▁[\'	-3253
3]	-3254
[26];\	-3255
▁iter	-3256
▁200	-3257
text	-3258
>[]	-3259
deep	-3260
66	-3261
kk	-3262
\344\270\2	-3263
▁Collections	-3264
)<	-3265
▁1][0]	-3266
▁1000000007)	-3267
UD	-3268
ars	-3269
memo	-3270
+1]:\	-3271
\346\225\260	-3272
nconstexpr	-3273
3(	-3274
ho	-3275
▁loop	-3276
pref	-3277
---	-3278
maxN	-3279
)).	-3280
itch	-3281
SS	-3282
ds	-3283
▁&=	-3284
][2],	-3285
▁\'))\	-3286
multi	-3287
appop	-3288
Up	-3289
________	-3290
000;\	-3291
▁visit	-3292
swap	-3293
▁back	-3294
cases	-3295
0**	-3296
[1,	-3297
8;\	-3298
fin	-3299
nstd	-3300
nname	-3301
!!	-3302
▁0),	-3303
tdo	-3304
▁ht	-3305
)/2;\	-3306
10],	-3307
34\2	-3308
-1){\	-3309
▁sin	-3310
actions	-3311
\']\	-3312
▁skip	-3313
▁cross	-3314
itr	-3315
▁your	-3316
ights	-3317
Idx	-3318
▁factorial	-3319
puts	-3320
1].	-3321
[5]	-3322
+1])\	-3323
Name	-3324
▁!(	-3325
off	-3326
Find	-3327
100];\	-3328
▁3.1415926535	-3329
3:\	-3330
▁cycle	-3331
-1]-	-3332
▁group	-3333
(1)	-3334
uce	-3335
Length	-3336
▁np	-3337
And	-3338
lect	-3339
=-1;\	-3340
DP	-3341
Bit	-3342
tREP	-3343
▁nex	-3344
sep	-3345
▁//=	-3346
▁ds	-3347
tM	-3348
tern	-3349
tpos	-3350
limits	-3351
▁small	-3352
▁dfn	-3353
▁dq	-3354
▁token	-3355
aken	-3356
\":\"	-3357
▁((1	-3358
▁possible	-3359
▁turn	-3360
▁filter	-3361
jj	-3362
ONLINE	-3363
[*	-3364
lete	-3365
▁Problem	-3366
▁lca	-3367
\303\2	-3368
05];\	-3369
ply	-3370
)++)	-3371
()-1;\	-3372
▁remain	-3373
▁times	-3374
▁TaskC	-3375
▁101	-3376
▁elem	-3377
stk	-3378
tz	-3379
quare	-3380
33\2	-3381
▁sieve	-3382
▁tail	-3383
nextDouble	-3384
▁ST	-3385
▁PriorityQueue	-3386
\"]	-3387
qual	-3388
>0){\	-3389
010];\	-3390
;}	-3391
▁pe	-3392
\343\202\213	-3393
%4	-3394
ci	-3395
package	-3396
-1)*	-3397
[2]);\	-3398
)!=	-3399
tps	-3400
=100000000	-3401
alle	-3402
PI	-3403
▁vc	-3404
sta	-3405
(\"2	-3406
+1]\	-3407
▁7\	-3408
owel	-3409
▁app	-3410
unordered	-3411
▁20	-3412
oups	-3413
▁ra	-3414
rec	-3415
▁parse	-3416
ru	-3417
[::-1]\	-3418
ueries	-3419
▁vl	-3420
CodePoint	-3421
================	-3422
typeof	-3423
▁da	-3424
](	-3425
codeforces	-3426
here	-3427
encode	-3428
ze	-3429
bjects	-3430
▁us	-3431
ends	-3432
IL	-3433
ACK	-3434
▁ax	-3435
End	-3436
ice	-3437
\343\201\253	-3438
▁3);\	-3439
nion	-3440
▁weight	-3441
0,1,	-3442
\'))\	-3443
▁binary	-3444
wargs	-3445
;)	-3446
)((	-3447
▁scn	-3448
ected	-3449
][4	-3450
▁search	-3451
Deque	-3452
\342\200\2	-3453
px	-3454
1==	-3455
final	-3456
mand	-3457
[];\	-3458
tmemset	-3459
42	-3460
ress	-3461
Read	-3462
-1,-1):\	-3463
)];\	-3464
cstdlib	-3465
\'9	-3466
7];\	-3467
▁rot	-3468
▁flg	-3469
+1]=	-3470
▁hasNext	-3471
▁register	-3472
▁suff	-3473
<<\'	-3474
\343\202\27	-3475
[2]\	-3476
appendCodePoint	-3477
dif	-3478
ttokenizer	-3479
▁nw	-3480
▁100000	-3481
Pow	-3482
▁2));\	-3483
maxx	-3484
Id	-3485
FileNotFound	-3486
(2);\	-3487
big	-3488
41	-3489
\"\\	-3490
$$	-3491
)-1):\	-3492
ka	-3493
=\"\")\	-3494
▁100;	-3495
▁\"))\	-3496
▁area	-3497
]==0:\	-3498
]==\'1	-3499
[1024];\	-3500
▁11	-3501
▁opt	-3502
63	-3503
▁FileNotFound	-3504
+1))\	-3505
2))\	-3506
\"),	-3507
func	-3508
sec	-3509
[0]-	-3510
tu	-3511
▁::	-3512
==1)\	-3513
ao	-3514
quence	-3515
][0]\	-3516
▁\'?\')	-3517
istream	-3518
011	-3519
▁choose	-3520
▁ta	-3521
]]=	-3522
//2)\	-3523
199	-3524
vv	-3525
\".	-3526
▁1000000	-3527
argv	-3528
▁\"\	-3529
]*(	-3530
▁[&	-3531
vide	-3532
▁sta	-3533
siz	-3534
tC	-3535
897	-3536
▁floor	-3537
[100001];\	-3538
//2)	-3539
\']++;\	-3540
)%2	-3541
[100];\	-3542
▁remove	-3543
▁cn	-3544
nP	-3545
Second	-3546
All	-3547
▁req	-3548
lb	-3549
▁fail	-3550
mag	-3551
info	-3552
nflag	-3553
][(	-3554
cpy	-3555
height	-3556
\345\21	-3557
-1]=	-3558
Data	-3559
\345\210\2	-3560
]:	-3561
versed	-3562
▁chmin	-3563
▁lg	-3564
-1)/	-3565
+1));\	-3566
cx	-3567
▁\":	-3568
▁vp	-3569
UDGE	-3570
▁30,	-3571
ctools	-3572
nmin	-3573
[1]-	-3574
▁dot	-3575
▁{};\	-3576
▁hh	-3577
ints	-3578
={}\	-3579
tstd	-3580
nlist	-3581
▁/*	-3582
▁err	-3583
▁\'0\',	-3584
\"):\	-3585
weight	-3586
22	-3587
▁25	-3588
FileReader	-3589
ev	-3590
▁4\	-3591
RO	-3592
+1)%	-3593
[]){\	-3594
param	-3595
▁tuple	-3596
▁integer	-3597
1[0]	-3598
▁\'9\')\	-3599
cale	-3600
compareTo	-3601
▁pat	-3602
▁9)	-3603
tlist	-3604
ott	-3605
▁[[]	-3606
▁ull	-3607
trunc	-3608
Pointer	-3609
visit	-3610
0]	-3611
▁ele	-3612
▁ln	-3613
▁IOBase	-3614
gt	-3615
fter	-3616
▁Find	-3617
One	-3618
==1){\	-3619
team	-3620
▁rb	-3621
▁isp	-3622
▁\'1\';\	-3623
lice	-3624
▁1:	-3625
▁so	-3626
▁seen	-3627
xs	-3628
[200005],	-3629
**2	-3630
eed	-3631
JUDGE	-3632
▁chmax	-3633
0),	-3634
▁\')	-3635
▁comment	-3636
▁To	-3637
[-1])\	-3638
Counter	-3639
▁position	-3640
npos	-3641
▁(__	-3642
▁hs	-3643
indexOf	-3644
ONG	-3645
▁1]]	-3646
▁17	-3647
linker	-3648
[300	-3649
9+7;\	-3650
)-1	-3651
▁819	-3652
62	-3653
▁ca	-3654
▁sec	-3655
CK	-3656
▁\35	-3657
ircle	-3658
8979	-3659
complex	-3660
\'+	-3661
ah	-3662
5);\	-3663
▁lines	-3664
▁factors	-3665
▁bf	-3666
▁prob	-3667
▁fflush	-3668
ighb	-3669
(\"%.10	-3670
▁steps	-3671
rop	-3672
▁obj	-3673
▁(_	-3674
▁cum	-3675
tadd	-3676
stra	-3677
(26	-3678
oins	-3679
▁500	-3680
▁names	-3681
][3];\	-3682
▁super	-3683
[0:	-3684
rows	-3685
tios	-3686
rest	-3687
\343\201\204	-3688
truncate	-3689
▁global	-3690
dice	-3691
▁fib	-3692
random	-3693
▁\'#\')	-3694
nM	-3695
19937	-3696
[0]:\	-3697
=\"\"\	-3698
▁rand	-3699
target	-3700
▁place	-3701
rror	-3702
sl	-3703
▁field	-3704
▁addedge	-3705
LinkedList	-3706
och	-3707
▁Segment	-3708
▁MX	-3709
token	-3710
=-1\	-3711
tFastScanner	-3712
Fact	-3713
▁1][1]	-3714
<1	-3715
?\"	-3716
▁ay	-3717
!=0)	-3718
]==\'0	-3719
lip	-3720
(100	-3721
tset	-3722
▁was	-3723
[1]]	-3724
▁permut	-3725
+=1	-3726
[5];\	-3727
▁function	-3728
Ind	-3729
=2	-3730
Row	-3731
\";	-3732
▁qpow	-3733
▁tb	-3734
▁old	-3735
▁package	-3736
][]	-3737
1))	-3738
00000	-3739
found	-3740
fileno	-3741
rend	-3742
Th	-3743
oc	-3744
]]--;\	-3745
aux	-3746
▁perm	-3747
▁Matrix	-3748
tB	-3749
Last	-3750
▁8192\	-3751
();}	-3752
+2)	-3753
▁LI	-3754
AAAAAAAA	-3755
▁Query	-3756
▁factor	-3757
Ofast	-3758
PO	-3759
>>(	-3760
▁3)\	-3761
Res	-3762
ates	-3763
[100010],	-3764
▁10001	-3765
nBUFSIZE	-3766
ron	-3767
▁dsu	-3768
eded	-3769
cp	-3770
(1){\	-3771
Compar	-3772
1));\	-3773
▁\'\'.	-3774
eps	-3775
chrono	-3776
][3]	-3777
▁2);	-3778
tcatch	-3779
\'0\';\	-3780
▁fractions	-3781
▁part	-3782
Search	-3783
entr	-3784
▁\343\2	-3785
▁gg	-3786
▁rm	-3787
>0)\	-3788
)))"	-3789
field	-3790
▁counts	-3791
▁newlines	-3792
▁[&](	-3793
()-	-3794
2>\	-3795
▁den	-3796
!=0):\	-3797
nu	-3798
tadj	-3799
<=0	-3800
▁Print	-3801
▁0},	-3802
67	-3803
[9	-3804
▁Data	-3805
))%	-3806
ref	-3807
▁norm	-3808
0:\	-3809
5)\	-3810
ning	-3811
▁5\	-3812
0:	-3813
ql	-3814
!=0){\	-3815
▁nm	-3816
▁bal	-3817
catch	-3818
[-2	-3819
2),	-3820
▁each	-3821
ather	-3822
▁gc	-3823
<10	-3824
oto	-3825
000;	-3826
manip	-3827
flg	-3828
▁6;\	-3829
ID	-3830
}\'	-3831
+1)*	-3832
▁loc	-3833
]])\	-3834
▁ru	-3835
▁\'4	-3836
28	-3837
FFER	-3838
[1]:\	-3839
iomanip	-3840
(\"-	-3841
▁[0,	-3842
edron	-3843
▁pd	-3844
(0).	-3845
Entry	-3846
[{	-3847
sent	-3848
Fr	-3849
{\"	-3850
igDecimal	-3851
▁\"(\"	-3852
fault	-3853
▁functools	-3854
▁Runn	-3855
▁StringBuffer	-3856
2>	-3857
group	-3858
let	-3859
popcount	-3860
2[0]	-3861
9);\	-3862
▁Sum	-3863
▁shift	-3864
▁\"]	-3865
TreeSet	-3866
opt	-3867
▁ara	-3868
[0]*(	-3869
▁days	-3870
▁Runnable	-3871
[1]=	-3872
48	-3873
alpha	-3874
cross	-3875
real	-3876
9+7\	-3877
▁NULL	-3878
▁kol	-3879
▁2].	-3880
▁except	-3881
avx	-3882
ople	-3883
▁nextIntArray	-3884
▁tem	-3885
argest	-3886
▁dig	-3887
Comparator	-3888
tInputStream	-3889
lass	-3890
vertex	-3891
nresult	-3892
▁\345\2	-3893
(),(	-3894
%2==0):\	-3895
▁nod	-3896
\345\27	-3897
do	-3898
ba	-3899
same	-3900
▁middle	-3901
tG	-3902
▁1)]	-3903
eta	-3904
-1))\	-3905
Default	-3906
INT	-3907
block	-3908
acc	-3909
-8;\	-3910
umulate	-3911
▁complex	-3912
▁bx	-3913
▁problem	-3914
nnamespace	-3915
texit	-3916
suf	-3917
▁pairs	-3918
13\	-3919
roll	-3920
10,	-3921
primes	-3922
3=	-3923
\343\201\247	-3924
▁mint	-3925
db	-3926
▁sums	-3927
▁20;	-3928
▁chr	-3929
/2);\	-3930
7)\	-3931
▁price	-3932
▁1000;\	-3933
gram	-3934
ets	-3935
▁LO	-3936
ToString	-3937
▁ci	-3938
twriter	-3939
<4;	-3940
inc	-3941
Or	-3942
\345\25	-3943
▁1});\	-3944
nunsigned	-3945
[3][	-3946
0},	-3947
][1])\	-3948
24\2	-3949
▁tar	-3950
STACK	-3951
Error	-3952
[100000];\	-3953
▁1000000000;\	-3954
▁ys	-3955
12\2	-3956
factorial	-3957
▁Stack	-3958
▁rx	-3959
AS	-3960
▁rc	-3961
▁es	-3962
(6	-3963
nqueue	-3964
2].	-3965
▁\"%	-3966
.__	-3967
[0]==	-3968
Element	-3969
binations	-3970
]==1:\	-3971
▁Thread	-3972
cycle	-3973
▁ke	-3974
▁modul	-3975
since	-3976
Filter	-3977
▁vx	-3978
names	-3979
▁Comparator	-3980
uc	-3981
▁19	-3982
▁xy	-3983
99824435	-3984
allest	-3985
Sub	-3986
▁7)	-3987
readInt	-3988
\346\234\2	-3989
▁dc	-3990
▁din	-3991
_,	-3992
▁60	-3993
[3],	-3994
▁Array	-3995
3*	-3996
▁lt	-3997
7\275	-3998
▁unique	-3999
fx	-4000
5]	-4001
debug	-4002
endif	-4003
(\"1\");\	-4004
[8]	-4005
3456	-4006
part	-4007
▁clock	-4008
jkl	-4009
▁heappush	-4010
▁Union	-4011
▁src	-4012
▁ck	-4013
ins	-4014
\350\24	-4015
ia	-4016
▁lp	-4017
53	-4018
dat	-4019
▁(0,	-4020
den	-4021
CH	-4022
(\".	-4023
[_	-4024
▁pop	-4025
▁side	-4026
ttotal	-4027
sstream	-4028
elem	-4029
▁take	-4030
tar	-4031
▁Vector	-4032
▁++(	-4033
897932	-4034
▁process	-4035
▁\'2	-4036
jkstra	-4037
peek	-4038
▁uf	-4039
▁reduce	-4040
▁Created	-4041
\345\205\2	-4042
gion	-4043
[1000005];\	-4044
&&(	-4045
()];\	-4046
▁cd	-4047
▁31	-4048
\343\201\250	-4049
=10**	-4050
ntotal	-4051
cos	-4052
▁lx	-4053
arry	-4054
▁ready	-4055
InputMismatch	-4056
mb	-4057
++){	-4058
}};\	-4059
%(	-4060
language	-4061
BUG	-4062
NA	-4063
▁{\"	-4064
epoch	-4065
?\302\2	-4066
▁ub	-4067
ulti	-4068
▁FileInputStream	-4069
[26	-4070
▁dice	-4071
utility	-4072
\343\201\252	-4073
-1));\	-4074
=\'\'\	-4075
▁+=1\	-4076
▁trans	-4077
7)	-4078
!=0)\	-4079
ytesRead	-4080
functional	-4081
6\	-4082
5][1	-4083
▁\'7	-4084
sect	-4085
▁GCD	-4086
distance	-4087
{\'	-4088
work	-4089
gy	-4090
OK	-4091
▁*(	-4092
lace	-4093
▁1]:\	-4094
\345\220\2	-4095
▁yes	-4096
▁fabs	-4097
\357\274\2	-4098
\'))	-4099
▁\'.\';\	-4100
numeric	-4101
position	-4102
1){\	-4103
▁\')))\	-4104
[(1	-4105
mple	-4106
++);\	-4107
▁BIT	-4108
▁words	-4109
Diff	-4110
▁20;\	-4111
▁hm	-4112
89793238	-4113
/2\	-4114
ats	-4115
▁{\'	-4116
[0]),	-4117
▁nextChar	-4118
89	-4119
<0:\	-4120
BufferedWriter	-4121
▁\"?	-4122
<3;	-4123
tab	-4124
=2\	-4125
▁only	-4126
▁suma	-4127
▁union	-4128
▁\')]\	-4129
tis	-4130
fail	-4131
MN	-4132
)<=	-4133
ndi	-4134
▁0.0;\	-4135
▁Graph	-4136
Maxn	-4137
\343\201\214	-4138
State	-4139
▁bw	-4140
▁half	-4141
31\2	-4142
nmt	-4143
▁vr	-4144
▁rows	-4145
defaultdict	-4146
price	-4147
▁struct	-4148
Ord	-4149
6)\	-4150
▁\'*\')	-4151
▁Up	-4152
1000	-4153
tInputReader	-4154
▁\'>	-4155
▁24	-4156
nlst	-4157
mutation	-4158
▁ways	-4159
)//2\	-4160
▁od	-4161
uch	-4162
▁AN	-4163
tvis	-4164
▁cou	-4165
1+=	-4166
ten	-4167
,0	-4168
▁fir	-4169
2_	-4170
-1:	-4171
\'&&	-4172
▁13	-4173
[200010];\	-4174
deepToString	-4175
][0].	-4176
(\"\".	-4177
tself	-4178
100000000	-4179
▁friend	-4180
▁readLong	-4181
face	-4182
▁vy	-4183
-1),	-4184
words	-4185
▁Line	-4186
letter	-4187
▁cards	-4188
][0]=	-4189
card	-4190
])-	-4191
any	-4192
▁mt	-4193
ours	-4194
LOCK	-4195
▁Arg	-4196
▁100005;\	-4197
erty	-4198
▁\'<	-4199
awt	-4200
▁cf	-4201
bad	-4202
ffff	-4203
tCollections	-4204
▁deep	-4205
OW	-4206
▁ng	-4207
▁offset	-4208
▁10];\	-4209
40\2	-4210
▁.	-4211
)>=	-4212
▁zz	-4213
▁summ	-4214
▁trie	-4215
[105];\	-4216
▁Di	-4217
cerr	-4218
▁digits	-4219
0][	-4220
);++	-4221
hip	-4222
!=\'	-4223
treader	-4224
filter	-4225
▁48;\	-4226
▁qry	-4227
▁\"+(	-4228
\""	-4229
days	-4230
\343\201\246	-4231
▁\")))\	-4232
ube	-4233
▁-(	-4234
done	-4235
(\"0\\	-4236
<0)	-4237
rand	-4238
ncur	-4239
>>>	-4240
▁prv	-4241
tList	-4242
**0.	-4243
▁permutations	-4244
▁Solver	-4245
==2:\	-4246
(3):\	-4247
▁6,	-4248
cn	-4249
ottom	-4250
times	-4251
▁dt	-4252
7);\	-4253
▁cb	-4254
▁{{	-4255
▁bel	-4256
Digit	-4257
▁ip	-4258
*10+	-4259
/2)\	-4260
+=\"	-4261
(8	-4262
Path	-4263
▁pts	-4264
▁stat	-4265
chk	-4266
tem	-4267
+3	-4268
]%2	-4269
ords	-4270
uv	-4271
1=0\	-4272
loops	-4273
▁1]][	-4274
(10000	-4275
CA	-4276
tN	-4277
▁DE	-4278
most	-4279
Locale	-4280
▁48);\	-4281
version	-4282
eat	-4283
uture	-4284
▁argv	-4285
????????????????	-4286
][0][	-4287
UN	-4288
▁gen	-4289
dfn	-4290
IB	-4291
2])	-4292
▁black	-4293
core	-4294
(0));\	-4295
nR	-4296
+1<	-4297
▁tk	-4298
▁tw	-4299
()->	-4300
▁ALL	-4301
▁nt	-4302
Add	-4303
▁yi	-4304
▁mon	-4305
▁task	-4306
nli	-4307
8979323846	-4308
▁initial	-4309
<2	-4310
popleft	-4311
fabs	-4312
[1]*	-4313
▁rng	-4314
▁nC	-4315
############	-4316
[6]	-4317
1>	-4318
79	-4319
▁rnd	-4320
83	-4321
tputs	-4322
ian	-4323
[1]+	-4324
-->0)\	-4325
▁te	-4326
prod	-4327
dot	-4328
▁pll	-4329
StreamTokenizer	-4330
fo	-4331
▁element	-4332
▁%.	-4333
Order	-4334
nMOD	-4335
ger	-4336
Fast	-4337
-->0){\	-4338
dig	-4339
{}	-4340
▁Pow	-4341
prefix	-4342
MP	-4343
bf	-4344
hh	-4345
nce	-4346
rees	-4347
Main	-4348
tices	-4349
tdist	-4350
▁bc	-4351
ello	-4352
-->0)	-4353
58	-4354
▁\"2	-4355
11\2	-4356
▁cut	-4357
▁\"0\"	-4358
▁short	-4359
\'*	-4360
stead	-4361
------------	-4362
Con	-4363
▁vt	-4364
▁before	-4365
\'][	-4366
▁pot	-4367
reate	-4368
51	-4369
][0]]	-4370
▁TreeMap	-4371
xi	-4372
▁No	-4373
\343\201\237	-4374
so	-4375
npriority	-4376
xyz	-4377
Comp	-4378
1_	-4379
onent	-4380
▁card	-4381
tOutputStream	-4382
▁64	-4383
▁switch	-4384
ists	-4385
Vector	-4386
ious	-4387
▁phi	-4388
▁998244353	-4389
II	-4390
ward	-4391
build	-4392
\\\\	-4393
▁round	-4394
Whitespace	-4395
ara	-4396
▁sg	-4397
AP	-4398
digits	-4399
_000	-4400
round	-4401
\343\203\274	-4402
▁++)	-4403
▁money	-4404
)][	-4405
▁()	-4406
(\'-	-4407
-3	-4408
▁Comp	-4409
Root	-4410
▁MIN	-4411
\302\202	-4412
ses	-4413
small	-4414
alc	-4415
▁pushdown	-4416
arning	-4417
▁Queue	-4418
?\	-4419
▁fx	-4420
▁Codeforces	-4421
4)\	-4422
(5):\	-4423
tstart	-4424
binary	-4425
form	-4426
477	-4427
▁3]	-4428
▁5],	-4429
▁jump	-4430
][1]=	-4431
ults	-4432
00],	-4433
▁eq	-4434
\320\276	-4435
multiply	-4436
▁minimum	-4437
▁getline	-4438
=\"\";\	-4439
inary	-4440
▁real	-4441
▁++;\	-4442
▁info	-4443
]==0)	-4444
rection	-4445
ks	-4446
▁50	-4447
▁LINF	-4448
tpre	-4449
erson	-4450
df	-4451
▁ww	-4452
3\")\	-4453
sq	-4454
delta	-4455
010	-4456
OO	-4457
nINF	-4458
orrect	-4459
tindex	-4460
ghi	-4461
tval	-4462
▁=0;	-4463
44\2	-4464
(\'.	-4465
\357\277\275	-4466
▁any	-4467
▁30;\	-4468
31,	-4469
[55	-4470
▁30	-4471
loop	-4472
▁HER	-4473
▁ctr	-4474
▁\'0\':\	-4475
arts	-4476
0,0,	-4477
MaxN	-4478
+\"\\	-4479
als	-4480
ki	-4481
▁mc	-4482
(\'0\'	-4483
▁zeros	-4484
\345\212\2	-4485
\343\201\231	-4486
unroll	-4487
alind	-4488
▁nextString	-4489
61	-4490
==\'-	-4491
▁lucky	-4492
00010];\	-4493
▁(3	-4494
tcost	-4495
▁lowbit	-4496
oy	-4497
▁[1,	-4498
▁\'1\':\	-4499
▁wa	-4500
▁\"#	-4501
▁1)]\	-4502
▁10:\	-4503
▁alpha	-4504
cand	-4505
lca	-4506
scanner	-4507
+2,	-4508
contest	-4509
\272	-4510
tL	-4511
-2*	-4512
▁2])	-4513
▁\'9\';	-4514
Friends	-4515
▁pushup	-4516
area	-4517
ole	-4518
abcdef	-4519
100;\	-4520
[1000];\	-4521
▁7;	-4522
+1]);\	-4523
_[	-4524
--\	-4525
Zero	-4526
▁999999	-4527
[0];	-4528
nD	-4529
==(	-4530
▁fy	-4531
dj	-4532
▁lvl	-4533
▁orig	-4534
▁\'0\')\	-4535
\343\201\227	-4536
EPS	-4537
entry	-4538
▁qs	-4539
,0);\	-4540
▁extends	-4541
ox	-4542
]&&	-4543
Class	-4544
tD	-4545
▁6)	-4546
tcol	-4547
▁command	-4548
▁Test	-4549
▁width	-4550
nI	-4551
EST	-4552
ense	-4553
steady	-4554
isupper	-4555
acity	-4556
▁ostream	-4557
/2;	-4558
\350\27	-4559
(2)	-4560
▁wr	-4561
▁1},	-4562
writer	-4563
▁998244353\	-4564
▁med	-4565
tsolver	-4566
pat	-4567
▁50000	-4568
\347\25	-4569
0(	-4570
010],	-4571
[1:]\	-4572
▁60;\	-4573
nval	-4574
▁queries	-4575
1))\	-4576
▁bits	-4577
▁1]++;\	-4578
▁way	-4579
▁[(	-4580
▁):\	-4581
\343\203\204	-4582
▁heappop	-4583
kwargs	-4584
its	-4585
▁Fr	-4586
-1,-1,-1):\	-4587
\343\201\213	-4588
vot	-4589
▁lef	-4590
As	-4591
(\"?	-4592
=[0	-4593
[--	-4594
With	-4595
][0][0]	-4596
upp	-4597
[3])	-4598
mt	-4599
(10);\	-4600
▁1.	-4601
▁unite	-4602
ject	-4603
▁call	-4604
]]]	-4605
itive	-4606
▁df	-4607
▁(1<<	-4608
ope	-4609
leaf	-4610
▁Next	-4611
FT	-4612
_(	-4613
()-1;	-4614
00,	-4615
▁Template	-4616
\'||	-4617
▁occ	-4618
getValue	-4619
........	-4620
\345\217\2	-4621
tch	-4622
3):\	-4623
▁typ	-4624
nnode	-4625
▁vertex	-4626
▁pf	-4627
rx	-4628
**(	-4629
wxyz	-4630
year	-4631
extend	-4632
Start	-4633
[20];\	-4634
tlast	-4635
▁\'\\0	-4636
[101];\	-4637
]==\'.	-4638
+1:	-4639
▁oper	-4640
▁store	-4641
cache	-4642
▁[0]*(	-4643
▁shuffle	-4644
(9	-4645
▁-2	-4646
minn	-4647
▁rad	-4648
()])\	-4649
▁memcpy	-4650
▁brr	-4651
\343\202\213\	-4652
[((	-4653
▁combinations	-4654
▁\")\";\	-4655
qrst	-4656
▁cle	-4657
▁ini	-4658
};	-4659
▁nv	-4660
▁[0]\	-4661
lx	-4662
led	-4663
▁xor	-4664
▁\"\"\"	-4665
tclass	-4666
ABC	-4667
]<<	-4668
-1)//	-4669
▁judge	-4670
-2;	-4671
▁mu	-4672
▁14	-4673
+=\'	-4674
alindr	-4675
iss	-4676
▁year	-4677
US	-4678
▁202	-4679
bx	-4680
mnop	-4681
seen	-4682
/10	-4683
)])\	-4684
▁cos	-4685
▁https	-4686
▁ry	-4687
==2	-4688
▁extra	-4689
>{\	-4690
tid	-4691
▁4:\	-4692
ide	-4693
nLL	-4694
▁2:	-4695
▁\")]\	-4696
gg	-4697
▁mk	-4698
▁\"[	-4699
▁ba	-4700
Possible	-4701
abcdefghi	-4702
(\'0\')\	-4703
SEC	-4704
IBLE	-4705
tused	-4706
//2):\	-4707
+=2\	-4708
jklmnop	-4709
SSIBLE	-4710
RR	-4711
▁30000	-4712
<=(	-4713
source	-4714
reen	-4715
tque	-4716
▁unordered	-4717
▁va	-4718
▁cache	-4719
ET	-4720
jklmnopqrst	-4721
moves	-4722
tarray	-4723
VE	-4724
[]{	-4725
▁2.0	-4726
remain	-4727
lcm	-4728
msk	-4729
▁[\"	-4730
POSSIBLE	-4731
\'\'\'	-4732
()+	-4733
▁]\	-4734
nout	-4735
)?	-4736
>1:\	-4737
va	-4738
▁State	-4739
\343\202\211	-4740
▁\"0\";\	-4741
3],	-4742
[20	-4743
]=0\	-4744
▁AB	-4745
▁ANS	-4746
▁text	-4747
hm	-4748
]!=\'	-4749
▁\'#\'	-4750
8;	-4751
ways	-4752
▁abc	-4753
jklmnopqrstuv	-4754
the	-4755
▁pn	-4756
▁msk	-4757
▁resp	-4758
bel	-4759
ood	-4760
[40000	-4761
4);\	-4762
\345\200\2	-4763
Par	-4764
Odd	-4765
▁lf	-4766
\320\265	-4767
=-	-4768
▁foo	-4769
qui	-4770
▁don	-4771
lose	-4772
][200	-4773
tswap	-4774
tnow	-4775
▁lol	-4776
Type	-4777
merge	-4778
▁maxm	-4779
acti	-4780
▁\"-	-4781
▁\'(\')	-4782
\"[	-4783
▁uint	-4784
Color	-4785
9],	-4786
obj	-4787
ons	-4788
▁amount	-4789
▁maxN	-4790
1,0,	-4791
(\'1\')\	-4792
▁isprime	-4793
▁inst	-4794
cassert	-4795
\").	-4796
▁=0;\	-4797
▁(1),	-4798
▁rl	-4799
-=1	-4800
+1].	-4801
\"};\	-4802
abel	-4803
[0]=1;\	-4804
▁1]));\	-4805
tBigInteger	-4806
][1][	-4807
itor	-4808
rowable	-4809
▁reversed	-4810
og	-4811
-1]==	-4812
▁ncr	-4813
▁dest	-4814
[1005];\	-4815
][0])\	-4816
▁colors	-4817
[12	-4818
ple	-4819
hird	-4820
▁beg	-4821
ada	-4822
sums	-4823
divis	-4824
▁leaf	-4825
nreturn	-4826
▁compute	-4827
imag	-4828
-10;\	-4829
▁binpow	-4830
▁\'-\')\	-4831
111	-4832
nCreated	-4833
)-1\	-4834
▁1000;	-4835
▁taken	-4836
8\	-4837
xor	-4838
getP	-4839
(),\	-4840
54	-4841
ei	-4842
idge	-4843
lack	-4844
ingle	-4845
▁sn	-4846
▁\"-1\\	-4847
▁30;	-4848
tTask	-4849
)/2	-4850
\320\260	-4851
▁column	-4852
Test	-4853
▁\"}\"	-4854
#.	-4855
permutation	-4856
▁256	-4857
ments	-4858
>0;	-4859
7;	-4860
ee	-4861
,\'	-4862
▁cols	-4863
\343\202\214	-4864
und	-4865
(-1)"	-4866
pairs	-4867
▁maximum	-4868
)].	-4869
9)\	-4870
)/(	-4871
▁1<<	-4872
\'];\	-4873
▁(0),	-4874
python	-4875
Iterator	-4876
▁readLine	-4877
readString	-4878
▁multiset	-4879
▁conv	-4880
\343\200\200	-4881
\'),	-4882
▁\\\	-4883
??????	-4884
▁4);\	-4885
▁TaskD	-4886
▁snext	-4887
▁white	-4888
10\342\2	-4889
LI	-4890
▁pc	-4891
black	-4892
<<\"\\	-4893
▁decimal	-4894
perm	-4895
==0&&	-4896
▁goal	-4897
judge	-4898
▁xi	-4899
Friendship	-4900
▁Space	-4901
6)	-4902
dr	-4903
Such	-4904
suff	-4905
▁hor	-4906
1--;\	-4907
6;	-4908
+1)"	-4909
<26	-4910
▁full	-4911
▁addEdge	-4912
ted	-4913
▁-2,	-4914
100],	-4915
▁groups	-4916
SuchElement	-4917
%2==0)	-4918
1&&	-4919
icense	-4920
((1	-4921
\'].	-4922
tdef	-4923
sr	-4924
vp	-4925
)+(	-4926
half	-4927
▁bt	-4928
▁Pro	-4929
owels	-4930
vx	-4931
omb	-4932
+1+	-4933
1<	-4934
>=1;	-4935
=[0]*(	-4936
tvisited	-4937
tleft	-4938
▁divs	-4939
]-=	-4940
20\	-4941
▁Seg	-4942
qq	-4943
static	-4944
[22	-4945
])+	-4946
[]={	-4947
aves	-4948
▁300	-4949
▁dst	-4950
erence	-4951
erm	-4952
fixed	-4953
▁maxv	-4954
▁xr	-4955
▁rotate	-4956
▁\'.\')\	-4957
2:	-4958
Lower	-4959
▁stringstream	-4960
▁33	-4961
▁vb	-4962
▁ft	-4963
▁ob	-4964
▁front	-4965
▁toString	-4966
][];\	-4967
ending	-4968
▁UnionFind	-4969
TreeMap	-4970
));}\	-4971
▁space	-4972
▁isdigit	-4973
▁bytesRead	-4974
▁srand	-4975
AG	-4976
▁wy	-4977
TT	-4978
▁lz	-4979
▁8)	-4980
▁\"-1\";\	-4981
▁dijkstra	-4982
▁200000000	-4983
▁box	-4984
lp	-4985
▁\'?\'	-4986
tFastReader	-4987
ui	-4988
ninp	-4989
▁cases	-4990
ntemp	-4991
▁accumulate	-4992
alk	-4993
maxm	-4994
ids	-4995
▁xb	-4996
\').	-4997
▁(1,	-4998
6],	-4999
▁FileWriter	-5000
▁product	-5001
nal	-5002
degree	-5003
heappush	-5004
(__	-5005
]>>	-5006
▁7);\	-5007
▁book	-5008
▁lft	-5009
▁tin	-5010
000],	-5011
CharFilter	-5012
▁SpaceCharFilter	-5013
tnext	-5014
67\2	-5015
aj	-5016
▁ifac	-5017
▁fastio	-5018
▁children	-5019
&1	-5020
▁readString	-5021
.*;	-5022
\"]\	-5023
ities	-5024
▁8,	-5025
▁free	-5026
▁gra	-5027
][1]]	-5028
▁nextLongArray	-5029
]=1	-5030
+1:\	-5031
▁fst	-5032
▁100000;\	-5033
▁getInt	-5034
nline	-5035
▁0});\	-5036
▁letters	-5037
▁gn	-5038
sign	-5039
<>(	-5040
▁1,\	-5041
▁three	-5042
+1),	-5043
hat	-5044
cards	-5045
Matrix	-5046
FI	-5047
tinput	-5048
Inverse	-5049
possible	-5050
+1-	-5051
+2*	-5052
▁\"\";	-5053
▁source	-5054
▁goto	-5055
▁LLONG	-5056
4:\	-5057
)<<	-5058
▁asc	-5059
problemset	-5060
▁ly	-5061
▁lr	-5062
▁fen	-5063
Gr	-5064
-1)%	-5065
=10;\	-5066
\343\201\257	-5067
▁0.0	-5068
(3);\	-5069
tqueue	-5070
▁chars	-5071
afe	-5072
ser	-5073
76	-5074
norm	-5075
omin	-5076
()));	-5077
tprev	-5078
[1005	-5079
\345\244\2	-5080
dest	-5081
▁less	-5082
1]\	-5083
cut	-5084
▁readArray	-5085
8];\	-5086
▁ksm	-5087
▁\'+\')	-5088
heappop	-5089
▁hate	-5090
▁\"\"\"\	-5091
upd	-5092
▁[[0	-5093
)++)\	-5094
nanswer	-5095
▁poss	-5096
▁97	-5097
▁ot	-5098
have	-5099
section	-5100
sw	-5101
▁\"\",	-5102
CC	-5103
Query	-5104
\344\275\2	-5105
<<1	-5106
▁over	-5107
ov	-5108
▁rez	-5109
greater	-5110
rg	-5111
▁show	-5112
cf	-5113
]-\'	-5114
ization	-5115
▁powmod	-5116
nX	-5117
▁gap	-5118
+=1;\	-5119
1474	-5120
▁than	-5121
entroid	-5122
rie	-5123
▁fn	-5124
children	-5125
▁[](	-5126
[4],	-5127
[200010],	-5128
▁StreamTokenizer	-5129
(!(	-5130
▁rg	-5131
▁PrintStream	-5132
GS	-5133
▁cm	-5134
▁plus	-5135
▁segment	-5136
The	-5137
▁(4	-5138
▁fu	-5139
stderr	-5140
tPoint	-5141
[0]==\'	-5142
ncin	-5143
▁quick	-5144
Pre	-5145
dst	-5146
way	-5147
objects	-5148
letters	-5149
Be	-5150
Power	-5151
fast	-5152
(\"#	-5153
lg	-5154
*2\	-5155
▁um	-5156
▁0))\	-5157
▁eval	-5158
ALL	-5159
▁\'\	-5160
▁ArrayDeque	-5161
future	-5162
pppppppppppppppp	-5163
tHashMap	-5164
32\2	-5165
[30];\	-5166
▁degree	-5167
▁divisors	-5168
nstack	-5169
1[1]	-5170
-1,0,	-5171
▁10)\	-5172
80	-5173
bc	-5174
/2,	-5175
▁save	-5176
%2==0)\	-5177
▁lenbuf	-5178
<>	-5179
▁\",\"	-5180
▁default	-5181
_)	-5182
ifdef	-5183
1};\	-5184
[0]][	-5185
layers	-5186
||(	-5187
▁/**\	-5188
tInteger	-5189
]))"	-5190
▁1]))	-5191
▁ten	-5192
/3	-5193
elp	-5194
▁INPUT	-5195
}]	-5196
ITH	-5197
▁pv	-5198
▁ModInt	-5199
[100100];\	-5200
oj	-5201
Colle	-5202
PER	-5203
++]=	-5204
▁ha	-5205
▁fread	-5206
00010;\	-5207
4.	-5208
plus	-5209
▁las	-5210
2--;\	-5211
ION	-5212
>=0:\	-5213
▁Update	-5214
5+	-5215
▁BU	-5216
Move	-5217
\343\200\201	-5218
AD	-5219
bfs	-5220
BytesIO	-5221
▁vvi	-5222
▁conn	-5223
maind	-5224
boolean	-5225
rb	-5226
vc	-5227
00010],	-5228
ings	-5229
▁"/*\	-5230
sets	-5231
▁\'/	-5232
▁scores	-5233
GB	-5234
-8\	-5235
###	-5236
inct	-5237
tNode	-5238
▁Init	-5239
OrDefault	-5240
ctr	-5241
0][1	-5242
▁9,	-5243
▁\";	-5244
▁then	-5245
%2==1:\	-5246
[300005];\	-5247
▁eof	-5248
money	-5249
▁parseInt	-5250
))))\	-5251
-1};\	-5252
▁qw	-5253
▁rk	-5254
▁SZ	-5255
▁poly	-5256
climits	-5257
anik	-5258
▁\'1\')\	-5259
,\"	-5260
▁8;\	-5261
ED	-5262
<10;	-5263
▁\"]\";\	-5264
▁yb	-5265
▁act	-5266
][1].	-5267
▁inputs	-5268
getOrDefault	-5269
[2]-	-5270
ordin	-5271
ib	-5272
+2]	-5273
▁0]\	-5274
▁mag	-5275
steps	-5276
▁SIZE	-5277
)],	-5278
chef	-5279
1+=1\	-5280
▁fw	-5281
98	-5282
()(	-5283
]++,	-5284
(1);	-5285
8364	-5286
beg	-5287
▁"/*	-5288
roperty	-5289
cv	-5290
PriorityQueue	-5291
________________	-5292
_;	-5293
[110];\	-5294
Sh	-5295
▁ap	-5296
▁\'\'	-5297
OM	-5298
%2)	-5299
▁finish	-5300
14748364	-5301
tV	-5302
▁LOG	-5303
▁2){\	-5304
▁[],	-5305
▁Name	-5306
▁where	-5307
width	-5308
Div	-5309
▁nj	-5310
▁2))\	-5311
▁modulo	-5312
▁Val	-5313
▁ref	-5314
▁ml	-5315
less	-5316
tbyte	-5317
(\"\\\\	-5318
Range	-5319
[15	-5320
Segment	-5321
\"*	-5322
Dict	-5323
+1){\	-5324
]});\	-5325
▁modpow	-5326
▁suffix	-5327
book	-5328
▁100)	-5329
eap	-5330
▁oc	-5331
▁\'*\'	-5332
dq	-5333
▁rp	-5334
ori	-5335
)2	-5336
▁hp	-5337
▁atan	-5338
fir	-5339
\',\	-5340
▁psum	-5341
]/	-5342
▁mb	-5343
264	-5344
▁dl	-5345
From	-5346
[3].	-5347
udent	-5348
[0][0][0]	-5349
getProperty	-5350
keySet	-5351
0000000000	-5352
IMPOSSIBLE	-5353
▁23	-5354
over	-5355
▁deb	-5356
[6];\	-5357
tract	-5358
▁2]);\	-5359
▁tests	-5360
▁gets	-5361
[1000005],	-5362
=((	-5363
hich	-5364
LOCKS	-5365
▁(1.0	-5366
50\2	-5367
(4):\	-5368
▁ONLINE	-5369
=2*	-5370
box	-5371
5:\	-5372
rea	-5373
▁non	-5374
tmx	-5375
▁nCr	-5376
column	-5377
==\'-\')	-5378
▁ops	-5379
tcurr	-5380
ww	-5381
gex	-5382
▁sd	-5383
1)):\	-5384
▁player	-5385
(\"0\")\	-5386
▁Fraction	-5387
▁emp	-5388
minus	-5389
Flow	-5390
Table	-5391
//#	-5392
▁date	-5393
counts	-5394
ould	-5395
▁Tail	-5396
[1]))\	-5397
white	-5398
▁will	-5399
▁inverse	-5400
(4,	-5401
NUM	-5402
]+1;\	-5403
▁flip	-5404
\")){\	-5405
isPrime	-5406
:])\	-5407
▁getint	-5408
▁SegmentTree	-5409
72	-5410
xa	-5411
hedron	-5412
XX	-5413
_;\	-5414
aut	-5415
INPUT	-5416
▁lista	-5417
▁objects	-5418
2]\	-5419
(\'+	-5420
▁scc	-5421
▁ya	-5422
irls	-5423
▁stop	-5424
WhiteSpace	-5425
ncout	-5426
gi	-5427
▁equal	-5428
▁\346\2	-5429
▁anc	-5430
▁love	-5431
[1000000];\	-5432
ucket	-5433
▁after	-5434
vy	-5435
sn	-5436
▁Le	-5437
▁angle	-5438
fun	-5439
cm	-5440
anc	-5441
On	-5442
2=0\	-5443
▁SQ	-5444
▁\"1\"	-5445
▁Char	-5446
▁10**9	-5447
indx	-5448
▁WITH	-5449
+1]==\'	-5450
▁6\	-5451
▁xl	-5452
▁[1]	-5453
▁carry	-5454
▁ang	-5455
~~	-5456
0000000	-5457
!\	-5458
lef	-5459
▁RR	-5460
▁0.5	-5461
4*	-5462
orig	-5463
▁entry	-5464
AM	-5465
4]	-5466
(\"1\\	-5467
tprime	-5468
▁clear	-5469
ots	-5470
three	-5471
▁blue	-5472
tanswer	-5473
▁\"}\";\	-5474
uu	-5475
comb	-5476
<3	-5477
<26;	-5478
▁dbg	-5479
car	-5480
▁-1},	-5481
▁join	-5482
tright	-5483
▁instance	-5484
Cur	-5485
\343\202\271	-5486
IS	-5487
far	-5488
ouse	-5489
▁mode	-5490
▁isWhitespace	-5491
fff	-5492
▁(2);	-5493
stringstream	-5494
eq	-5495
▁32	-5496
▁pas	-5497
+1)+\"	-5498
])]	-5499
2)+	-5500
...)	-5501
lucky	-5502
[-1]:\	-5503
irl	-5504
ells	-5505
(\'0\');\	-5506
-=(	-5507
___	-5508
xb	-5509
!=(	-5510
Inv	-5511
ycle	-5512
▁items	-5513
▁\'#\';\	-5514
CT	-5515
:\'	-5516
▁----	-5517
▁region	-5518
▁adjList	-5519
phab	-5520
readlines	-5521
vr	-5522
▁lv	-5523
[1]==	-5524
▁recur	-5525
\320\270	-5526
▁pnt	-5527
rease	-5528
(3)\	-5529
▁spf	-5530
-2]	-5531
<=\'9	-5532
=0,0\	-5533
short	-5534
Is	-5535
ONE	-5536
rad	-5537
tLL	-5538
pass	-5539
▁division	-5540
26\210\342\2	-5541
was	-5542
uzz	-5543
room	-5544
=1000000007;\	-5545
Score	-5546
BUFFER	-5547
[100001],	-5548
05],	-5549
==0:	-5550
▁(10	-5551
3+	-5552
▁minx	-5553
Printable	-5554
▁1000000;\	-5555
11,	-5556
tun	-5557
}});\	-5558
%5	-5559
▁xa	-5560
rm	-5561
▁dj	-5562
ndata	-5563
tauto	-5564
\');	-5565
▁5:\	-5566
chars	-5567
▁Scan	-5568
▁\"\".	-5569
ful	-5570
ages	-5571
]==1)	-5572
[111111	-5573
med	-5574
07\2	-5575
]=\"	-5576
ntest	-5577
NORE	-5578
▁HIM	-5579
Even	-5580
nton	-5581
▁0,\	-5582
mainder	-5583
▁26;\	-5584
IGNORE	-5585
[25	-5586
cum	-5587
(10):\	-5588
udents	-5589
nbitset	-5590
OT	-5591
OUT	-5592
Win	-5593
jan	-5594
des	-5595
(\'-\'	-5596
<2*	-5597
Alice	-5598
▁[][]	-5599
pointer	-5600
2+=	-5601
▁\"*	-5602
factors	-5603
islower	-5604
▁{0},	-5605
▁(\'0\'	-5606
AAAAAAAAAAAAAAAA	-5607
CD	-5608
▁fb	-5609
CHAT	-5610
[100000],	-5611
lenbuf	-5612
-1)*(	-5613
Distance	-5614
tFOR	-5615
▁4)\	-5616
▁50;	-5617
▁car	-5618
▁answ	-5619
01],	-5620
aper	-5621
34567	-5622
yScanner	-5623
▁100010;\	-5624
!\")\	-5625
Mem	-5626
[1]),	-5627
▁cu	-5628
2=0;\	-5629
Float	-5630
▁1];	-5631
oice	-5632
▁more	-5633
tcheck	-5634
[::-1]:\	-5635
ml	-5636
tidx	-5637
▁{2,	-5638
[0]]\	-5639
-1]):\	-5640
delete	-5641
alindrome	-5642
26\	-5643
+1)*(	-5644
DD	-5645
idate	-5646
8979323846264	-5647
SU	-5648
tpq	-5649
▁pal	-5650
ultiset	-5651
▁kwargs	-5652
[200001];\	-5653
za	-5654
tpr	-5655
%2==0){\	-5656
,%	-5657
▁want	-5658
[1000001];\	-5659
▁ccw	-5660
amount	-5661
CAL	-5662
▁!((	-5663
73	-5664
▁Inf	-5665
[100],	-5666
▁Decimal	-5667
+2)\	-5668
▁11,	-5669
▁let	-5670
\':\'	-5671
tnode	-5672
▁costs	-5673
▁thread	-5674
task	-5675
==-1)	-5676
Two	-5677
▁ph	-5678
▁\"-1\"	-5679
▁Con	-5680
▁Time	-5681
▁largest	-5682
▁50;\	-5683
Result	-5684
[0]++;\	-5685
(10)	-5686
][2])	-5687
tstack	-5688
09	-5689
tQ	-5690
▁4];\	-5691
99999999	-5692
64\2	-5693
++;}\	-5694
-2);\	-5695
factor	-5696
LowerCase	-5697
▁47	-5698
▁neighb	-5699
60\2	-5700
union	-5701
▁hand	-5702
CM	-5703
(++	-5704
())"	-5705
▁NIL	-5706
)(1);	-5707
\302\202\303\2	-5708
▁Head	-5709
Per	-5710
[7]	-5711
▁bus	-5712
▁lhs	-5713
▁tol	-5714
Black	-5715
-6;\	-5716
free	-5717
hen	-5718
nmx	-5719
groups	-5720
Seg	-5721
]->	-5722
ninf	-5723
▁(2*	-5724
})	-5725
[]>	-5726
▁[-1]	-5727
▁>::	-5728
])):\	-5729
▁10**9+7\	-5730
Word	-5731
▁avg	-5732
▁1)].	-5733
[1010];\	-5734
pts	-5735
*\	-5736
4[	-5737
▁smallest	-5738
//(	-5739
+1]+	-5740
44,	-5741
fib	-5742
Child	-5743
Inter	-5744
inline	-5745
▁square	-5746
PrintableChar	-5747
MM	-5748
▁road	-5749
strlen	-5750
▁\'0\'\	-5751
▁\342\2	-5752
rl	-5753
HT	-5754
Check	-5755
▁timer	-5756
▁1000000;	-5757
▁1000000000	-5758
Vertex	-5759
▁\320	-5760
201	-5761
▁im	-5762
▁tokens	-5763
[2,	-5764
+1)/2	-5765
▁room	-5766
[1]):\	-5767
tal	-5768
getKey	-5769
Graph	-5770
][4];\	-5771
[:-1]\	-5772
▁1000000009;\	-5773
heapq	-5774
▁Build	-5775
[110000	-5776
\'*(	-5777
▁200005;\	-5778
▁Templates	-5779
dbg	-5780
▁1"	-5781
:\\	-5782
0):\	-5783
[10][1	-5784
regex	-5785
▁stdIn	-5786
lr	-5787
(0.	-5788
tinv	-5789
\347\202\27	-5790
vo	-5791
▁Dfs	-5792
,1);\	-5793
[1000010];\	-5794
[400	-5795
ini	-5796
%2:\	-5797
▁empty	-5798
BG	-5799
Sp	-5800
▁For	-5801
)(0);	-5802
▁1024	-5803
▁father	-5804
▁hd	-5805
▁cmd	-5806
▁fpow	-5807
▁\"{\"	-5808
;//	-5809
exists	-5810
tsys	-5811
▁bas	-5812
:%	-5813
ton	-5814
\342\200\211	-5815
1])	-5816
▁elements	-5817
▁du	-5818
=[\'	-5819
▁1)));\	-5820
▁100000;	-5821
▁DataInputStream	-5822
30\2	-5823
appy	-5824
0));\	-5825
▁remaining	-5826
▁\')\')	-5827
=99824435	-5828
Op	-5829
rat	-5830
umns	-5831
▁\"!	-5832
Get	-5833
1++)	-5834
\346\234\200	-5835
▁(++	-5836
▁calculate	-5837
▁1)))	-5838
offset	-5839
▁bound	-5840
(\"1\")\	-5841
nextString	-5842
By	-5843
(1+	-5844
-2):\	-5845
)//2	-5846
ncol	-5847
zeros	-5848
▁center	-5849
zip	-5850
49	-5851
nvar	-5852
]==\'#	-5853
3-	-5854
ctype	-5855
▁"\'\'\'\	-5856
ANS	-5857
▁-1){\	-5858
▁\320\2	-5859
sg	-5860
uk	-5861
▁22	-5862
▁36	-5863
▁bp	-5864
▁minv	-5865
++]);\	-5866
SZ	-5867
]^	-5868
338	-5869
▁Py	-5870
[200000];\	-5871
▁ee	-5872
!!!!	-5873
tline	-5874
tread	-5875
rhs	-5876
▁|\	-5877
lvl	-5878
0101	-5879
ular	-5880
gen	-5881
\345\255\2	-5882
brr	-5883
Down	-5884
▁tie	-5885
▁-1));\	-5886
▁pattern	-5887
0-	-5888
tsize	-5889
fy	-5890
occ	-5891
▁2000	-5892
\344\273\2	-5893
xp	-5894
+=[	-5895
▁cv	-5896
[2][1]	-5897
▁1.0;\	-5898
oper	-5899
▁chkmax	-5900
▁fp	-5901
fffffff	-5902
▁codeforces	-5903
-1])"	-5904
▁DEBUG	-5905
▁segtree	-5906
<2;	-5907
]+1	-5908
][0]+	-5909
tfill	-5910
(\'-\'),	-5911
Exp	-5912
ari	-5913
5):\	-5914
[1001];\	-5915
7],	-5916
▁lev	-5917
ances	-5918
▁convert	-5919
00\	-5920
1011	-5921
blue	-5922
▁cor	-5923
▁wait	-5924
▁magic	-5925
cat	-5926
tmain	-5927
▁strings	-5928
)])	-5929
▁The	-5930
▁prim	-5931
▁BigDecimal	-5932
qs	-5933
[0]):\	-5934
nistream	-5935
ARGS	-5936
[3]);\	-5937
copyOf	-5938
Mask	-5939
wick	-5940
>=\'0\'	-5941
Total	-5942
▁\343\201\2	-5943
tokens	-5944
Cases	-5945
ices	-5946
▁ass	-5947
▁&(	-5948
▁??	-5949
goal	-5950
▁man	-5951
▁anss	-5952
▁mins	-5953
▁BS	-5954
▁post	-5955
▁er	-5956
()==	-5957
(2**	-5958
▁divide	-5959
ncounter	-5960
-1+	-5961
ieve	-5962
Ne	-5963
typ	-5964
%2==1	-5965
tconst	-5966
ook	-5967
mult	-5968
rain	-5969
byte	-5970
▁keys	-5971
▁2.0;\	-5972
(\'-\');\	-5973
(&	-5974
hp	-5975
Supp	-5976
▁II	-5977
▁buff	-5978
▁needed	-5979
29	-5980
,2*	-5981
▁lint	-5982
neighb	-5983
▁exist	-5984
,1	-5985
▁5);\	-5986
\'));\	-5987
▁>\	-5988
tPair	-5989
Tp	-5990
▁gener	-5991
▁De	-5992
▁fd	-5993
sequence	-5994
)\'	-5995
▁normal	-5996
ahedron	-5997
Upper	-5998
35\2	-5999
nnums	-6000
Numbers	-6001
Pro	-6002
uest	-6003
ODE	-6004
▁Res	-6005
%2!=0:\	-6006
UB	-6007
▁mr	-6008
▁sig	-6009
)==0:\	-6010
nSystem	-6011
)+\'	-6012
>\'9	-6013
tbuf	-6014
ASE	-6015
▁divisor	-6016
▁interface	-6017
trie	-6018
middle	-6019
[105][1	-6020
each	-6021
▁32;	-6022
ctors	-6023
▁\'\')\	-6024
▁fg	-6025
▁Mat	-6026
[10],	-6027
▁bob	-6028
▁delete	-6029
utes	-6030
avy	-6031
▁ix	-6032
▁game	-6033
5][	-6034
▁BUFFER	-6035
\321\202	-6036
?0:	-6037
▁people	-6038
[1000000	-6039
▁oj	-6040
teen	-6041
trans	-6042
▁intersect	-6043
cu	-6044
rot	-6045
▁who	-6046
▁rect	-6047
▁ascii	-6048
Valid	-6049
]-=1\	-6050
[2][0]	-6051
▁atexit	-6052
3333	-6053
]==0)\	-6054
▁chkmin	-6055
33\	-6056
tend	-6057
32\204	-6058
men	-6059
>>1;\	-6060
[1:]:\	-6061
▁bufferPointer	-6062
8979323846264338	-6063
tgraph	-6064
▁1).	-6065
▁mass	-6066
▁\'-\';\	-6067
01;\	-6068
-1)]\	-6069
\':0,	-6070
▁\'<<	-6071
▁dn	-6072
▁//\	-6073
▁prep	-6074
nsolve	-6075
\343\201\225	-6076
,-	-6077
▁pol	-6078
npoint	-6079
<\'0\'	-6080
2==	-6081
▁#\	-6082
ecial	-6083
tic	-6084
▁MD	-6085
▁tn	-6086
\343\201\215	-6087
OP	-6088
])*	-6089
▁\'8	-6090
freopen	-6091
asya	-6092
nown	-6093
fst	-6094
kol	-6095
[110	-6096
ainer	-6097
-1]==\'	-6098
(\"-1\")\	-6099
;){\	-6100
[2000	-6101
pas	-6102
[0]))\	-6103
BigDecimal	-6104
▁ID	-6105
▁gt	-6106
(\",	-6107
)-1,	-6108
▁\'1\'\	-6109
47,	-6110
▁FI	-6111
▁rv	-6112
Team	-6113
]==0){\	-6114
RL	-6115
rib	-6116
▁tout	-6117
popcnt	-6118
▁results	-6119
DEF	-6120
nls	-6121
▁ey	-6122
▁20,	-6123
tfirst	-6124
Divis	-6125
struct	-6126
iS	-6127
▁13,	-6128
▁maxy	-6129
cctype	-6130
reversed	-6131
************	-6132
NN	-6133
\'"	-6134
2])\	-6135
\'],	-6136
▁negative	-6137
▁dm	-6138
▁winner	-6139
▁heapify	-6140
70	-6141
])){\	-6142
▁\'\\\"	-6143
=10**9+7\	-6144
ado	-6145
▁kek	-6146
vt	-6147
[5],	-6148
iles	-6149
/=2;\	-6150
=10000	-6151
▁\'9\');\	-6152
IME	-6153
]};\	-6154
tests	-6155
]-1]	-6156
▁12,	-6157
▁editor	-6158
+=2;\	-6159
\343\201\244	-6160
dt	-6161
(0)"	-6162
cast	-6163
0]\	-6164
Uti	-6165
<<1)	-6166
tind	-6167
▁mex	-6168
Match	-6169
>=(	-6170
Height	-6171
▁bitset	-6172
UL	-6173
(1.0	-6174
▁fc	-6175
!=1:\	-6176
Vis	-6177
erve	-6178
tfreopen	-6179
)-(	-6180
center	-6181
wise	-6182
▁Check	-6183
▁sequence	-6184
▁2**	-6185
tpair	-6186
Forces	-6187
\345\205\245	-6188
▁PT	-6189
tlen	-6190
▁{},	-6191
tminus	-6192
AND	-6193
(26):\	-6194
\346\26	-6195
nextChar	-6196
?1:	-6197
(\":	-6198
▁goes	-6199
player	-6200
nmultiset	-6201
))*	-6202
▁28	-6203
)+1\	-6204
ssse	-6205
%10\	-6206
FILE	-6207
\"*(	-6208
ills	-6209
▁126	-6210
2]);\	-6211
▁NoSuchElement	-6212
isp	-6213
thi	-6214
buff	-6215
jump	-6216
toArray	-6217
lev	-6218
▁9\	-6219
[101][1	-6220
\")));\	-6221
vent	-6222
▁0;}\	-6223
▁modInverse	-6224
1>\	-6225
LEN	-6226
nma	-6227
tinit	-6228
lication	-6229
\347\232\204	-6230
ART	-6231
15;\	-6232
cb	-6233
▁avail	-6234
mk	-6235
ane	-6236
▁bec	-6237
tedge	-6238
ameter	-6239
RT	-6240
▁##	-6241
[1];	-6242
cols	-6243
50];\	-6244
dices	-6245
▁memory	-6246
[][]=	-6247
▁\"\");\	-6248
2.0	-6249
ants	-6250
▁reach	-6251
▁create	-6252
▁\'-\');\	-6253
▁Character	-6254
▁...	-6255
){}\	-6256
4):\	-6257
▁lcp	-6258
▁when	-6259
tpoint	-6260
▁coins	-6261
\320\275	-6262
Ar	-6263
▁\'.\':\	-6264
\347\264\2	-6265
1/	-6266
du	-6267
▁sv	-6268
nunordered	-6269
_0	-6270
▁mov	-6271
▁comma	-6272
wa	-6273
mmx	-6274
▁AA	-6275
100100	-6276
\342\200\224	-6277
gon	-6278
05\2	-6279
▁maxim	-6280
▁equals	-6281
<<#	-6282
==3	-6283
▁nu	-6284
▁dish	-6285
reflect	-6286
xl	-6287
▁++)\	-6288
▁event	-6289
PrintStream	-6290
kt	-6291
()>	-6292
four	-6293
Anton	-6294
▁mv	-6295
\346\21	-6296
-1)+	-6297
▁\'3	-6298
▁dv	-6299
1=[]\	-6300
bt	-6301
+1:]\	-6302
▁finv	-6303
▁sf	-6304
▁lli	-6305
▁prop	-6306
UP	-6307
Rem	-6308
cmd	-6309
▁MP	-6310
<0>(	-6311
▁maxs	-6312
▁vect	-6313
(\"%.12	-6314
pd	-6315
nch	-6316
59	-6317
mxn	-6318
nar	-6319
[:]\	-6320
tdata	-6321
)&	-6322
uint	-6323
▁gao	-6324
tcounter	-6325
FOR	-6326
ams	-6327
fit	-6328
▁ost	-6329
phabet	-6330
▁Author	-6331
cou	-6332
NMAX	-6333
▁cnts	-6334
)==1:\	-6335
-\	-6336
▁ir	-6337
▁dem	-6338
7\272	-6339
▁cell	-6340
▁lm	-6341
]=-1;\	-6342
(\"\")\	-6343
▁\320\27	-6344
▁ho	-6345
10**	-6346
arnings	-6347
▁\350\2	-6348
▁readDouble	-6349
6\227	-6350
tpar	-6351
▁tre	-6352
ctime	-6353
},{	-6354
-\'0	-6355
▁cyc	-6356
//10\	-6357
colors	-6358
][1][0]	-6359
,*	-6360
<1>(	-6361
-1)/2	-6362
Memory	-6363
Factors	-6364
[10]	-6365
seven	-6366
▁which	-6367
▁`	-6368
2++)	-6369
solution	-6370
*2)	-6371
▁15,	-6372
▁ban	-6373
ARD	-6374
ING	-6375
▁27	-6376
ency	-6377
taken	-6378
[][][]	-6379
Solution	-6380
abm	-6381
1024	-6382
▁rmq	-6383
process	-6384
road	-6385
[105],	-6386
▁Throwable	-6387
wh	-6388
50],	-6389
▁Ins	-6390
Position	-6391
VI	-6392
▁214748364	-6393
Bob	-6394
▁-100000000	-6395
tto	-6396
==2)	-6397
▁vert	-6398
las	-6399
(\"3	-6400
▁cond	-6401
scc	-6402
▁poz	-6403
setprecision	-6404
tsw	-6405
▁hull	-6406
\343\202\212	-6407
)[	-6408
),(	-6409
pal	-6410
quest	-6411
ressW	-6412
[1005][100	-6413
isWhiteSpace	-6414
3279	-6415
acos	-6416
())]\	-6417
]<<\"	-6418
▁bottom	-6419
[1<<	-6420
inputs	-6421
SuppressW	-6422
SuppressWarnings	-6423
▁eg	-6424
>>;\	-6425
qw	-6426
▁fft	-6427
lista	-6428
nik	-6429
▁trace	-6430
tupdate	-6431
lli	-6432
tle	-6433
)-\'	-6434
[3]\	-6435
▁ary	-6436
▁erase	-6437
▁CLOCKS	-6438
tneg	-6439
▁four	-6440
tprintln	-6441
tbest	-6442
[200];\	-6443
[2:	-6444
unt	-6445
([\'	-6446
▁cir	-6447
▁should	-6448
][6	-6449
({0,	-6450
\'])	-6451
conn	-6452
▁cas	-6453
▁odds	-6454
getline	-6455
\343\203\203	-6456
<0||	-6457
before	-6458
native	-6459
ied	-6460
narray	-6461
eff	-6462
▁xp	-6463
}\".	-6464
▁7)\	-6465
divide	-6466
▁Tools	-6467
▁keyboard	-6468
);}	-6469
tan	-6470
▁kb	-6471
▁400	-6472
[1][2]	-6473
-=1"	-6474
take	-6475
▁mapp	-6476
nexcept	-6477
ArrayDeque	-6478
ttot	-6479
▁previous	-6480
▁TT	-6481
(\"+	-6482
▁+1,	-6483
strings	-6484
▁nf	-6485
▁pm	-6486
**0.5)	-6487
&&!	-6488
)+1)\	-6489
▁direction	-6490
toLowerCase	-6491
\347\202\271	-6492
(--	-6493
▁ser	-6494
(\"%.9	-6495
▁iend	-6496
▁"\"\"\"\	-6497
Pr	-6498
ji	-6499
<5;	-6500
eln	-6501
▁nk	-6502
where	-6503
▁3];\	-6504
▁readIntArray	-6505
>1	-6506
RI	-6507
yb	-6508
][50	-6509
▁360	-6510
lv	-6511
tmid	-6512
[1001	-6513
CharAt	-6514
▁stringTokenizer	-6515
▁FS	-6516
akes	-6517
▁20)	-6518
[2][2	-6519
tdiff	-6520
▁star	-6521
▁buflen	-6522
END	-6523
//2,	-6524
Danik	-6525
Parent	-6526
][1][1]	-6527
▁1][0],	-6528
2[1]	-6529
▁yield	-6530
ccw	-6531
▁vertices	-6532
inic	-6533
▁Bit	-6534
()-1);\	-6535
▁status	-6536
\"\"\"	-6537
▁\"+\"	-6538
▁bn	-6539
$$$$	-6540
prob	-6541
Bound	-6542
tfact	-6543
18\	-6544
))]\	-6545
02];\	-6546
[1:])\	-6547
IGHT	-6548
▁rig	-6549
8)	-6550
shift	-6551
▁77	-6552
city	-6553
▁maze	-6554
+1]):\	-6555
[500005];\	-6556
ida	-6557
land	-6558
][1]:\	-6559
][20];\	-6560
2*(	-6561
ties	-6562
▁bigmod	-6563
▁both	-6564
Collectors	-6565
368	-6566
[505	-6567
vers	-6568
nread	-6569
][0]:\	-6570
-----------	-6571
▁2.	-6572
ttime	-6573
▁1]))\	-6574
▁\'+\'	-6575
ves	-6576
▁TH	-6577
▁5)\	-6578
▁-1),	-6579
[0][2]	-6580
nlast	-6581
region	-6582
▁sizes	-6583
reverseOrder	-6584
-7;\	-6585
▁men	-6586
[2][1	-6587
▁cook	-6588
nH	-6589
▁doit	-6590
▁sumb	-6591
nget	-6592
oolean	-6593
setDefault	-6594
▁MN	-6595
▁circle	-6596
\'};\	-6597
Cycle	-6598
riple	-6599
ttree	-6600
\347\27	-6601
\347\233\2	-6602
▁bd	-6603
6\27	-6604
ating	-6605
▁numberOf	-6606
ior	-6607
▁0);	-6608
();++	-6609
▁1]--;\	-6610
▁hasNextByte	-6611
,0)	-6612
asy	-6613
▁wt	-6614
=2;\	-6615
]+1\	-6616
▁vol	-6617
▁readint	-6618
mak	-6619
MAXM	-6620
home	-6621
ndic	-6622
=\'\\	-6623
▁inbuf	-6624
▁quit	-6625
FileInputStream	-6626
)-1;	-6627
oard	-6628
▁cat	-6629
▁events	-6630
-9	-6631
<0)\	-6632
▁},	-6633
tfac	-6634
[2]:\	-6635
\"\"\"\"	-6636
69	-6637
tX	-6638
18,	-6639
▁td	-6640
putchar	-6641
segment	-6642
ja	-6643
▁vll	-6644
DEBUG	-6645
ncost	-6646
▁numb	-6647
5*	-6648
,-1,	-6649
1(1,	-6650
tptr	-6651
tune	-6652
2+=1\	-6653
prv	-6654
(\'#	-6655
0100	-6656
nNode	-6657
ptrbuf	-6658
tHashSet	-6659
2(1,	-6660
▁/*\	-6661
▁third	-6662
onents	-6663
ontest	-6664
uments	-6665
(1),	-6666
\'){	-6667
▁2*(	-6668
▁7:\	-6669
\350\246\2	-6670
:(	-6671
▁tv	-6672
[2005];\	-6673
\345\212\233\	-6674
\331\2	-6675
▁(0);\	-6676
▁&_	-6677
▁sets	-6678
*2+	-6679
resp	-6680
▁60;	-6681
)]);\	-6682
▁must	-6683
ENT	-6684
suma	-6685
entrySet	-6686
ota	-6687
hish	-6688
npri	-6689
▁11;\	-6690
▁[1]\	-6691
nstart	-6692
75	-6693
xr	-6694
▁LCA	-6695
noutput	-6696
▁\'(\')\	-6697
[!	-6698
1<=	-6699
ttr	-6700
shuffle	-6701
dn	-6702
▁xc	-6703
=1<<	-6704
>=2:\	-6705
(\'1\')	-6706
\346\25	-6707
:\"	-6708
=-1;	-6709
tMap	-6710
EG	-6711
ris	-6712
▁(--	-6713
▁\'{\'	-6714
**2)	-6715
auty	-6716
nnew	-6717
1=0;\	-6718
fu	-6719
▁vd	-6720
Draw	-6721
▁6)\	-6722
][100];\	-6723
tcurrent	-6724
nleft	-6725
][0][1]	-6726
>()	-6727
▁ile	-6728
▁####	-6729
▁given	-6730
##\	-6731
offer	-6732
▁ints	-6733
treverse	-6734
▁nullptr	-6735
))+	-6736
12,	-6737
sole	-6738
lft	-6739
▁VI	-6740
1=0,	-6741
https	-6742
▁twos	-6743
common	-6744
▁include	-6745
[16	-6746
ths	-6747
ster	-6748
(1):\	-6749
▁cmax	-6750
\343\201\243	-6751
ND	-6752
[60	-6753
scn	-6754
▁}"	-6755
([])\	-6756
▁blocks	-6757
4],	-6758
▁got	-6759
])))\	-6760
▁dump	-6761
hd	-6762
tial	-6763
|=	-6764
Pri	-6765
eval	-6766
(\'-1	-6767
▁city	-6768
▁http	-6769
▁miny	-6770
*3	-6771
Good	-6772
▁Len	-6773
▁fo	-6774
mail	-6775
▁1\\	-6776
▁requi	-6777
aaaa	-6778
▁ids	-6779
\342\224\2	-6780
New	-6781
-\'0\';\	-6782
▁[1	-6783
▁indices	-6784
▁100\	-6785
]==1){\	-6786
\347\224\2	-6787
]&	-6788
gap	-6789
▁RE	-6790
2);	-6791
Change	-6792
\'0\'\	-6793
--]	-6794
1);	-6795
50;\	-6796
▁\'!	-6797
▁\'^	-6798
Sorted	-6799
▁\"1\";\	-6800
tss	-6801
▁gy	-6802
▁ia	-6803
tick	-6804
[2005	-6805
\"){\	-6806
INIT	-6807
ored	-6808
Ashish	-6809
nPoint	-6810
hasNextByte	-6811
gc	-6812
pc	-6813
▁single	-6814
**2\	-6815
()-1)	-6816
idates	-6817
(\"4	-6818
1\'\	-6819
coins	-6820
▁minim	-6821
▁\'0\';	-6822
▁positive	-6823
\346\225\260\	-6824
[2]=	-6825
Edges	-6826
isPrintableChar	-6827
xc	-6828
reas	-6829
▁but	-6830
ement	-6831
])));\	-6832
▁faster	-6833
▁person	-6834
▁Se	-6835
nine	-6836
▁tax	-6837
▁\"[\";\	-6838
▁Pr	-6839
(\'2	-6840
%2!=0	-6841
▁home	-6842
2<	-6843
mall	-6844
▁1)"	-6845
(...)	-6846
▁indx	-6847
+1)]	-6848
1),(1,	-6849
strcmp	-6850
:]	-6851
▁nq	-6852
▁tg	-6853
full	-6854
attern	-6855
▁instanceof	-6856
-2)\	-6857
▁longest	-6858
=\"\\	-6859
tical	-6860
▁Left	-6861
essage	-6862
<2>(	-6863
▁+=\	-6864
bufferPointer	-6865
+2];\	-6866
▁coef	-6867
[1]++;\	-6868
dl	-6869
nlis	-6870
▁integers	-6871
▁15;\	-6872
Random	-6873
[1005],	-6874
\320\273	-6875
\321\200	-6876
subtract	-6877
▁program	-6878
\345\200\244	-6879
tup	-6880
▁FA	-6881
▁If	-6882
user	-6883
▁reset	-6884
binarySearch	-6885
Inc	-6886
tex	-6887
▁An	-6888
(2*(	-6889
()-1,	-6890
Letter	-6891
people	-6892
▁pointer	-6893
orld	-6894
▁Merge	-6895
parents	-6896
▁\'\\0\';\	-6897
▁ki	-6898
-1][0]	-6899
>>=1;\	-6900
[0]=0;\	-6901
checked	-6902
]==\'1\':\	-6903
<8;	-6904
dsu	-6905
Binary	-6906
Co	-6907
If	-6908
▁He	-6909
▁yl	-6910
▁LIM	-6911
<(1<<	-6912
▁16;\	-6913
][2]);\	-6914
tassert	-6915
AK	-6916
^(	-6917
ky	-6918
▁rnk	-6919
integer	-6920
▁tarjan	-6921
▁4]	-6922
-1);	-6923
)]++;\	-6924
6);\	-6925
etwe	-6926
+10;\	-6927
[-1],	-6928
▁vowels	-6929
343\2	-6930
223	-6931
%10;\	-6932
<<\":	-6933
▁local	-6934
[10000];\	-6935
▁8\	-6936
/100	-6937
14\2	-6938
▁maxd	-6939
etween	-6940
(7	-6941
4(	-6942
==-1	-6943
tive	-6944
<0){\	-6945
▁large	-6946
▁contains	-6947
leg	-6948
tdis	-6949
▁1000000007);\	-6950
yi	-6951
(5,	-6952
({{	-6953
128	-6954
▁17,	-6955
▁19;	-6956
▁Trie	-6957
Answer	-6958
@@	-6959
getB	-6960
Level	-6961
Points	-6962
+2\	-6963
))){\	-6964
1!=	-6965
)-1)	-6966
nder	-6967
▁edg	-6968
▁ori	-6969
▁\'\"	-6970
1,\	-6971
ZERO	-6972
[202	-6973
32)	-6974
▁=0\	-6975
▁writeln	-6976
\345\256\2	-6977
▁CodeForces	-6978
00)	-6979
lus	-6980
▁NO	-6981
▁\'5	-6982
Item	-6983
▁Calc	-6984
▁teams	-6985
[1000],	-6986
bas	-6987
▁rn	-6988
]==1)\	-6989
▁ifact	-6990
>=0&&	-6991
accumulate	-6992
+1);	-6993
▁10],	-6994
]]+=1\	-6995
tswitch	-6996
▁nextByte	-6997
Dep	-6998
nfirst	-6999
\345\210\206	-7000
-2\	-7001
odo	-7002
tma	-7003
ttok	-7004
▁10000;\	-7005
cw	-7006
GCD	-7007
▁(100000000	-7008
==7	-7009
2\")\	-7010
▁rint	-7011
toutput	-7012
▁\"\")\	-7013
pnt	-7014
0++;\	-7015
▁Right	-7016
LR	-7017
▁Dis	-7018
▁clr	-7019
[55];\	-7020
▁2020\	-7021
▁modint	-7022
\345\220\210	-7023
2()	-7024
===	-7025
sig	-7026
(\"!	-7027
Same	-7028
tFor	-7029
▁maxa	-7030
fstream	-7031
WUB	-7032
(\'4	-7033
--;)	-7034
ule	-7035
\343\200\202	-7036
pv	-7037
1][1	-7038
▁Cnt	-7039
inite	-7040
000000\")\	-7041
▁ul	-7042
))):\	-7043
321\2	-7044
<<\'\\	-7045
person	-7046
▁answers	-7047
01\	-7048
▁repeat	-7049
▁\321\2	-7050
▁License	-7051
9)+	-7052
▁gs	-7053
tsgn	-7054
10):\	-7055
[4]={	-7056
[0][0],	-7057
)->	-7058
30,	-7059
▁gl	-7060
▁48),	-7061
[0,	-7062
uler	-7063
(20);\	-7064
\345\260\2	-7065
▁det	-7066
Printer	-7067
▁Sp	-7068
()][	-7069
▁kmp	-7070
OfLine	-7071
scores	-7072
▁alice	-7073
▁multiply	-7074
replaceAll	-7075
?\'	-7076
]];	-7077
>=0)	-7078
▁marked	-7079
▁ScanReader	-7080
▁{}	-7081
▁help	-7082
▁label	-7083
[1010][1	-7084
ko	-7085
[50	-7086
cir	-7087
tmat	-7088
▁buy	-7089
▁nei	-7090
)-1:\	-7091
▁smax	-7092
+1)/2;\	-7093
au	-7094
cor	-7095
[3])\	-7096
▁Push	-7097
UpperCase	-7098
▁998244353)	-7099
sqr	-7100
▁PP	-7101
=-1,	-7102
ible	-7103
ubes	-7104
3\225	-7105
44\27	-7106
▁12;\	-7107
NT	-7108
*((	-7109
▁nh	-7110
▁eat	-7111
[2][2]	-7112
▁1)];\	-7113
▁friends	-7114
XY	-7115
yd	-7116
==4	-7117
*2;\	-7118
ador	-7119
ider	-7120
▁30)	-7121
store	-7122
getter	-7123
▁splay	-7124
▁\"{\";\	-7125
▁10000000	-7126
lol	-7127
5555	-7128
▁pie	-7129
&(1<<	-7130
nning	-7131
][26];\	-7132
\345\233\2	-7133
1).	-7134
▁OO	-7135
(\'7	-7136
unite	-7137
▁200;	-7138
bination	-7139
65\2	-7140
▁\'4\'	-7141
who	-7142
hello	-7143
nind	-7144
clone	-7145
▁most	-7146
>=\'0\'&&	-7147
maxv	-7148
\343\201\276	-7149
reg	-7150
▁roll	-7151
\350\241\2	-7152
tmemo	-7153
[300005],	-7154
nse	-7155
tvar	-7156
sieve	-7157
loseable	-7158
▁_,	-7159
▁16;	-7160
▁bef	-7161
==-1:\	-7162
lap	-7163
▁inq	-7164
)+1):\	-7165
]+1);\	-7166
<>());\	-7167
/4	-7168
xnum	-7169
[1]][	-7170
-4	-7171
▁3*	-7172
▁+\"	-7173
▁cst	-7174
▁org	-7175
▁interval	-7176
strs	-7177
(4);\	-7178
\')\'	-7179
/1	-7180
0=	-7181
lz	-7182
ban	-7183
(\"%.8	-7184
▁parts	-7185
▁numeric	-7186
▁1000000007,	-7187
RA	-7188
tE	-7189
wr	-7190
▁SS	-7191
3720	-7192
etra	-7193
todd	-7194
▁sink	-7195
▁outer	-7196
▁yr	-7197
27\2	-7198
][4]	-7199
▁\"3	-7200
▁100,	-7201
▁Maxn	-7202
▁It	-7203
oute	-7204
Problem	-7205
product	-7206
▁\')\';\	-7207
▁wi	-7208
▁PII	-7209
][3],	-7210
after	-7211
square	-7212
queries	-7213
▁ws	-7214
▁far	-7215
][0]-	-7216
mapTo	-7217
Digits	-7218
^=	-7219
load	-7220
▁[[0]	-7221
modify	-7222
▁\":\"	-7223
▁\"0\"\	-7224
2=(	-7225
60\	-7226
__,	-7227
▁Mid	-7228
▁invr	-7229
▁\"\")	-7230
\345\210\227	-7231
87	-7232
SP	-7233
▁NC	-7234
▁hr	-7235
summ	-7236
▁250	-7237
father	-7238
\345\24	-7239
jc	-7240
nV	-7241
ndist	-7242
4=	-7243
poz	-7244
(\',	-7245
7]	-7246
ORT	-7247
nan	-7248
▁gx	-7249
*100	-7250
Head	-7251
ther	-7252
starts	-7253
\':0,\'	-7254
tit	-7255
▁jc	-7256
)/2\	-7257
stor	-7258
▁\"0\\	-7259
▁deq	-7260
Weight	-7261
\321\201	-7262
▁Round	-7263
▁Project	-7264
%2\	-7265
1.0	-7266
REP	-7267
Solve	-7268
leted	-7269
▁diag	-7270
▁Function	-7271
▁yp	-7272
\346\226\2	-7273
\351\240\2	-7274
Dis	-7275
\346\210\2	-7276
▁lin	-7277
[8];\	-7278
]][0]	-7279
aders	-7280
amage	-7281
isEnd	-7282
enwick	-7283
maximum	-7284
])*(	-7285
ough	-7286
▁0<=	-7287
▁oth	-7288
Round	-7289
▁Ma	-7290
HARD	-7291
▁nmax	-7292
▁bufferedReader	-7293
ASY	-7294
▁Ex	-7295
oder	-7296
▁exgcd	-7297
▁speed	-7298
(1000000	-7299
:2	-7300
▁MM	-7301
flip	-7302
[50];\	-7303
▁binom	-7304
▁/\	-7305
\271	-7306
▁pen	-7307
minimum	-7308
dc	-7309
Top	-7310
nindex	-7311
3720368	-7312
[100][100];\	-7313
cell	-7314
hull	-7315
37203685	-7316
gx	-7317
Now	-7318
▁yc	-7319
▁segs	-7320
[5005];\	-7321
unk	-7322
▁Pi	-7323
▁(0)	-7324
▁POW	-7325
▁common	-7326
\344\272\2	-7327
▁lps	-7328
\343\203\211	-7329
▁tf	-7330
EASY	-7331
tSet	-7332
nword	-7333
\350\250\2	-7334
37203685477	-7335
▁kq	-7336
▁qx	-7337
▁BFS	-7338
▁term	-7339
[0]));\	-7340
filename	-7341
tMyScanner	-7342
BB	-7343
(1-	-7344
din	-7345
tions	-7346
▁-2;\	-7347
_000_000	-7348
spf	-7349
▁Lo	-7350
parts	-7351
*2,	-7352
<<1|	-7353
[-1])	-7354
(\"\"))\	-7355
App	-7356
prot	-7357
▁Pos	-7358
▁isP	-7359
speed	-7360
present	-7361
▁"\'\'\'	-7362
▁smaller	-7363
\351\200\2	-7364
Py	-7365
nei	-7366
=[[]	-7367
▁hsh	-7368
-1][1]	-7369
EX	-7370
lhs	-7371
sor	-7372
taa	-7373
nG	-7374
▁bg	-7375
[201	-7376
arser	-7377
nprev	-7378
teams	-7379
▁pred	-7380
▁arguments	-7381
?-1:	-7382
system	-7383
▁coin	-7384
][5];\	-7385
]==\'0\':\	-7386
▁positions	-7387
\357\274\214	-7388
)(2	-7389
nab	-7390
];}\	-7391
hort	-7392
Begin	-7393
▁mpow	-7394
▁\'\'\'\	-7395
EOF	-7396
▁\");	-7397
ression	-7398
nam	-7399
▁*)	-7400
▁uu	-7401
▁PR	-7402
-1]>	-7403
▁499	-7404
▁++){\	-7405
▁dinic	-7406
\343\203\210	-7407
%7	-7408
IC	-7409
[9]	-7410
▁Mx	-7411
▁mf	-7412
[1111	-7413
▁Value	-7414
]==0):\	-7415
▁initialize	-7416
3720368547758	-7417
org	-7418
▁END	-7419
==3:\	-7420
▁{}\"	-7421
▁\'*\';\	-7422
+2][	-7423
▁MAXM	-7424
▁unit	-7425
▁Python	-7426
ustom	-7427
rength	-7428
[1010],	-7429
els	-7430
Task	-7431
gest	-7432
ArrayInputStream	-7433
▁PB	-7434
▁qi	-7435
mass	-7436
nmat	-7437
[20],	-7438
nString	-7439
▁\"1\":\	-7440
game	-7441
[1]))	-7442
[5000	-7443
▁inlt	-7444
]={};\	-7445
command	-7446
_3	-7447
▁suc	-7448
▁seed	-7449
▁{}\".	-7450
vertices	-7451
1,1,	-7452
>0&&	-7453
very	-7454
3));\	-7455
[11];\	-7456
finish	-7457
disable	-7458
(-(	-7459
conv	-7460
Block	-7461
▁1),\	-7462
▁coord	-7463
▁getSum	-7464
qry	-7465
▁ga	-7466
\'0\')	-7467
ale	-7468
oor	-7469
[2]+	-7470
▁tam	-7471
**2)\	-7472
▁(100	-7473
fig	-7474
)),\	-7475
extra	-7476
[0][0];\	-7477
han	-7478
▁IT	-7479
▁hit	-7480
Equal	-7481
▁lens	-7482
-1]))\	-7483
OWN	-7484
▁leaves	-7485
<\'0\'||	-7486
▁warning	-7487
1=(	-7488
none	-7489
(\"%.6	-7490
▁pivot	-7491
non	-7492
uzzle	-7493
getBytes	-7494
2233720368547758	-7495
▁bk	-7496
Area	-7497
▁cad	-7498
▁(;;)	-7499
active	-7500
memory	-7501
]==1):\	-7502
??????????	-7503
Al	-7504
▁bst	-7505
▁cha	-7506
pol	-7507
▁Pre	-7508
reach	-7509
▁Dice	-7510
tTreeSet	-7511
71	-7512
rp	-7513
tio	-7514
ntmp	-7515
[110][1	-7516
initial	-7517
smallest	-7518
java	-7519
gra	-7520
▁23,	-7521
▁ter	-7522
Tok	-7523
]+(	-7524
▁ei	-7525
▁guy	-7526
2)):\	-7527
▁findSet	-7528
▁flo	-7529
▁ansx	-7530
▁face	-7531
)(\'	-7532
Heap	-7533
rays	-7534
-1]!=	-7535
acket	-7536
_.	-7537
Zeros	-7538
▁Sort	-7539
▁\')"	-7540
reasing	-7541
tparent	-7542
▁\",\";\	-7543
\343\201\206	-7544
▁cons	-7545
▁bucket	-7546
MA	-7547
ital	-7548
▁pwr	-7549
[100005	-7550
[1]));\	-7551
lowercase	-7552
[1000010],	-7553
zi	-7554
()<	-7555
mex	-7556
imit	-7557
▁\']	-7558
▁some	-7559
deredDict	-7560
mis	-7561
lint	-7562
owers	-7563
▁fuck	-7564
nax	-7565
&...	-7566
▁how	-7567
roper	-7568
tnums	-7569
▁Date	-7570
▁user	-7571
16;\	-7572
▁Size	-7573
▁cmin	-7574
▁header	-7575
ita	-7576
▁LS	-7577
▁qy	-7578
0),(0,	-7579
005];\	-7580
isalpha	-7581
MQ	-7582
tI	-7583
wt	-7584
▁trav	-7585
90	-7586
>1)	-7587
OL	-7588
(_)	-7589
*=(	-7590
joint	-7591
▁matr	-7592
▁smin	-7593
▁getans	-7594
................	-7595
13,	-7596
/2))\	-7597
itertools	-7598
▁character	-7599
▁New	-7600
▁500;\	-7601
▁system	-7602
▁generate	-7603
][1]-	-7604
reserve	-7605
npr	-7606
-1)"	-7607
What	-7608
]]:\	-7609
lags	-7610
that	-7611
iable	-7612
▁disp	-7613
inverse	-7614
▁modinv	-7615
poly	-7616
star	-7617
▁actual	-7618
▁define	-7619
(~	-7620
Br	-7621
]>=0	-7622
10101	-7623
reset	-7624
▁subtree	-7625
TC	-7626
vb	-7627
▁$	-7628
aei	-7629
}}\	-7630
+\");\	-7631
default	-7632
▁Object	-7633
Com	-7634
LOG	-7635
]+1,	-7636
arri	-7637
tscan	-7638
▁what	-7639
actice	-7640
▁there	-7641
addEdge	-7642
▁format	-7643
▁inside	-7644
▁license	-7645
\345\255\227	-7646
▁19,	-7647
)+1);\	-7648
HI	-7649
lm	-7650
(26,	-7651
2,3,	-7652
▁fil	-7653
▁sim	-7654
][55];\	-7655
▁finally	-7656
)<(	-7657
Nodes	-7658
rig	-7659
3){\	-7660
+1]==	-7661
▁___	-7662
())))	-7663
error	-7664
▁();\	-7665
▁\"11	-7666
status	-7667
3456789	-7668
▁capacity	-7669
:/	-7670
▁=0	-7671
aste	-7672
▁tans	-7673
tPriorityQueue	-7674
Moves	-7675
[0]!=	-7676
▁mapa	-7677
%2==1)	-7678
\345\244\247	-7679
Ru	-7680
Deg	-7681
4444	-7682
▁\'|	-7683
roperties	-7684
sd	-7685
▁dw	-7686
mbol	-7687
tlow	-7688
▁poww	-7689
2**	-7690
//10	-7691
stop	-7692
▁48,	-7693
theta	-7694
(\"2\");\	-7695
VAL	-7696
▁\'[	-7697
>>();\	-7698
heapify	-7699
=3	-7700
avg	-7701
▁fprintf	-7702
▁object	-7703
Inf	-7704
▁tu	-7705
<10000	-7706
[15];\	-7707
▁powers	-7708
▁segments	-7709
*4	-7710
=[]	-7711
▁=>	-7712
▁Al	-7713
hand	-7714
Union	-7715
[2:]\	-7716
ana	-7717
skip	-7718
object	-7719
compute	-7720
▁balance	-7721
je	-7722
▁rf	-7723
++++	-7724
▁mincost	-7725
],&	-7726
▁qe	-7727
ypot	-7728
aeiou	-7729
indow	-7730
Square	-7731
Un	-7732
Day	-7733
esh	-7734
Ones	-7735
pattern	-7736
▁modPow	-7737
*60	-7738
Oct	-7739
[0]].	-7740
▁99999999	-7741
yc	-7742
▁((0)	-7743
▁105;\	-7744
▁multiple	-7745
ross	-7746
▁combine	-7747
----------\	-7748
([\"	-7749
▁sout	-7750
(1));\	-7751
▁parents	-7752
▁endregion	-7753
▁1]),	-7754
▁ends	-7755
BA	-7756
fg	-7757
_00	-7758
ting	-7759
▁!=0	-7760
▁cup	-7761
▁Alex	-7762
▁linf	-7763
0,1,0,	-7764
ius	-7765
<100	-7766
▁25;	-7767
▁26)	-7768
▁aaa	-7769
)-1]\	-7770
needed	-7771
▁distinct	-7772
▁ks	-7773
▁stok	-7774
==2):\	-7775
tinline	-7776
▁\"1\"\	-7777
▁Headers	-7778
93	-7779
▁look	-7780
1,0,-1,	-7781
▁\'?\')\	-7782
▁correct	-7783
\343\201\223	-7784
uo	-7785
Mat	-7786
[0]>	-7787
▁added	-7788
(3*	-7789
▁>(	-7790
}\'.	-7791
acters	-7792
lk	-7793
(2):\	-7794
▁give	-7795
▁\347\2	-7796
&-	-7797
+((	-7798
tra	-7799
100\	-7800
conj	-7801
▁\")"	-7802
largest	-7803
▁Properties	-7804
aks	-7805
nis	-7806
izont	-7807
andard	-7808
▁become	-7809
▁starts	-7810
BIT	-7811
minx	-7812
▁End	-7813
2();\	-7814
event	-7815
paper	-7816
circle	-7817
collections	-7818
▁binarySearch	-7819
Oh	-7820
▁ka	-7821
Cube	-7822
rite	-7823
▁26\	-7824
▁\">	-7825
))));\	-7826
jp	-7827
+\".	-7828
=10\	-7829
nScanner	-7830
bid	-7831
dim	-7832
nss	-7833
▁>&	-7834
both	-7835
▁[2,	-7836
(1,1,	-7837
▁\'-\'){\	-7838
\343\202\201	-7839
+4	-7840
tdec	-7841
ordinates	-7842
▁snumChars	-7843
wy	-7844
cyc	-7845
10011	-7846
equal	-7847
▁((((	-7848
▁1005;\	-7849
2=[]\	-7850
[2002	-7851
ttable	-7852
nmatrix	-7853
▁getsum	-7854
divisors	-7855
############\	-7856
geom	-7857
-1])%	-7858
osite	-7859
▁imag	-7860
BC	-7861
▁Qu	-7862
▁tak	-7863
light	-7864
▁javax	-7865
▁emplace	-7866
bu	-7867
10[	-7868
11\	-7869
▁cntr	-7870
fileName	-7871
1\'	-7872
imp	-7873
▁bot	-7874
==\'\\	-7875
)-1]	-7876
6):\	-7877
▁Mul	-7878
erent	-7879
ume	-7880
[-1][	-7881
nprime	-7882
▁1][0];\	-7883
nQ	-7884
]-1	-7885
tbw	-7886
]]+	-7887
▁fe	-7888
ellow	-7889
(20000	-7890
▁changes	-7891
fc	-7892
nth	-7893
++].	-7894
=0):	-7895
[256	-7896
teven	-7897
▁&...	-7898
ifndef	-7899
osthen	-7900
▁LOCAL	-7901
▁	-7902
n	-7903
\	-7904
t	-7905
i	-7906
e	-7907
r	-7908
a	-7909
s	-7910
(	-7911
)	-7912
o	-7913
;	-7914
=	-7915
l	-7916
u	-7917
c	-7918
p	-7919
d	-7920
[	-7921
]	-7922
f	-7923
m	-7924
,	-7925
g	-7926
+	-7927
0	-7928
1	-7929
.	-7930
<	-7931
b	-7932
{	-7933
}	-7934
"	-7935
x	-7936
:	-7937
-	-7938
>	-7939
h	-7940
v	-7941
2	-7942
j	-7943
y	-7944
w	-7945
k	-7946
S	-7947
_	-7948
'	-7949
*	-7950
/	-7951
3	-7952
P	-7953
I	-7954
&	-7955
N	-7956
T	-7957
A	-7958
%	-7959
#	-7960
O	-7961
z	-7962
L	-7963
M	-7964
C	-7965
4	-7966
q	-7967
5	-7968
E	-7969
!	-7970
R	-7971
B	-7972
Y	-7973
H	-7974
|	-7975
7	-7976
F	-7977
D	-7978
6	-7979
9	-7980
V	-7981
?	-7982
W	-7983
X	-7984
8	-7985
J	-7986
U	-7987
G	-7988
K	-7989
Q	-7990
^	-7991
Z	-7992
@	-7993
~	-7994
$	-7995
`	-7996
